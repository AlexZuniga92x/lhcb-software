// 
// MEPRxSvc.opts
// $Id: MEPRxSvc.opts,v 1.4 2008-04-29 11:37:10 evh Exp $
// Sample options for the eventbuilder service MEPRxSvc
// niko.neufeld@cern.ch
#include "$HLTOPTS/OnlineEnvironment.opts"
ApplicationMgr.HistogramPersistency  = "NONE";
ApplicationMgr.EvtSel                = "NONE";
ApplicationMgr.Dlls                  = { "MDF", "GaudiOnline", "Gaucho"};
ApplicationMgr.EventLoop             = "LHCb::OnlineRunable/EmptyEventLoop";
ApplicationMgr.Runable               = "LHCb::MEPRxSvc/Runable";
ApplicationMgr.SvcOptMapping         = { "LHCb::OnlineRunable/EmptyEventLoop" , "LHCb::MEPRxSvc/Runable" };
ApplicationMgr.ExtSvc                = { "IncidentSvc"  };
ApplicationMgr.ExtSvc		    += { "MonitorSvc" };
MEPManager.PartitionID               = @OnlineEnv.PartitionID;
MEPManager.Buffers                   = { "MEP" };
//MEPManager.MapUnusedBuffers          = false;
MessageSvc.OutputLevel   = 1;
Runable.OutputLevel      = 1;
Runable.MEPBuffers       = 3;          // concurrently built events
//Runable.initialMEPReq    = 3;
Runable.maxBadPktRatio   = 0.1;     // maximum fraction of erroneous packets during sampling time before going into state ERROR - this is currently disabled
Runable.pktSamplingCount = 100;  // number of packets to sample to determine error ratio
Runable.maxMsForGetSpace = 100;  // milliseconds to wait to get buffer memory from BM
Runable.partitionID      = @OnlineEnv.PartitionID;
Runable.MEPBufSize       = 21000000; // maximum MEP, make sure that there is
                                     // enough space declared in MEPInit.opts
                                     // you will need MEPBuffers * MEPBufsize
Runable.sockBuf          = 30000000; // this must be supported by the kernel! 
Runable.refCount         = 2;
Runable.RTTCCompat       = false;       // for RTTC backward compatibility
#include "$HLTOPTS/EBSetup.opts"
