! $Id: release.notes,v 1.29 2009-08-25 10:25:37 ggiacomo Exp $
! Package     : OMAlib
! Responsible : G. Graziani
! Purpose     : Online Monitoring Analysis library

! 20090825 v2r8 
- add possibility to send alarm messages to a ascii log file (in addition to MsgService output)
- publish messages also as DIM services

! 20090616 v2r7 
- don't lower alarms if low statistics
- new algorithm CheckDeadBins to spot significantly empty bins

! 20090611 v2r6 (tested on FEST5)
- disconnect from DB at the end of every analyze call, reconnect on next saveset
  (to avoid timeouts)
- class reordering, OMAcommon renamed to OMAEnv

! 20090512 v2r5
- fixes to OMAFitTH2withSinCosC by C. Blanks

! 20090402 v2r4
 - add to fit functions:
   * optional input parameters
   * optional default values for input and fit parameters  
 - more info in alarm messages

! 20090325 v2r3
 - new check algorithm: OMAIfbMonitor by Ross Young

! 20090306 v2r2
 - improve and unify code to get histograms from root files (savesets 
   and references)
 - correct support for "any" task
 - avoid Gaudi looping eating all CPU
 - improve OMACheckHolesAndSpikes (normalize ref before comparison)
 - bug fix in OMAMsgInterface
 - fix compilation problems with gcc 4.3 and root 5.22

! 20090226 
 - new custom fit function FitTH2withSinCosC by Christopher Blanks

! 20090223 OMAlib v2r1
 - tagged by Markus after fixing compilation on windoz

! 20090218 OMAlib v2r0
 - add OMAFit algorithm for generic fit and check using OMAFitFunction
   increase list of available fit functions

! 20090216 OMAlib v2r0alpha
  - add persistency to alarm logging using HistDB:
    * OMAmessage class moved to OnlineHistDB
  - modifications to AnalysisTask: 
    * raiseMessage doesn't need the taskname anymore
    *  AnalysisTask::analyze should be called by derived classes
  - new class OMAFitFunction  to define any custom fit function for display or analysis
   
! 20081121  OMAlib v1r7
 fixes for first test with Saver:
  - correct dim service subscribtion and content checks
  - correctly find histograms from savesets in DBdrivenAnalysisTask
  - update option files

! 20081111  OMAlib v1r6
 - new convention for saveset location dim service name (requires partition
   name in option file)

! 2008-10-23 - Marco Cattaneo
 - In requirements, add dependency of application on library, to please make -j

! 20081009
  - add a tool to declare histograms to DB from a saveset 

! 20081003  OMAlib v1r5
  - add default parameter values to algorithm declaration

! 20080926 - OMAlib v1r4
  - improvements on finding reference histograms
  - new algorithm OMACheckEntriesInRange

! 20080819 - OMAlib v1r3
  - alarm logger mechanism
  - output interface defined via a GaudiTool, for the moment there is only
    the trivial OMAMsgStdOut
  - bug fix in OMACheckMeanandSigma, small improvements with algorithms messages
  - job option for reference path

! 20080813 - OMAlib v1r2
  - make OMAEfficiency and OMADivide work for both THXF/THXD inputs
  - bug fixes in OMAGaussFit and OMAlib

! 20080808 - OMAlib 
  - support for loading reference histograms
  - some reshuffling of class inheritance
  - new check algorithms: OMACheckEmptyBins, OMACompareToReference,
      OMACheckHolesAndSpikes

! 20080730 
  remove ROOT version requirement, not needed since Online v4r10

! 20080514 - OMAlib v1r1
  add OMADivide algorithm

! 20080430 
  Some style improvements:
  - remove "using statement" from header files
  - pass strings by reference and not by value when possible

! 20080314 - OMAlib v1r0
  prototype of AnalysisTask with two implementations:
   - DBDrivenAnalysisTask
   - ExampleAnalysisTask
  Saveset finder using DIM client
  More algorithms:
   - OMACheckMeanAndSigma
   - OMAGaussFit
   - OMAHMerge
   - OMAScale

! 20080205 - OMAlib v0r2
	add code for DB driven Analysis Task

! 20071011 - OMAlib v0r0
       Release first prototype of analysis library for Online Monitoring Data:
	- algorithms are implemented in src/OMAAlgorithms.cpp
	  as classes derived from OMAHcreatorAlg or OMACheckAlg 
 	- Algorithm classes are instantiated in the constructor of
	  the OMAlib class
	- the OMAlib constructor declares the algorithm to the DB if needed
	- algorithms can be called using OMAlib::getAlg("AlgorithmName")->exec(...)
