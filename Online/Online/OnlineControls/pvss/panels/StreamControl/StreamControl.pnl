V 10
1
LANG:1 26 Stream Allocation Overview
PANEL,-1 -1 472 304 N "_3DFace" 1
"$1"
"#uses \"StreamControlPanel.cpp\"

void StreamControlPanel_CheckPartitionDisplay(string dp, string value)  {
  StreamControlPanel_updatePartitionDisplay(m_sysName.text);
}
void StreamControlPanel_updatePartitionDisplay(string stream)  {
  dyn_string cols = makeDynString(\"Slice\",\"Used\",\"RNodes,\",\"RSlots\",\"SNodes\",\"SSlots\");
  dyn_dyn_string rcvSlots, strmSlots, rcvNodes, strmNodes;
  dyn_string names;
  dyn_int    used;
  int res = res = dpGet(dpNames(stream+\"_Slice*.InUse\",\"StreamPartition\"),used);
  if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice*.Name\",\"StreamPartition\"),names);
  if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice*.RecvNodes\",\"StreamPartition\"),rcvNodes);
  if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice*.StreamNodes\",\"StreamPartition\"),strmNodes);
  if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice*.RecvSlices\",\"StreamPartition\"),rcvSlots);
  if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice*.StreamSlices\",\"StreamPartition\"),strmSlots);
  if ( 0 == res )  {
    for(int i=1; i<=dynlen(used); i++) {
      if ( used[i] == 1 )  {
        m_table.cellValueRC(i-1,cols[2],names[i]);
        m_table.cellValueRC(i-1,cols[3],dynlen(rcvNodes[i]));
        m_table.cellValueRC(i-1,cols[4],dynlen(rcvSlots[i]));
        m_table.cellValueRC(i-1,cols[5],dynlen(strmNodes[i]));
        m_table.cellValueRC(i-1,cols[6],dynlen(strmSlots[i]));
        m_table.cellBackColRC(i-1,cols[1],\"{255,255,0}\");
        m_table.cellBackColRC(i-1,cols[2],\"{255,255,0}\");
        m_table.cellForeColRC(i-1,cols[2],\"{0,0,0}\");
      }
      else  {
        m_table.cellValueRC(i-1,cols[2],\"FREE\");
        m_table.cellValueRC(i-1,cols[3],\"\");
        m_table.cellValueRC(i-1,cols[4],\"\");
        m_table.cellValueRC(i-1,cols[5],\"\");
        m_table.cellValueRC(i-1,cols[6],\"\");
        m_table.cellBackColRC(i-1,cols[1],\"{255,255,255}\");
        m_table.cellBackColRC(i-1,cols[2],\"{0,150,50}\");
        m_table.cellForeColRC(i-1,cols[2],\"{255,255,255}\");
      }
    }
  }
}

void StreamControlPanel_initPartitionDisplay(string stream)  {
  dyn_string cols = makeDynString(\"Slice\",\"Used\",\"RNodes,\",\"RSlots\",\"SNodes\",\"SSlots\");
  dyn_string values = dpNames(stream+\"_Slice*.InUse\",\"StreamPartition\");
  string font = \"Arial,8,-1,5,50,0,0,0,0,0\";
  m_table.font = font;
  m_table.rowHeight = 15;
  m_table.deleteAllLines();
  for( int j=m_table.columnCount()-1; j>=0; j-- )
    m_table.deleteColumn(j);
  for(int j=0; j<dynlen(cols); ++j )  {
    m_table.insertColumn(m_table.columnCount());
    m_table.columnHeader(j,cols[j+1]);
    m_table.columnName(j,cols[j+1]);
  }
  for(int j=1; j<=dynlen(values); ++j )  {
    m_table.appendLine(cols[1],dpSubStr(values[j],DPSUB_DP),cols[2],\"\",cols[3],\"\",cols[4],\"\",cols[5],\"\",cols[6],\"\");
  }
  for(int j=0; j<dynlen(cols); ++j)  {
    m_table.adjustColumn(j);
  }
  // StreamControlPanel_updatePartitionDisplay(stream);
}

main()  {
  //DebugN($1,$2,substr($1,4),myPanelName(),myModuleName());
  string stream = substr($1,4);
  m_sysName.text = stream;
  m_sysName.backCol = \"_Transparent\";
  m_sysText.backCol = \"_Transparent\";
  m_sysText.text = \"System:\";
  m_close.visible = 0;
  StreamControlPanel_initPartitionDisplay(m_sysName.text);
  int res = dpConnect(\"StreamControlPanel_CheckPartitionDisplay\",stream+\"Alloc.State\");
  if ( 0 == res )  {
  }
}
" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E E 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 13
"m_table"
""
1 0 29 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main(int row, string column)    {
  string typ = m_table.cellValueRC(row,\"Used\");
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }
  else if ( typ == \"FREE\" )    {
    ChildPanelOn(\"vision/MessageInfo1\",\"Unused streaming slice\",makeDynString(\"This slice is not in use.\"),50,50);
  }
  else  {
    typ = m_table.cellValueRC(row,\"Slice\");
    ChildPanelOn(\"StreamControl/FSM_Control\",\"StreamOverview\",makeDynString(typ),100,100);    
  }
}
" 0
 "main(int row, string column)    {
  string typ = m_table.cellValueRC(row,\"Used\");
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }
  else if ( typ == \"FREE\" )    {
    ChildPanelOn(\"vision/MessageInfo1\",\"Unused streaming slice\",makeDynString(\"This slice is not in use.\"),50,50);
  }
  else  {
    typ = m_table.cellValueRC(row,\"Slice\");
    ChildPanelOn(\"StreamControl/FSM_Control\",\"StreamOverview\",makeDynString(typ),100,100);    
  }
}
" 0

17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 82 -*-Sans-*-r-normal-*-15-*-100-100-*-*-iso8859-1|-15,0,0,0,505,0,0,0,0,0,0,0,0,Sans
0 ""
 -2 27 470 302
EE 1 0 1 3 0 "#3" 4 1 0 "s" 1
LANG:1 4 Used
E
1
LANG:1 0 

60 "#2" 4 1 0 "s" 1
LANG:1 5 Slice
E
1
LANG:1 0 

60 "#1" 4 1 0 "s" 1
LANG:1 2 #1
E
1
LANG:1 0 

60 
19 19 10 10
1
LANG:1 82 -*-Sans-*-r-normal-*-15-*-100-100-*-*-iso8859-1|-15,0,0,0,505,0,0,0,0,0,0,0,0,Sans
0 ""
0 1 1 1 7
1 0
2 15
"m_sysText"
""
1 23 12 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 5 1 195 28
0 2 2 "0s" 0 0 0 64 0 0  5 1 1
1
LANG:1 112 -*-Bitstream Vera Sans-*-r-normal-*-23-*-100-100-*-*-iso8859-1|-23,0,0,0,505,0,0,0,0,0,0,0,0,Bitstream Vera Sans
0 ""
1
LANG:1 0 
2 16
"m_sysName"
""
1 161 12 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 146 2 409 28
0 2 2 "0s" 0 0 0 64 0 0  146 2 1
1
LANG:1 112 -*-Bitstream Vera Sans-*-r-normal-*-23-*-100-100-*-*-iso8859-1|-23,0,0,0,505,0,0,0,0,0,0,0,0,Bitstream Vera Sans
0 ""
1
LANG:1 0 
13 17
"m_close"
""
1 419 -2.220446049250313e-16 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 112 -*-Bitstream Vera Sans-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,Bitstream Vera Sans
0 ""
 417 -2 467 24

T 
1
LANG:1 5 Close
"main()    {  PanelOff();      }" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0