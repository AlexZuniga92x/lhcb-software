V 11
1
LANG:1 26 Stream Allocation Overview
PANEL,-1 -1 472 339 N "_3DFace" 2
"$1"
"$2"
"void StreamControlPanel_CheckPartitionDisplay(string dp, string value)  {
  StreamControlPanel_updatePartitionDisplay(m_sysName.text);
}
void StreamControlPanel_updatePartitionDisplay(string stream)  {
  dyn_string cols = makeDynString(\"Slice\",\"Used\",\"RNodes,\",\"RSlots\",\"SNodes\",\"SSlots\");
  dyn_dyn_string rcvSlots, strmSlots, rcvNodes, strmNodes;
  dyn_string items, names;
  dyn_int    used;
  int stat = -1, res = -1;
  items = dpNames(stream+\"_Slice??.InUse\",\"StreamPartition\");
  DebugN(\"StreamControlPanel_updatePartitionDisplay> Read data from \"+stream+\" Len:\"+dynlen(items));
  if ( dynlen(items)<=0 )   {
    res = dpGet(dpNames(stream+\"_Slice??.InUse\"),used);
    if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice??.Name\"),names);
  }
  else {
    res = dpGet(items,used);
    if ( 0 == res ) res = dpGet(dpNames(stream+\"_Slice??.Name\",\"StreamPartition\"),names);
    if ( 0 == res ) stat = dpGet(dpNames(stream+\"_Slice??.RecvNodes\",\"StreamPartition\"),rcvNodes);
    if ( 0 == stat ) stat = dpGet(dpNames(stream+\"_Slice??.StreamNodes\",\"StreamPartition\"),strmNodes);
    if ( 0 == stat ) stat = dpGet(dpNames(stream+\"_Slice??.RecvSlices\",\"StreamPartition\"),rcvSlots);
    if ( 0 == stat ) stat = dpGet(dpNames(stream+\"_Slice??.StreamSlices\",\"StreamPartition\"),strmSlots);
  }
  DebugN(\"StreamControlPanel_updatePartitionDisplay> Read data from \"+stream);
  if ( 0 == res )  {
    for(int i=1; i<=dynlen(used); i++) {
      if ( used[i] == 1 )  {
        m_table.cellValueRC(i-1,cols[2],names[i]);
        if ( 0 == stat ) {
          m_table.cellValueRC(i-1,cols[3],dynlen(rcvNodes[i]));
          m_table.cellValueRC(i-1,cols[4],dynlen(rcvSlots[i]));
          m_table.cellValueRC(i-1,cols[5],dynlen(strmNodes[i]));
          m_table.cellValueRC(i-1,cols[6],dynlen(strmSlots[i]));
        }
        m_table.cellBackColRC(i-1,cols[1],\"{255,255,0}\");
        m_table.cellBackColRC(i-1,cols[2],\"{255,255,0}\");
        m_table.cellForeColRC(i-1,cols[1],\"{0,0,0}\");
        m_table.cellForeColRC(i-1,cols[2],\"{0,0,0}\");
      }
      else  {
        m_table.cellValueRC(i-1,cols[2],\"FREE\");
        m_table.cellValueRC(i-1,cols[3],\"\");
        m_table.cellValueRC(i-1,cols[4],\"\");
        m_table.cellValueRC(i-1,cols[5],\"\");
        m_table.cellValueRC(i-1,cols[6],\"\");
        m_table.cellBackColRC(i-1,cols[1],\"{255,255,255}\");
        m_table.cellBackColRC(i-1,cols[2],\"{0,150,50}\");
        m_table.cellForeColRC(i-1,cols[1],\"{0,0,0}\");
        m_table.cellForeColRC(i-1,cols[2],\"{255,255,255}\");
      }
    }
    return;
  }
  DebugN(\"StreamControlPanel_updatePartitionDisplay> Cannot read data from \"+stream);
}

void StreamControlPanel_initPartitionDisplay(string stream)  {
  dyn_string cols = makeDynString(\"Slice\",\"Used\",\"RNodes,\",\"RSlots\",\"SNodes\",\"SSlots\");
  dyn_string values = dpNames(stream+\"_Slice??.InUse\",\"StreamPartition\");
  string font = \"Arial,8,-1,5,50,0,0,0,0,0\";
  if ( dynlen(values)<=0 )   {
    values = dpNames(stream+\"_Slice??.InUse\");
    m_table.enabled = 0;
  }
  m_table.font = font;
  m_table.rowHeight = 15;
  m_table.deleteAllLines();
  for( int j=m_table.columnCount()-1; j>=0; j-- )
    m_table.deleteColumn(j);
  for(int j=0; j<dynlen(cols); ++j )  {
    m_table.insertColumn(m_table.columnCount());
    m_table.columnHeader(j,cols[j+1]);
    m_table.columnName(j,cols[j+1]);
  }
  for(int j=1; j<=dynlen(values); ++j )  {
    m_table.appendLine(cols[1],dpSubStr(values[j],DPSUB_DP),cols[2],\"\",cols[3],\"\",cols[4],\"\",cols[5],\"\",cols[6],\"\");
  }
  for(int j=0; j<dynlen(cols); ++j)  {
    m_table.adjustColumn(j);
  }
}

main()  {
  float x,y;
  string stream, embedded, dp, sysdp, sys=getSystemName();
  //if ( sys == \"MONITORING:\" )
  //  stream = \"Monitoring\";
  //else if ( sys == \"STORAGE:\" )
  //  stream = \"Storage\";
  //else
  stream = substr($1,4);
  embedded = $2;
  dp = stream+\"Alloc.State\";
  sysdp = strtoupper(stream)+\":\"+dp;
  DebugN(\"SystemName:\"+getSystemName());
  DebugN(\"1:\",$1,\"2:\",$2,\"Stream:\",stream,\"DP:\",dp,\"SysDP:\",sysdp);
  m_sysName.text = stream;
  m_sysName.backCol = \"_Transparent\";
  m_sysText.backCol = \"_Transparent\";
  m_sysText.text = \"System:\";
  m_close.visible = isPanelOpen(\"StreamOverview\");
  m_streamEditor.visible = !m_close.visible;
  if ( embedded == \"embedded\" )   {
    m_close.visible = false;
    if ( stream == \"Reconstruction\" )  {
      getValue(\"m_table\",\"size\",x,y);
      setValue(\"m_table\",\"size\",x,120);
      getValue(\"m_streamEditor\",\"position\",x,y);
      setValue(\"m_streamEditor\",\"position\",x,y-150);
      getValue(\"m_sliceEditor\",\"position\",x,y);
      setValue(\"m_sliceEditor\",\"position\",x,y-150);
      getValue(\"m_jobOptions\",\"position\",x,y);
      setValue(\"m_jobOptions\",\"position\",x,y-150);
      getValue(\"m_sysName\",\"position\",x,y);
      setValue(\"m_sysName\",\"position\",x,y-150);
      getValue(\"m_sysText\",\"position\",x,y);
      setValue(\"m_sysText\",\"position\",x,y-150);
    }
  }
  if ( dpExists(dp) )  {
    DebugN(\"Exists:\"+dp);
    StreamControlPanel_initPartitionDisplay(m_sysName.text);
    dpConnect(\"StreamControlPanel_CheckPartitionDisplay\",dp);
  }
  else if ( dpExists(sysdp) )  {
    DebugN(\"Exists:\"+sysdp);
    m_sysName.text = strtoupper(stream)+\":\"+stream;
    StreamControlPanel_initPartitionDisplay(m_sysName.text);
    dpConnect(\"StreamControlPanel_CheckPartitionDisplay\",sysdp);
  }
  else  {
    StreamControlPanel_initPartitionDisplay(m_sysName.text);
  }
}
" 0
 E E "main()    {
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }  
}" 0
 E 1 -1 -1 0  0 0
""0  1
E "#uses \"StreamControlPanel.cpp\"
#uses \"JobOptions.cpp\"" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 13
"m_table"
""
1 2.99999999999997 4 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main(int row, string column)    {
  string typ = m_table.cellValueRC(row,\"Used\");
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }
  else if ( typ == \"FREE\" )    {
    ChildPanelOn(\"vision/MessageInfo1\",\"Unused streaming slice\",makeDynString(\"This slice is not in use.\"),50,50);
  }
  else  {
    typ = m_table.cellValueRC(row,\"Slice\");
    ChildPanelOn(\"StreamControl/FSM_Control\",\"StreamOverview\",makeDynString(typ),100,100);    
  }
}
" 0
 "main(int row, string column)    {
  string typ = m_table.cellValueRC(row,\"Used\");
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }
  else if ( typ == \"FREE\" )    {
    string slice = m_table.cellValueRC(row,\"Slice\");
    ChildPanelOn(\"vision/MessageInfo1\",
                 \"Unused streaming slice\",
                 makeDynString(\"The slice '\"+slice+\"' is not in use.\"),50,50);
  }
  else  {
    typ = m_table.cellValueRC(row,\"Slice\");
    ChildPanelOn(\"StreamControl/FSM_Control\",\"StreamOverview\",makeDynString(typ),100,100);    
  }
}
" 0

17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 25 Sans,-1,15,5,50,0,0,0,0,0
0  1 2 470 277
EE 1 0 1 3 0 "#3" 4 1 0 "s" 1
LANG:1 4 Used
E
1
LANG:1 0 

60 "#2" 4 1 0 "s" 1
LANG:1 5 Slice
E
1
LANG:1 0 

60 "#1" 4 1 0 "s" 1
LANG:1 2 #1
E
1
LANG:1 0 

60 
19 19 10 10
1
LANG:1 25 Sans,-1,15,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
2 15
"m_sysText"
""
1 21 18 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 0 308 190 335
0 2 2 "0s" 0 0 0 64 0 0  0 308 1
1
LANG:1 40 Bitstream Vera Sans,-1,17,5,50,0,0,0,0,0
0 1
LANG:1 0 
13 17
"m_close"
""
1 390 310 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 40 Bitstream Vera Sans,-1,11,5,50,0,0,0,0,0
0  388 308 472 332

T 
1
LANG:1 5 Close
"main()    {  PanelOff();      }" 0
 E E E
13 18
"m_jobOptions"
""
1 390 280 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 "main()    {
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }  
}" 0
 E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 40 Bitstream Vera Sans,-1,11,5,50,0,0,0,0,0
0  388 278 472 303

T 
1
LANG:1 11 Job options
"main()   {   ChildPanelOn(\"JobOptions/JobOptions\",\"JobOptions\",makeDynString(),100,100);  }
" 0
 E E E
13 19
"m_streamEditor"
""
1 300 281 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 "main()    {
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }  
}" 0
 E
23 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 40 Bitstream Vera Sans,-1,11,5,50,0,0,0,0,0
0  298 279 382 304

T 
1
LANG:1 13 Stream editor
"main()   {   ChildPanelOn(\"StreamControl/StreamConfigurationPanel\",\"StreamConfiguration\",makeDynString($1,$2),100,100);  }
" 0
 E E E
2 16
"m_sysName"
""
1 114 18 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()    {
  if ( isPanelOpen(\"StreamOverview\")  )  {
    PanelOffPanel(\"StreamOverview\");
  }  
}" 0
 E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 70 309 385 335
0 2 2 "0s" 0 0 0 64 0 0  70 309 1
1
LANG:1 40 Bitstream Vera Sans,-1,17,5,50,0,0,0,0,0
0 1
LANG:1 0 
13 20
"m_sliceEditor"
""
1 212 281 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 "main()    {
  if ( isPanelOpen(\"SliceOverview\")  )  {
    PanelOffPanel(\"SliceOverview\");
  }  
}" 0
 E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 40 Bitstream Vera Sans,-1,11,5,50,0,0,0,0,0
0  210 279 294 304

T 
1
LANG:1 12 Slice editor
"main()   {   ChildPanelOn(\"StreamControl/SliceEditor\",\"SliceEditor\",makeDynString($1,$2),100,100);  }
" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
