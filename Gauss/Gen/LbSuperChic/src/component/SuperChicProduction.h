#ifndef LBSUPERCHIC_SUPERCHICPRODUCTION_H 
#define LBSUPERCHIC_SUPERCHICPRODUCTION_H 1

using namespace std;

// Beamtool declaration.
class IBeamTool;

/**
 * Production tool to generate events with SuperChic.
 *
 * SuperChic is a dedicated Monte Carlo generator for the production
 * of central exclusive production (CEP) events. Final states of
 * J/psi, psi(2S), Upsilon, gamma gamma, chi_x, eta_x, pi pi, eta eta,
 * eta' eta', eta eta', and rho rho can be produced. Because the
 * events are CEP, no additional part of the event (shower, MPI, etc.)
 * needs to be generated by a shower tool. The SuperChic page can be
 * found at https://superchic.hepforge.org/ with documentation provided
 * in arXiv:0909.4748, arXiv:1005.0695, arXiv:1011.0680,
 * arXiv:1105.1626, and arXiv:1302.2004.
 *
 * All processes produced by SuperChic are of the form p(1) p(2) ->
 * p(3) X(5) p(4). The following options can be set by the Commands
 * configurable. For example the Commands vector ["xflag ups", "decay
 * 3", "idh1 211", "idh2 -211"] would configure SuperChic for Upsilon
 * photoproduction where the Upsilon decays into a pion final state.
 *
 * xflag:   determines what X(5) is.
 *          	'chic':    chi_c
 *          	'chib':	   chi_b
 *          	'etac':	   eta_c
 *          	'etab':	   eta_b
 *          	'pi':      pi0 pi0
 *          	'pipm':    pi+ pi-
 *          	'rho':     rho0 rho0
 *          	'etap':    eta' eta'
 *          	'etaetap': eta eta'
 *          	'kpkm':    K+ K-
 *          	'ks':      K0 K0
 *          	'jpsi':	   J/psi
 *          	'ups':	   Upsilon(1S)
 *          	'psip':	   psi(2S)
 * chiflag:  sets what chi_x is: 0 (0++), 1 (1++), 2 (2++).
 * decay:    sets the decay channel for chi_x decays. For eta_x decays, the 
 * 	     decay mode is always 2. If not 1 the masses and PDG IDs of the
 * 	     decay products need to be set via idh[1234] and mh[12].
 * 	      	1: gamma psi/Upsilon[mu mu]
 * 		2: fermion fermion
 * 		3: scalar scalar
 * 		4: 4-body phase space (chi_c only)
 * idh[1-4]: PDG IDs of the decay products when using 'decay'.
 * mh[1-2]:  masses of decay products.
 * 	  	1: masses of decay products 1 and 2.
 * 		2: masses of decay products 3 and 4.
 * phdecay:  sets the decay channel for J/psi, Upsilon, and psi(2S) production.
 * 	        'mu':    mu mu
 * 		'psipi': J/psi[mu mu] pi+ pi- (psi(2S) only)
 * eflag:    center of mass energy.
 * 	  	300: 0.3 TeV (meson pair only)
 * 	  	500: 0.5 TeV (chi_c only)
 * 	  	900: 0.9 TeV (meson pair only)
 * 		2:   1.96 TeV
 * 		7:   7 TeV
 * 		8:   8 TeV
 * 		10:  10 TeV
 * 		14:  14 TeV
 *  gen:     type of kinematics to use.
 * 	      	'fit':   approximate kinematics but faster running.
 * 		'exact': exact kinematics.
 * photo:    for J/psi, Upsilon, and psi(2S) production inidicates method.
 * 	        'fit':    uses HERA data.
 * 		'theory': uses LO theory (PDF dependent).
 * chiv:     additional fit to g g -> chi_x2 vertex.
 * 	        1: gives best description of the proton pT.
 * 		2: gives best description of the chi_x pT.
 * surv:     survival factors flag, either 'on' or 'off'.
 * corr:     include spin correlations in decays, either 'on' or 'off'.
 *
 * @class  SuperChicProduction
 * @file   SuperChicProduction.h 
 * @author Philip Ilten
 * @date   2015-06-12
 */
class SuperChicProduction : public GaudiTool, virtual public IProductionTool {
 public:
  typedef vector<string> CommandVector;
  
  /// Default constructor.
  SuperChicProduction(const string &type, const string &name,
		      const IInterface *parent);
  
  /// Default destructor.
  virtual ~SuperChicProduction();
  
  /**
   * Initialize the tool.
   *
   * First initialize the Gaudi tool and beam tool, then read the
   * default and user settings, and finally set the center-of-mass
   * energy.
   */
  virtual StatusCode initialize();
  
  /// Finalize the tool.
  virtual StatusCode finalize(); 
  
  /// Initialize the SuperChic generator.
  virtual StatusCode initializeGenerator();
  
  /// Generate an event.
  virtual StatusCode generateEvent(HepMC::GenEvent *theEvent, 
				   LHCb::GenCollision *theCollision);

  /**
   * Convert the SuperChic HepEvt record to HepMC format.
   *
   * If m_decays is false (set by the configurable Decays) then all
   * decay products from SuperChic are removed from the event record
   * and all particles are marked as stable within the production
   * generator. EvtGen (or the decay tool) will then be used to decay
   * these particles.
   */
  virtual StatusCode toHepMC (HepMC::GenEvent *theEvent);

  /**
   * Update particles properties.
   *
   * This method does nothing unless the parameter decay is set to 2,
   * 3, or 4 and either chi_x or eta_x production. Then, the parameter
   * mh1, if set to -1, will be updated to the mass of the particle
   * specified by the PDG ID of idh1. Similarly, the parameter mh2
   * will be updated to the mass of the particle given by the PDG ID
   * specified by idh3 (note this is not idh2).
   **/
  virtual void updateParticleProperties(const LHCb::ParticleProperty *thePP);

  /// This method is not implemented.
  virtual void setStable(const LHCb::ParticleProperty *thePP);

  /// This method is not implemented.
  virtual void savePartonEvent(HepMC::GenEvent *theEvent);

  /// This method is not implemented.
  virtual void retrievePartonEvent( HepMC::GenEvent *theEvent);
  
  /// This method is not implemented.
  virtual StatusCode hadronize(HepMC::GenEvent *theEvent, 
			       LHCb::GenCollision *theCollision);
  
  /// This method is not implemented.
  virtual void printRunningConditions();

  /// This method is not implemented.
  virtual bool isSpecialParticle(const LHCb::ParticleProperty *thePP) const;

  /// This method is not implemented.
  virtual StatusCode setupForcedFragmentation(const int thePdgId);

  /// This method is not implemented.
  virtual void turnOnFragmentation();

  /// This method is not implemented.
  virtual void turnOffFragmentation();

protected:

  /// Parse the SuperChic settings.
  StatusCode parseSettings(const CommandVector &settings);

private:

  CommandVector m_defaultSettings; ///< SuperChic default settings.
  CommandVector m_userSettings;    ///< SuperChic user settings.
  bool          m_decays;          ///< Allow SuperChic to perform the decay.
  string        m_beamToolName;    ///< Name of beam tool.
  IBeamTool    *m_beamTool;        ///< The Gaudi beam tool.
  int           m_tries;           ///< Number of SuperChic tries.
};

#endif // LBSUPERCHIC_SUPERCHICPRODUCTION_H
