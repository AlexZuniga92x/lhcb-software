#ifndef LBBCVEGPY_BCVEGPYPRODUCTION_H 
#define LBBCVEGPY_BCVEGPYPRODUCTION_H 1

// LbHard.
#include "LbHard/HardProduction.h"

/** 
 * Production tool to generate events with BcVegPy.
 * 
 * BcVegPy is a dedicated Monte Carlo generator for the production of
 * B_c states, both S-wave and P-wave. The generator produces the
 * initial hard process g g -> B_c b c-bar. The remainder of the event
 * (shower, MPI, etc.) is generated by one of the shower tools
 * implemented via the HardProduction interface. The original BcVegPy
 * paper is arXiv:hep-ph/0309120, while the updated paper is
 * arXiv:hep-ph/0504017 and a combined BcVegPya and GenXicc paper is
 * arXiv:1307.3344.
 *
 * @class  BcVegPyProduction
 * @file   BcVegPyProduction.h 
 * @author Jibo He
 * @author Zhenwei Yang
 * @author Philip Ilten
 * @date   2006-03-02
 */
class BcVegPyProduction : public HardProduction {
public:

  /// Default constructor.
  BcVegPyProduction(const std::string &type, const std::string &name,
		    const IInterface *parent);

  /**
   * Initialize the hard process tool.
   *
   * This is called by HardProduction::initialize prior to
   * initialization of the shower. Here, the Pythia production tool is
   * retrieved and configured, the Pythia 8 LHAup pointer is created,
   * and the BcVegPy initialization is performed.
   */
  StatusCode hardInitialize();

  /// Update Pythia particle and the B_c, c-quark, or b-quark mass.
  void hardUpdateParticleProperties(const LHCb::ParticleProperty *thePP);
  
protected:
  
  /// Parse the BcVegPy settings.
  StatusCode parseSettings(const CommandVector &settings);

private:

  // Members.
  CommandVector m_defaultSettings; ///< The default settings.
};

#endif // LBBCVEGPY_BCVEGPYPRODUCTION_H
