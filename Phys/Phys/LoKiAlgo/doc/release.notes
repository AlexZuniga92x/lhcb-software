! $Id$
! -----------------------------------------------------------------------------
! Package     : Phys/LoKiAlgo
! Responsible : Vanya BELYAEV ibelyaev@physics.syr.edu
! Purpose     : LoKi-algorithm related stuff
! -----------------------------------------------------------------------------

!========================= LoKiAlgo v9r8p5 2014-09-30 =========================

! 2014-07-29 - Vanya Belyaev
 - Algo.cpp: fix counters 

!========================= LoKiAlgo v9r8p4 2014-04-02 =========================

! 2014-03-03 - Marco Clemencic
 - Changed the namespace used for __Instanitations in the dictionary to avoid
   clashes in ROOT 6.

! 2014-02-25 - Marco Clemencic
 - Fixed wrong guard macro in the dictionary header (required for ROOT 6).

!========================= LoKiAlgo v9r8p3 2013-10-02 =========================

! 2013 - Chris Jones
 - Do not hard code default printout options to true in LoKi::Algo.

!========================= LoKiAlgo v9r8p2 2013-05-08 =========================

! 2013-05-08 - Vanya Belyaev
 - TupleDicts.cpp  : Fix a serious bug in column_float method

! 2013-04-11 - Vanya Belyaev
 - GetLoKiAlgo.cpp : bug fix

!========================= LoKiAlgo v9r8p1 2013-04-05 =========================

! 2013-03-22 - Chris Jones
 - Fix redefinition warnings for _XOPEN_SOURCE during dictionary generation
   on SLC6.

! 2013-03-02 - Chris Jones
 - Fix compilation warnings (in downstream packages) with -pedantic enabled

!========================= LoKiAlgo v9r8 2013-02-20 =========================

! 2013-02-04 - Vanya Belyaev
 - Add few basic types to n-tuple to allow easier
   (and more efficient) explicit overload resolution

!========================= LoKiAlgo v9r7p2 2012-11-30 =========================

! 2012-11-29 - Marco Clemencic
 - Added CMake configuration file.

! 2012-11-28 - Marco Clemencic
 - Minor changes to requirements to allow automatic conversion to CMake.

!========================= LoKiAlgo v9r7p1 2012-07-09 =========================

! 2012-07-01 - Chris Jones
 - Replace DVAlgorithm with DaVinciTupleAlgorithm

!========================= LoKiAlgo v9r7 2012-06-28 =========================

! 2012-06-16 - Vanya Belyaev
 - improve tupling of TisTosTob

! 2012-06-09 - Vanya Belyaev
 - improve tupling of TisTosTob

! 2012-06-08 - Vanya Belyaev
 - add tupling for TisTosTob

! 2012-05-29 - Vanya Belyaev
 - add more counters

! 2012-05-24 - Vanya Belyaev
 - improve decorators

!========================= LoKiAlgo v9r6 2012-05-24 =========================

! 2012-05-20 - Vanya Belyaev
 - improve dictionaries

!========================= LoKiAlgo v9r5 2012-03-01 =========================

! 2012-02-17 - Vanya Belyaev
 - fix...

! 2012-02-16 - Vanya Belyaev
 - add more decorators for tuples

!========================= LoKiAlgo v9r4 2011-06-16 =========================
! 2011-06-05 - Vanya Belyaev
 - fix ICC warnings

! 2011-0501 Vanya Belyaev

  - Loop:
    add access to   "vector"      ( LHCb::Particle::ConstVector)
               and  "combination" ( LoKi::Types::Range)


! 2011-0501 Vanya Belyaev

  - LoopObj.cpp

     LoKi::LoopObj::next:
     Rewrite the method to reduce the recursion depth.

     Under certain condition it causes the segmentaiton fault. The problem
     has been reported by Victor Coco and Nikolai Nikitin

 - cmt/requirements

    version increment to v9r3p1

!========================== LoKiAlgo v9r3 2011-01-18 ==========================

! 2011-01-11 - Juan Palacios
 - Adapt to changes in DVAlgorithm protected methods.

! 2011-01-04 - Juan Palacios
 - LoKi::Algo
  . Remove call to saveParticles(). DVAlgorithm takes care of that now.

! 2011-01-04 - Juan Palacios
 - LoKi::Algo
  . Replace calls to desktop() with new DVAlgorithm equivalents.
 - Increase to v9r3
 - NEEDS Phys/DaVinciKernel v9r0 or higher.

!========================== LoKiAlgo v9r2 2010-06-24 ==========================

! 2010-06-19 - Vanya Belyaev

 - add selectio with decay descriptor

! 2010-06-18 - Vanya Belyaev

 - improve a little bit Loop-object to allow
   usage of ICheckOverlap tool

! 2010-06-13 - Vanya Belyaev

 - disable the default extraction of secondary vertices
   using IPhysDersktop->secondaryVeertices() method


! 2010-06-02 - Vanya Belyaev

 - allow LHCb::DecayTree as argument for functors

 - cmt/requirements

    version increment to v9r2

!========================== LoKiAlgo v9r1 2010-05-25 ==========================

! 2010-05-14 - Vanya Belyaev

 - LoopObj.cpp

    fix for new tool-accessors

 - cmt/requirements

     Increase to v9r1

! 2010-05-14 - Juan Palacios
 - src/Algo.cpp
  . Use DVAlgorithm::primaryVertices() directly.
 - cmt/requirements
  . Increase to v9r0p1.

!========================== LoKiAlgo v9r0 2010-03-30 ==========================

! 2010-04-06 - Vanya Belyaev

 - replace LoKi::Range with Gaudi::Range
 - new decorators
 - cmt/requirements
    version increment to v9r0


!========================== LoKiAlgo v8r2 2010-02-17 ==========================

! 2010-02-09 - Vanya Belyaev

 - Algo.cpp

    add protection agains misisng PVs

 - cmt/requirements

    version increment to v8r2

!========================== LoKiAlgo v8r1 2009-01-12 ==========================
! 2009-01-10 - Chris Jones
 - Add usage of CLHEP for OSX

! 2009-01-09 - Marco Cattaneo
 - import GaudiPython, but only for the dictionary

! 2009-01-08 - Marco Cattaneo
 - Add -no_auto_imports to GaudiPython usage

! 2008-11-27 - Vanya BELYAEV
 - add QMtest
 - use new decorators
 - version increment to v8r1

!========================== LoKiAlgo v8r0 2008-11-17 ==========================
! 2008-11-02 - Vanya BELYAEV
 - more fixes for various compilers
 - remove extra methods from the dictionaries
 - cmt/requirements
   version increment to v8r0

! 2008-10-28 - Juan PALACIOS
 - src/Algo.cpp
  . Adapt to new IPhysDesktop::primaryVertices() method

!========================== LoKiAlgo v7r6 2008-09-30 ==========================
! 2008-09-16 - Vanya BELYAEV

 - python/LoKiAlgo/decorators.py

       add the trivial start/stop functions
       for the python algorithm
       (required by new 'state-machine' in Gaudi)

 - cmt/requirements

       version increment to v7r6

!========================== LoKiAlgo v7r5 2008-06-30 ==========================
! 2008-06-26 - Vanya BELYAEV
 - From now, the macro LOKI_ALGORITHM put the algorithm
	 into LoKi namespace

   Therefore the algorithm LOKI_ALGORITHM( AAA ) appears as
	  C++ type: LoKi::AAA

! 2008-06-12 - Vanya BELYAEV
 - LoKi/TupelDicts.h
   src/TupleDicts.h
   python/LoKiAlgo/fArrayP.py

   Provide the way for efficient & friendly
   fill of variable-size array for N-tuples in python:


    >>> tup = ...
    >>> particles = ...            ## the range of particles

    >>> tup.fArrayP ( 'p'  , P  ,  ## column name and functor
                      particles ,  ## source: the range of particles
                      'Length'  ,  ## the name of 'length' column
                      100       )  ## maximal length

    or

    >>> tup.fArrayP ( 'p'  , P  ,  ## the first  column name and functor
                      'pt' , PT ,  ## the second column name and functor
                      particles ,  ## source: the range of particles
                      'Length'  ,  ## the name of 'length' column
                      100       )  ## maximal length

    or

    >>> tup.fArrayP ( 'p'  , P  ,  ## the first  column name and functor
                      'pt' , PT ,  ## the second column name and functor
                      'm'  , M  ,  ## the third  column name and functor
                      particles ,  ## source: the range of particles
                      'Length'  ,  ## the name of 'length' column
                      100       )  ## maximal length

    or

    >>> tup.fArrayP ( 'p'  , P  ,  ## the first  column name and functor
                      'pt' , PT ,  ## the second column name and functor
                      'm'  , M  ,  ## the third  column name and functor
                      'pz' , PZ ,  ## the fourth column name and functor
                      particles ,  ## source: the range of particles
                      'Length'  ,  ## the name of 'length' column
                      100       )  ## maximal length


 - cmt/requirements
    version incremet to v7r5

!========================== LoKiAlgo v7r4p1 2008-05-28 ========================
! 2008-05-28 - Marco Cattaneo
 - In LoKiAlgoDict.h: add hack to suppress _POSIX_C_SOURCE redefinition warning
 - Fix many doxygen typos
 - In requirements increment version to v7r4p1

!========================== LoKiAlgo v7r4 2008-05-05 ==========================
! 2008-05-05 - Vanya BELYAEV
 - rename DaVinci::Decay into LHCb::Decay

! 2008-05-04 - Vanya BELYAEV
 - LoKi/Algo.h, src/Algo.cpp
    remove all occurences of IGeomDispCalculator and substritute them with
    IDistanceCalculator

 - cmt/rerquirements
    version increment to v7r4

!========================== LoKiAlgo v7r3 2008-04-30 ==========================
! 2008-04-30 - Vanya BELYAEV
 - LoKi/ExtCalls.h
   fix the missing "__rshift__" to allow the proper decorations in Bender

 - cmt/requirements
   version increment to v7r3

!========================== LoKiAlgo v7r2p1 2008-04-30 ========================
! 2008-04-30 - Marco Cattaneo
 - Fix some doxygen warnings

! 2008-04-29 - Patrick Koppenburg
 - LoKiAlgo : desktop->save() becomes keep()
 - Increment to v7r2p1

!========================== LoKiAlgo v7r2 2008-04-03 ==========================
! 2008-03-31 - Vanya BELYAEV
 - LoKi/Algo.h, src/Algo.cpp
   make a possibility to define the loop in term of "decays":

   const DaVinci::Decay& decay = ... ;

    for ( Loop B = loop ( decay ) ; B ; ++B )
    {
       ...
    }

 - cmt/requirements
    version increment to v7r2

!========================== LoKiAlgo v7r1p1 2008-03-15 ========================
! 2008-03-15 - Vanya BELYAEV
 - python/LoKiAlgo/decorators.py
   fix the incorrect inheritance  (needed for Bender)

 - src/Algo.cpp
    remove the line which (re)sets the proeprty "PropertiesPrint",

 - cmt/requirements
    version increemtn to v7r1p1

!========================== LoKiAlgo v7r1 2008-02-24 ==========================
! 2008-02-24 - Vanya BELYAEV
 - LoKi/LoopObj.icpp
   src/LoopObj.cpp
     : fix unchecked error codes

! 2008-02-11 - Vanya BELYAEV
 - minor fixes due to new Gaudi/ROOT/Reflex
 - cmt/requirmements
      version increment to v7r1

!========================== LoKiAlgo v7r0 2007-12-04 ==========================

! 2007-12-04 - Vanya BELYAEV
 - LoKi/GetLoKiAlgo.h, src/GetLoKiAlgo.cpp
   new function to access the class LoKi::Algo form the context

! 2007-12-03 - Vanya BELYAEV
 - the major update for the new LoKi v7r0 ("The powerful streamers")
 - cmt/requirmeents
   version increment to v7r0

!========================== LoKiAlgo v6r1 2007-10-08 ==========================
! 2007-10-07 - Vanya BELYAEV
 - cmt/requirements
    increment version to v6r1
    use new pattern for python modules

!========================== LoKiAlgo v6r0 2007-09-04 ==========================
! 2007-08-20 - Vanya BELYAEV
 - increment the major version to v6r0

! 2007-07-23 - Vanya BELYAEV
 - many tiny fixes to speedup compilation, decrease dictionaries
   and improve doxygen
 - remove src\MomentumCombiner.cpp

 - cmt/requirements
   version increment to v4r1

!========================== LoKiAlgo v4r0 2007-06-10 ==========================
! 2007-06-10 - Vanya BELYAEV
 - many small fixes to please Reflex, make functions vizible in python
   and to achive a coherent interface


! 2007-06-04 - Vanya BELYAEV
 - Solve the compilation problem on Win32 platform
    (Many thanks to Stefan ROISER for solution!)
 - Modified files
    LoKi/Loop.h
    LoKi/LoopObj.h
    LoKi/Algo.h
    LoKi/LoopDecorator.h
    LoKi/AlgoDecorator.h
    dict/LoKiAlgo.xml
    dict/LoKiAlgoDict.h

! 2007-06-01 - Vanya BELYAEV
 - prepare for the new major version: v4r0

 - New files:

   LoKi/ExtCalls.h

   dict/LoKiAlgo.xml
   dict/LoKiAlgoDict.h

   python/LoKiAlgo/__init__.py
   python/LoKiAlgo/decorators.py
   python/LoKiAlgo/functions.py
   python/LoKiAlgo/tests.py

 - Modified files:

   LoKi/LoopObj.icpp
   src/Algo.cpp

 - cmt/requirements
    version increment to v4r0


!========================== LoKiAlgo v3r2p1 2007-04-19 ===================
! 2007-04-19 -  P. Koppenburg
  Remove controversial doxygen comment

!========================= LoKiAlgo v3r2 2007-03-09 ====================
! 2007-03-05 - Patrick Koppenburg
 - Get vector types from GaudiKernel
 - Increment to v3r2

!========================= LoKiAlgo v3r1 2007-01-18 ====================

! 2007-01-18 - Vanya BELYAEV
 - cmt/requirements
     version increment to v3r1

 - Loop/LoopObj.h, src/LoopObj.icpp
   reimplement the methods momentum(),p() and mass()
   to get a result *ONLY* through the 4-momentum addition.
   In particular it means that from now:

     momentum ( ) != momentum ( 0 )
     p        ( ) != p        ( 0 )
     mass     ( ) != mass     ( 0 )

 - LoKi/Algo.h, src/Algo.cpp

    change the signature for LoKi::Algo::pattern functions
      in BACKWARD INCOMPATIBLE way:

    /** shortcut for the following symbolic expression:
     *
     *  @code
     *
     * {
     *  loop->backup()  ;
     *  for ( ; loop ; ++loop )
     *   {
     *     // get the mass from the sum of LorentzVectors
     *     const double mass = loop->mass() ;
     *     // apply a mass window
     *     if ( low > mass || high > mass ) { continue ; }
     *     // use the explicit refitter (if needed)
     *     if ( 0 != fitter && loop->reFit( fitter ).isFailure() ) { continue ; }
     *     // apply the vertex cuts
     *     if ( !vcut ( loop ) ) { continue ; }
     *     // apply other cuts cuts
     *     if ( ! cut ( loop ) ) { continue ; }
     *     loop->save ( tag ) ;
     *   }
     *  loop->restore() ;
     *  return selected ( tag ) ;
     * } ;
     *
     *  @endcode
     *
     *  @param tag  the symbolic unique tag
     *  @param loop the looping object itself
     *  @param low  low edge for mass window
     *  @param high high edge for mass window
     *  @param cut  cut to be used for filtering
     *  @param vcut vertex cut to be used for filtering
     *  @param fitter refitter to be applied before cuts
     *  @return the selected range of particles
     */
    LoKi::Types::Range pattern
    ( const std::string&        tag        ,
      const LoKi::Loop&         loop       ,
      const double              low        ,
      const double              high       ,
      const LoKi::Types::Cuts&  cut        ,
      const LoKi::Types::VCuts& vcut       ,
      const IParticleReFitter*  fitter = 0 ) ;

    /** shortcut for the following symbolic expression:
     *
     *  @code
     *
     * {
     *  loop->backup()  ;
     *  for ( ; loop ; ++loop )
     *   {
     *     // get the mass from the sum of LorentzVectors
     *     const double mass = loop->mass() ;
     *     // apply a mass window
     *     if (  abs( mass - nominal ) > window ) { continue ; }
     *     // use the explicit refitter (if needed)
     *     if ( 0 != fitter && loop->reFit( fitter ).isFailure() ) { continue ; }
     *     // apply the vertex cuts
     *     if ( !vcut ( loop ) ) { continue ; }
     *     // apply other cuts cuts
     *     if ( ! cut ( loop ) ) { continue ; }
     *     loop->save ( tag ) ;
     *   }
     *  loop->restore() ;
     *  return selected ( tag ) ;
     * } ;
     *
     *  @endcode
     *
     *  @param tag  the symbolic unique tag
     *  @param loop the looping object itself
     *  @param window the width of the mass window
     *  @param cut  cut to be used for filtering
     *  @param vcut vertex cut to be used for filtering
     *  @param fitter refitter to be applied before cuts
     *  @return the selected range of particles
     */
    LoKi::Types::Range pattern
    ( const std::string&        tag        ,
      const LoKi::Loop&         loop       ,
      const double              window     ,
      const LoKi::Types::Cuts&  cut        ,
      const LoKi::Types::VCuts& vcut       ,
      const IParticleReFitter*  fitter = 0 ) ;

    /** shortcut for the following expression:
     *
     *  @code
     *
     * {
     *  loop->backup()  ;
     *  for ( ; loop ; ++loop )
     *   {
     *     // get the mass from the sum of LorentzVectors
     *     const double mass = loop->mass() ;
     *     // apply a mass window
     *     if ( low > mass || high > mass ) { continue ; }
     *     // apply vertex selection cuts
     *     if ( !vcut1 ( loop ) ) { continue ; }
     *     // apply selection cuts
     *     if ( ! cut1 ( loop ) ) { continue ; }
     *     // refit
     *     if ( loop->reFit( fitter ).isFailure() ) { continue ; }
     *     // apply vertex selection cuts
     *     if ( !vcut2 ( loop ) ) { continue ; }
     *     // apply selection cuts
     *     if ( ! cut2 ( loop ) ) { continue ; }
     *     loop->save ( tag ) ;
     *   }
     *  loop->restore() ;
     *  return selected ( tag ) ;
     * }
     *
     *  @endcode
     *
     *  @param tag   the symbolic unique tag
     *  @param loop  the looping object itself
     *  @param low   low edge for mass window
     *  @param high  high edge for mass window
     *  @param cut1  cut to be used for filtering before refit
     *  @param vcut1 vertex cut to be used for filtering before refitt
     *  @param fitter refitter to be applied before cuts
     *  @param cut2  cut to be used for filtering after refit
     *  @param vcut2 vertex cut to be used for filtering after refitt
     *  @return the selected range of particles
     */
    LoKi::Types::Range pattern
    ( const std::string&        tag    ,
      const LoKi::Loop&         loop   ,
      const double              low    ,
      const double              high   ,
      const LoKi::Types::Cuts&  cut1   ,
      const LoKi::Types::VCuts& vcut1  ,
      const IParticleReFitter*  fitter ,
      const LoKi::Types::Cuts&  cut2   ,
      const LoKi::Types::VCuts& vcut2  ) ;

    /** shortcut for the following expression:
     *
     *  @code
     *
     * {
     *  loop->backup()  ;
     *  for ( ; loop ; ++loop )
     *   {
     *     // get the mass from the sum of LorentzVectors
     *     const double mass = loop->mass() ;
     *     // apply a mass window
     *     if ( low > mass || high > mass ) { continue ; }
     *     // apply vertex selection cuts
     *     if ( !vcut1 ( loop ) ) { continue ; }
     *     // apply selection cuts
     *     if ( ! cut1 ( loop ) ) { continue ; }
     *     // refit
     *     if ( loop->reFit( fitter ).isFailure() ) { continue ; }
     *     // apply vertex selection cuts
     *     if ( !vcut2 ( loop ) ) { continue ; }
     *     // apply selection cuts
     *     if ( ! cut2 ( loop ) ) { continue ; }
     *     loop->save ( tag ) ;
     *   }
     *  loop->restore() ;
     *  return selected ( tag ) ;
     * }
     *
     *  @endcode
     *
     *  @param tag    the symbolic unique tag
     *  @param loop   the looping object itself
     *  @param window the width of the mass window around nominal mass
     *  @param high  high edge for mass window
     *  @param cut1  cut to be used for filtering before refit
     *  @param vcut1 vertex cut to be used for filtering before refitt
     *  @param fitter refitter to be applied before cuts
     *  @param cut2  cut to be used for filtering after refit
     *  @param vcut2 vertex cut to be used for filtering after refitt
     *  @return the selected range of particles
     */
    LoKi::Types::Range pattern
    ( const std::string&        tag    ,
      const LoKi::Loop&         loop   ,
      const double              window ,
      const LoKi::Types::Cuts&  cut1   ,
      const LoKi::Types::VCuts& vcut1  ,
      const IParticleReFitter*  fitter ,
      const LoKi::Types::Cuts&  cut2   ,
      const LoKi::Types::VCuts& vcut2  ) ;

  - LoKi/Algo.h. src/Algo.cpp
    add a *STATIC* accessors to "currently executing LoKi-based algorithm"
    ( needed to enhance drastically the planned LoKiHybrid functionality)

      One can access it through:

    LoKi::Algo* current = LoKi::Algo::currentAlgo() ;




!========================= LoKiAlgo v3r0 2007-01-09 ====================
! 2007-01-09 - Florence RANJARD
 - install include files

!========================== LoKiAlgo v2r2 2006-12-01 ===================

! 2006-12-01 - Ivan Belyaev
 - LoKi/Algo.h, src/Algo.cpp
   geo(...) : use VertexBase instead of Vertex
 - cmt/requirements
   version increment to v2r2


!========================== LoKiAlgo v2r1 2006-10-11 ===================

! 2006-10-10 - Vanya BELYAEV
 - LoKi/Algo.h
    tiny fix for reflex/python dictionaries
 - cmt/requirements
    version increment to v2r1

!========================== LoKiAlgo v2r0 2006-08-30 ===================

! 2006-08-16 - Vanya BELYAEV

 - LoKi/Algo.h, src/Algo.cpp
   implement the coupel of function to access the "names cuts":

    double cutValue ( const std::string& name  ) const ;
    double cutValue ( const std::string& name  ,
                      const double       value ) const ;

   The valuess of the cuts are specified through job-options:

        MyAlg.Cuts = { "PMin" : 5000 , "PTmin" : 1000 } ;

   access in the code :

        Cut cut1 = P  > cutValue( "PMin" ) ;
        Cut cut2 = PT > cutValue( "PMin" ) ;


 - LoKi/LoopObj.h, src/LoopObj.cpp
   couple of minor fixes for updated DVAlgorithm and LoKi::Algo

 - cmt/requirement
   version increment to v2r0


!========================== LoKiAlgo v1r2 2006-07-07 ===================

! 2006-06-23 - Juan PALACIOS
  - LoKiAlgo/LoopObj.h
    . remove print method (now in LoKiGen, v1r5 or higher)
  - cmt/requirements
    . move version number to v1r2


! 2006-05-26 - Vanya  BELYAEV ibelyaev@physics.syr.edu
 - many fixes in LoKi::Algo & LoKi::LoopObj
 - cmt/requirements
    version incrmenet to v1r1

! -----------------------------------------------------------------------------
! The END
! -----------------------------------------------------------------------------
