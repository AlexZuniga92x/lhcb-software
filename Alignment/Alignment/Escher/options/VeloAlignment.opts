//--------------------------------------------------------------
// Initiate Escher Reco Phase
//--------------------------------------------------------------

EscherMainSeq.Members += { "ProcessPhase/Reco" };

Reco.DetectorList += {
                      "VELO" 
                     ,"Tr"
                     ,"Moni"
                     ,"Alignment"
                    };

// ====================================================================
//  Tracking reconstruction phase
// ====================================================================

// Start TransportSvc, needed by track fit
ApplicationMgr.ExtSvc += { "TransportSvc" };

// --------------------------------------------------------------------
// Pattern Recognition and Fitting
// --------------------------------------------------------------------

// Velo tracking
RecoVELOSeq.Members += {  "DecodeVeloRawBuffer"
                    ,"Tf::PatVeloRTracking/PatVeloRTracking"
                    ,"Tf::PatVeloSpaceTracking/PatVeloSpaceTracking"
                    ,"Tf::PatVeloGeneric/PatVeloGeneric" 
//                    ,"Tf::PatVeloGeneralTracking/PatVeloGeneralTracking"
};

// Decode also VeloClusters, needed for track fit
RecoVELOSeq.Members += { "DecodeVeloRawBuffer/DecodeVeloClusters" };
DecodeVeloClusters.DecodeToVeloLiteClusters = false;
DecodeVeloClusters.DecodeToVeloClusters     = true;

// Alignment phase

ApplicationMgr.DLLs += { "VeloAlignment", "PatVelo", "AlignmentTools" };

#include "$VELOALIGNMENTOPTS/VeloAlign.opts"
#include "$VELOALIGNMENTOPTS/AlignSensors.opts"

//====================================================
// decide here whether to run module alignment (Align) 
// or sensor alignment (AlignSensors)
//----------------------------------------------------
RecoAlignmentSeq.Members += { "Align", "WriteAlignmentConditions/WriteGlobal", "WriteAlignmentConditions/WriteModules" };
//RecoAlignmentSeq.Members += { "AlignSensors", "WriteAlignmentConditions/WriteDetectors" };
//====================================================

WriteGlobal.topElement = "/dd/Structure/LHCb/BeforeMagnetRegion/Velo";
WriteGlobal.depths = { 0, 1 };
WriteGlobal.outputFile = "Global.xml";
WriteModules.topElement = "/dd/Structure/LHCb/BeforeMagnetRegion/Velo";
WriteModules.depths = { 2 };
WriteModules.outputFile = "Modules.xml";
WriteDetectors.topElement = "/dd/Structure/LHCb/BeforeMagnetRegion/Velo";
WriteDetectors.depths = { 4 };
WriteDetectors.outputFile = "Detectors.xml";
