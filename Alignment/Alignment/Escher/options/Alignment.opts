// Start TransportSvc, needed by track fit
ApplicationMgr.ExtSvc += { "TransportSvc" };
TransportSvc.OutputLevel = 6; /// Turn off error in TransportSvc.


ApplicationMgr.DLLs += {
                         "AlignTrTools"
                       , "AlignmentTools"
                       , "TAlignment"
};

// Data on demand service for decoding RawBuffer
ApplicationMgr.ExtSvc += { "DataOnDemandSvc" };
#include "$STDOPTS/DecodeRawEvent.opts"

EscherMainSeq.Members += { "GaudiSequencer/DecodingSeq" } ;
DecodingSeq.MeasureTime = true;

//#include "$VELOTOOLSROOT/options/VeloClusterPosition.opts"

DecodingSeq.Members += {"DecodeVeloRawBuffer"};
DecodingSeq.Members += {"DecodeVeloRawBuffer/DecodeVeloClusters"};
DecodeVeloClusters.DecodeToVeloLiteClusters = false;
DecodeVeloClusters.DecodeToVeloClusters     = true;

DecodingSeq.Members += {"RawBankToSTClusterAlg/createITClusters"
			,"RawBankToSTLiteClusterAlg/createITLiteClusters"
};
createITClusters.detType     = "IT";
createITLiteClusters.detType = "IT";
#include "$STTOOLSROOT/options/Brunel.opts"

// OTTimes 
DecodingSeq.Members += { "OTTimeCreator" };

EscherMainSeq.Members += {"GaudiSequencer/TrackSelectionSeq"};

//**************************
// Track Selection
//**************************
TrackSelectionSeq.Members += { "TStation" };
//ToolSvc.ATrackSelector.MinPCut = 10000.0; // value is in MeV...
//ToolSvc.ATrackSelector.MinPtCut = 2000.0;
ToolSvc.ATrackSelector.charge = 0;
//TStation.MinPCut = 20000.0; // value is in MeV...
TStation.MinITHitCut = 8; 
TStation.MinOTHitCut = 20; 
TStation.MinTTHitCut = 4; 
TStation.InputContainer = "Rec/Track/Best";
TStation.OTTrackContainer = "Alignment/OTTracks";
TStation.ITTrackContainer = "Alignment/ITTracks";
TStation.CrossedTrackContainer = "Alignment/XTracks";
TStation.OutputLevel = 3;




//**************************
// Track fit:
//**************************
//EscherMainSeq.Members += {"GaudiSequencer/TrackFitSeq"};

TrackFitSeq.Members += {"TrackFilterAlg/FilterTracks"};
TrackFitSeq.Members += {"TrackEventFitter/FitTracks"};
TrackFitSeq.MeasureTime = true;
FilterTracks.TracksInputContainer = "Rec/Track/Best";
FilterTracks.TracksOutputContainer = "Alignment/FilteredTracks";
FilterTracks.TrackType = "Long";
FilterTracks.Selector.TracksLocation = "Rec/Track/Best";
FilterTracks.Selector.BFieldStatus = true;
FilterTracks.Selector.IsolatedTrackNStripsTolerance = 2;
FilterTracks.Selector.IsolatedTrackNStrawsTolerance = 1;
FilterTracks.Selector.MinMomentumCut = -999999;
FilterTracks.Selector.Chi2PerDoFMaxCut = 999999;
FilterTracks.Selector.Chi2ProbMinCut = 0.01;
FilterTracks.Selector.Chi2ProbMinCut = 0.3;
FilterTracks.Selector.NHolesMaxCut = 1;
FilterTracks.Selector.NSharedHitsMaxCut = 0;
FilterTracks.Selector.NCloseHitsMaxCut = 3;
FilterTracks.Selector.OutputLevel = 3;
FilterTracks.OutputLevel = 3;

FitTracks.TracksInContainer = "Alignment/OTTracks";
FitTracks.Fitter.NumberFitIterations = 3;
FitTracks.TracksOutContainer = "Alignment/OTTracks";
//FitTracks.Fitter.NumberFitIterations = 3;
CondChecker.OutputLevel = 3;


//**************************
// Alignment options (Amsterdam Framework)
//**************************
//EscherMainSeq.Members += {"GaudiSequencer/OpenASeq"};
OpenASeq.Members += {
                          "AlignAlgorithm/AlignOTStations"
                         ,"AlignAlgorithm/AlignOTLayers"
                         ,"AlignAlgorithm/AlignOTModules"
};
AlignmentSeq.MeasureTime = true;
#include "$ESCHERROOT/options/OTAlignment.opts"



//**************************
// Alignment options (Heidelberg Framework)
//**************************
EscherMainSeq.Members += {"GaudiSequencer/ClosedASeq"};
ClosedASeq.Members += {"GAlign/Align"};
Align.OutputLevel = 2;
//Align.Detectors = {"OT"};
Align.Detectors = {"Muon"};
Align.InputContainer = "/Event/Rec/Muon/MuonsTrackForAlignment";
//Align.InputContainer = "Alignment/OTTracks";
//Align.InputContainer = "Rec/Track/Best";
#include "$ESCHERROOT/options/TAlignment.opts"
