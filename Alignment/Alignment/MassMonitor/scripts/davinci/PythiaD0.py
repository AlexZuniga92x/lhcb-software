########################################################################
# D0 -> K- pi+
#
# This DaVinci script runs over MC D0 -> K- pi+,
# such as that generated by the Gauss particle gun configuration ../gauss/D0Gun.py
# (or bookkeeping MC)
# It saves the invariant mass of the K/pi, i.e. the observed D0 mass after FSR
#
# @author Jack Wimberley
# @date 2013-10-11
########################################################################

from Gaudi.Configuration import *
from Configurables import DaVinci
from GaudiKernel.SystemOfUnits import *

# -------
# OPTIONS
# -------

MessageSvc().OutputLevel = INFO
DaVinci().EvtMax = -1
DaVinci().PrintFreq = 100
DaVinci().HistogramFile = "PythiaD0_histos.root"
DaVinci().TupleFile = "PythiaD0.root"

DaVinci().DataType = "2012"
from Configurables import CondDB
CondDB().UseLatestTags = ["2012"]

# --------------
# MC TRUTH TUPLE
# --------------

from Configurables import DecayTreeTuple, MCDecayTreeTuple
from DecayTreeTuple.Configuration import *
decay = "[D0 => K- pi+]CC"
tuple = MCDecayTreeTuple("PythiaD0Tuple")
tuple.TupleName = "DecayTree"
tuple.Decay = decay
tuple.ToolList = []
from Configurables import LoKi__Hybrid__MCTupleTool
LTT = tuple.addTupleTool("LoKi::Hybrid::MCTupleTool/LTT")
LTT.Preambulo += [
    "from LoKiCore.functions import *"
    , "from LoKiCore.math import *"
    , "E = MCCHILD(MCE,1) + MCCHILD(MCE,2)"
    , "PX = MCCHILD(MCPX,1) + MCCHILD(MCPX,2)"
    , "PY = MCCHILD(MCPY,1) + MCCHILD(MCPY,2)"
    , "PZ = MCCHILD(MCPZ,1) + MCCHILD(MCPZ,2)"
    , "MM = sqrt(E*E - PX*PX - PY*PY - PZ*PZ)/1000"
    , "TM = sqrt(MCE*MCE - MCPX*MCPX - MCPY*MCPY - MCPZ*MCPZ)/1000"
    ]
LTT.Variables = {
    "MM" : "MM",
    "TM" : "TM"
    }

DaVinci().appendToMainSequence( [ tuple ] )

# COMBINE PARTICLES
from PhysSelPython.Wrappers import AutomaticData, Selection, SelectionSequence
from Configurables import FilterDesktop, CombineParticles
MuonLoc = 'Phys/StdAllLooseMuons/Particles'
D0Loc = 'Phys/StdLooseD02KPi/Particles'
D0Sel = AutomaticData(Location = D0Loc)

MyTMD0Alg = CombineParticles("MyTMD0Alg")
MyTMD0Alg.DecayDescriptor = '[D0 -> K- pi+]cc'
MyTMD0Alg.Preambulo = [ "from LoKiPhysMC.decorators import *" ] 
MyTMD0Alg.MotherCut = "mcMatch( '[D0 => K- pi+]CC' )"
MyTMD0Sel = Selection("MyTMD0Sel", Algorithm = MyTMD0Alg, RequiredSelections = [D0Sel])
MyTMD0Seq = SelectionSequence("MyTMD0Seq", TopSelection = MyTMD0Sel)

DaVinci().appendToMainSequence( [ MyTMD0Seq.sequence() ] )

# -----
# TUPLE
# -----

tuple = DecayTreeTuple("D02KPi_Tuple")
tuple.Inputs = [ MyTMD0Seq.outputLocation() ]
tuple.Decay = "[D0 -> ^K- ^pi+]CC"

DaVinci().appendToMainSequence( [ tuple ] )
