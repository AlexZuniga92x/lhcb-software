/////////////////////////////////////////////////
//
// JobOptions file for Velo Alignment algorithm
//
/////////////////////////////////////////////////


// Option file for monitoring (control sample, constants,...)
#include "$VELOALIGNMENTOPTS/AlignmentMonitor.opts" 


//
// Then we set the alignment job properties
//

//
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
// The main alignment switchboard
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//


////////////////////////////////////////////////////
//
// 1. Internal alignment with tracks
//
////////////////////////////////////////////////////


Align.Internal_alignment    = false;   // Turn this step on

// Modules to be aligned (1=ON, 0=OFF)

Align.Internal_Mod_Left  = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
Align.Internal_Mod_Right = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};

Align.Internal_DOF          = {1,1,1,1,1,1};                         // DOFs to look at
Align.Internal_PTerms       = {0.01,0.01,0.005,0.0005,0.0005,0.0002}; // ParSig values/DOFs (penalty terms)
Align.Internal_EQs          = {1,1,1,1,1,1,1,1,1};                   // Constraint equations
Align.Internal_Residual_Cut = {0.3,0.06};                            // Cuts on track residuals (in mm)
Align.General_StartFactor   = 100.0;                                  // Localfit chisquare initial cut
Align.General_Maxtracks     = 100;                                     // Max. number of track per event

// Option files for pattern recognition tuning and track selection
#include "$VELOALIGNMENTOPTS/TRGtune.opts"
#include "$VELOALIGNMENTOPTS/TrackStore.opts"


////////////////////////////////////////////////////
//
// 2. Box alignment
//
////////////////////////////////////////////////////


Align.Box_alignment        = true;
Align.Box_VELOopen         = true;
Align.Box_TrackperPV       = 2;
Align.Box_DOF              = {1,1,1,1,1,1};                         
Align.Box_PTerms           = {10.0,10.0,10.0,0.03,0.03,0.03}; 
Align.Box_EQs              = {0,0,0,0,0,0}; 
Align.Box_Residual_Cut     = {1.5,0.4};

// Specific options for primary vertices
                            
Align.Box_Z_window         = 1000.;    // Where to look for PV seeds (in mm) (350 for closed, 1000 for open)
Align.Box_MinTracks_perPV  = 4;      // Minimal number of tracks per PV (10 for m-bias events)
Align.Box_PV_Z_window      = 1.;      // Zclos range for all PV candidate tracks
Align.Box_PV_IPmax         = 0.8;      // Max IP for PV candidate
Align.Box_PV_Track_IPmax   = 0.8;     // Max track IP (w.r.t. PV candidate)


////////////////////////////////////////////////////
//
// 4. Millepede specific options
//
////////////////////////////////////////////////////

ToolSvc.Millepede.OutputLevel   = 3;
ToolSvc.Millepede.Iteration     = true;
ToolSvc.Millepede.ModuleFixed   = -1; // Fix the a module in Millepede (use Millepede numbering)
                                      // (put -1 if you don't want to fix anything) 
                                      //
