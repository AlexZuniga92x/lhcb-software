//
// tuning for Pattern recognition algorithm
//

// Uncomment to skip the PatVeloAlignTool

//PatVeloLoadClusters.IgnoreAlignment       = true;
//ToolSvc.PatVeloDataHolder.IgnoreAlignment = true;

// 
// 1. For classic VELO tracks
// 

PatVeloRTracking.rMatchTol   = 2.;
PatVeloRTracking.rExtraTol   = 2.;
PatVeloRTracking.MaxRSlope   = 0.6;
//PatVeloRTracking.rOverlapTol = 0.;
//PatVeloRTracking.PrivateBest = true; // !!! This option is not yet available

ToolSvc.PatVeloSpaceTool.PhiAngularTol = 0.02;
ToolSvc.PatVeloSpaceTool.PhiMatchTol   = 1.5;
ToolSvc.PatVeloSpaceTool.PhiFirstTol   = 1.5;
ToolSvc.PatVeloSpaceTool.MaxChiSqDof   = 15.0;
//PatVeloSpaceTracking.CleanOverlaps    = true;

//
// 2. For HALO tracks
//


PatVeloGeneralTracking.PointErrorScale  = 2.;
PatVeloGeneralTracking.PointErrorMin    = 1.;
PatVeloGeneralTracking.PhiAngularTol    = 0.02;
PatVeloGeneralTracking.MaxChiSqDof      = 15.0;
PatVeloGeneralTracking.forwardStepError = 0.002;

PatVeloGeneric.FullAlignment        = true;
PatVeloGeneric.MinModules           = 4;  // 5 for closed VELO, 3 for Open
PatVeloGeneric.ClusterCut           = 10;
PatVeloGeneric.KalmanState          = 4;
PatVeloGeneric.ForwardProp          = true;
PatVeloGeneric.MaxSkip              = 3;
PatVeloGeneric.CleanSeed            = true;
PatVeloGeneric.PrivateBest          = true;

PatVeloGeneric.SigmaTol             = 5;
PatVeloGeneric.RAliTol              = 0.05;
PatVeloGeneric.PAliTol              = 0.005;

//PatVeloGeneric.OverlapProp          = true;  // !!! Option not yet available
PatVeloGeneric.ACDC                 = false; // 



