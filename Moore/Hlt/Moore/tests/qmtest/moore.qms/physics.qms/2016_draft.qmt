<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: Rosen Matev
# Purpose: Check that Moore runs on the validation dataset with the 2016 draft settings.
# Prerequisites: 
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception, stderr, nonzero return code
#               . MAJOR: additional FATAL/ERROR messages always a major problem. no ERROR messages should ever be printed when running this test.
#               . MINOR: additional WARNING messages, it is unclear how severe these may be, you will need to hunt down the cause and either fix the problem or suppress the warning.
#               . MINOR: This test also currently checks the number of lines of stdout, which are demanded to be less than a given amount. Ideally this number would be very small and not allowed to increase.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="timeout">
    <integer>1200</integer>
  </argument>
  <argument name="args"><set>
    <text>../options/Moore_2016draft.py</text>
    <text>--option</text>
    <text>from Configurables import Moore; Moore().RemoveInputHltRawBanks = True; Moore().EnableTimer='physics.2016_draft.csv'; from Configurables import EventSelector; EventSelector().PrintFreq=100; Moore().OutputLevel = 4;</text>
  </set></argument>
  <argument name="validator"><text>
  
myname = 'moore.physics.2016_draft'

nlines = len(stdout.splitlines())

if nlines &lt; 128:
    causes.append('stdout is too short, aiming for at least 128 lines')
    result['moore.physics.2016_draft.lt_lines'] = result.Quote('Expected at least 128 lines, got {}'.format(nlines))

if nlines &gt; 2000:
    causes.append('stdout is too long, aiming for at most 2000 lines')
    result['moore.physics.2016_draft.gt_lines'] = result.Quote('Expected at most 2000 lines, got {}'.format(nlines))

#count error lines, shouldn't be any warnings or errors, ideally
countErrorLines({"FATAL":0,"ERROR":0,"WARNING":3})

</text></argument>
</extension>
