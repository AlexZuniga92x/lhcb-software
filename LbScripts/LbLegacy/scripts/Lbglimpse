#!/bin/tcsh -f
#===========================================================================
# Lbglimpse           F.Ranjard - 050816
# run glimpse on every paths of $CMTPATH
# P1 = string
#===========================================================================
# 050816 - first release
# 050817 - use glimpse from /lcg/external through $LHCBSCRIPTS
# 060705 - use -f option in #!/bin/tcsh to not source .tcshrc
# 070126 - adapt to CMTPROJECTPATH or CMTPATH

#===========================================================================
set exec_name = "Lbglimpse"
set script_dir = "$LHCBSCRIPTS"
set script_version = "070129"
#
set nar = $#argv
if (nar != 0) then
  if ("$argv[${nar}]" == "-v") then
         set echo on
         set verb = "-v"
         set argv[${nar}] = ""
         @ nar = ${nar} - 1
  endif
  if ("$argv[${nar}]" == "-n") then
         set do = "-n"
         set argv[${nar}] = ""
         @ nar = ${nar} - 1
  endif
endif
#
#*******>
if ($1 == "-h" || $nar == 0 ) then

   echo ""
   echo "usage of Lbglimpse version ${script_version}:"
   echo "Lbglimpse <string> [<project>] [<version>] [-v]"
   echo "run glimpse on every paths of "\$CMTPATH" to find all files containing <string>"
   echo "if CMTPATH is not set but CMTPROJECTPATH is set then"
   echo "it will use <project> and <version> to built CMTPATH locally"
   echo ""
   echo "example:"
   echo " > DaVinciEnv v12r13"
   echo " > Lbglimpse ClassID"
   echo " or"
   echo " > setenv CMTPROJECTPATH "\${User_release_area}":"\${LHCb_release_area}":"\${Gaudi_release_area}":"\${LCG_release_area}
   echo " > Lbglimpse ClassID Rec v4r0" 
   echo ""
   goto exec_end
endif

#
unset noclobber

#========================get the options =============================

set string = $1
set here = `pwd`
#========================check existence of $CMTPATH =========================
if ( ! $?CMTPATH ) then
  if ( ! $?CMTPROJECTPATH ) then
      echo " "\$CMTPATH" is not defined nor "\$CMTPROJECTPATH" - exit "
      echo " you should either set the CMTPATH with <project>Env <version>"
      echo " or set the CMTPROJECTPATH and give the project name and version to Lbglimpse "
      echo " > Lbglimpse <string> <project <version>"
      goto exec_end
  else                          #CMTPROJECTPATH is set but not CMTPATH
      if ($nar >= 2 ) set project = $2
      if ($nar >= 3 ) set version = $3
      if ($nar <= 2 ) then      # project or/and version missing : exit
         echo "CMTPATH is not set you should give the project name and project version on the command line"
         echo " > setenv CMTPROJECTPATH "\${User_release_area}":"\${LHCb_release_area}":"\${Gaudi_release_area}":"\${LCG_release_area}
         echo " > Lbglimpse ClassID Rec v4r0" 
         echo ""
         goto exec_end
      endif
      set PROJECT = `echo $project | tr '[a-z]' '[A-Z]'`
      if( -d ${project}_release_area/${project}Env ) then
	eval cd '$'${project}_release_area/${project}Env
	if ( -d ${version} ) then
	    unsetenv CMTPROJECTPATH
	    source `which ProjectEnv.csh` $project $version
	    goto CMTPATH_done
	endif
      endif
      eval cd '$'${project}_release_area/${PROJECT}/${PROJECT}_${version}/cmt
      set CMTPATH = `cmt show set_value CMTPATH`    
CMTPATH_done:
   endif
else                           #CMTPATH is set unset CMTPROJECTPATH
   unsetenv CMTPROJECTPATH
endif
#====================== split $CMTPATH =======================================

set depath = ('' '' '' '' '' '' '' '' '' '' '')
set depath = `echo $CMTPATH | tr ':' '  '`
echo $depath
set npath = `echo $CMTPATH | awk '{print(split($0,array,":"))}'`

#===================== run glimpse on various paths ===========================
set j = 1
while ($j <= $npath)
  set jpath = $depath[$j]
  if ( -f ${jpath}/.glimpse_filenames ) glimpse -y -H ${jpath} ${string}
  @ j++
end
 
#########################################################################
exec_end:
unset jpath, npath, CMTPATH, here, string, project,version
exit
