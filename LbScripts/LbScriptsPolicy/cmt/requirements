package LbScriptsPolicy
version v2r5


macro install_excludes " -xCVS"
macro install_command 'python $(LbScriptsPolicy_root)/cmt/fragments/install.py $(install_excludes) --log=./install.history '
macro uninstall_command 'python $(LbScriptsPolicy_root)/cmt/fragments/install.py -u --log=./install.history '

macro remove_command "$(cmt_uninstallarea_command)"

cmtpath_pattern \
   macro <project>_home "<path>" ; \
   set <project>_HOME "$(<project>_home)"

# Remove "make" from the actions triggered by a "make all_groups"
cmtpath_pattern \
    macro_remove cmt_actions_constituents "make" ; \
    macro_remove cmt_actions_constituentsclean "makeclean"

#--------------------------------------------
# Patterns for specifically declaring and installing python files in the
# current installation area
#--------------------------------------------

cmtpath_pattern \
    path_remove_regexp  PYTHONPATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "/<project>/.*$(<project>_installarea_prefix)/python"\
         <project>_with_installarea&WIN32 "\<project>\.*$(<project>_installarea_prefix)\python" ; \
    path_prepend PYTHONPATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "<path>/$(<project>_installarea_prefix)/python"\
         <project>_with_installarea&WIN32 "<path>\$(<project>_installarea_prefix)\python"

pattern install_python_modules \
    path_remove  PYTHONPATH "" \
         <project>_without_installarea&Unix "/<package>/python" \
         <project>_without_installarea&WIN32 "\<package>\python" ; \
    path_prepend PYTHONPATH "" \
         <project>_without_installarea&Unix "$(<package>_root)/python" \
         <project>_without_installarea&WIN32 "$(<package>_root)\python" ; \
    document install_python <package>_python ; \
    apply_pattern install_python_init ; \
    macro_append <package>_python_init_dependencies " <package>_python "
    
pattern install_custom_python_modules \
    path_remove  PYTHONPATH "" \
         <project>_without_installarea&Unix "/<package>/<source>" \
         <project>_without_installarea&WIN32 "\<package>\<source>" ; \ 
    path_prepend PYTHONPATH "" \
         <project>_without_installarea&Unix "$(<package>_root)/<source>" \
         <project>_without_installarea&WIN32 "$(<package>_root)\<source>" ; \
    document install_python <package>_<source>_<offset>_python source=<source> offset=<offset> ; \
    apply_pattern install_python_init ; \
    macro_append <package>_python_init_dependencies " <package>_<source>_<offset>_python "

make_fragment install_python -header=install_python_header


pattern install_python_init \
	document python_init <package>_python_init package=<package>

make_fragment python_init -header=python_init_header -dependencies



pattern python_alias \
    macro_append python_alias_def " <script>:$(<package>_root) " ; \
    document python_alias <script>_python_alias script=<script> ; \
    macro_append <script>_python_alias_dependencies " install_scripts "

make_fragment python_alias -header=python_alias_header -dependencies

action ShowPythonAlias "echo $(python_alias_def) | tr ' ' '\n' " \
            WIN32           "echo $(python_alias_def)"

macro_remove cmt_actions_constituents "ShowPythonAlias "
macro_remove cmt_actions_constituentsclean "ShowPythonAliasclean "




pattern source_shell_alias \
    set_append SOURCESHELLALIASLIST " $(<package>_cmtpath)/InstallArea/scripts/<script> " ; \
    macro_append source_shell_alias_def " <script>:$(<package>_root) "

cmtpath_pattern \
    setup_script $(LBSCRIPTSPOLICYROOT)/scripts/SourceShellAlias

action ShowSourceShellAlias "echo $(source_shell_alias_def) | tr ' ' '\n' " \
            WIN32           "echo $(source_shell_alias_def)"

macro_remove cmt_actions_constituents "ShowSourceShellAlias "
macro_remove cmt_actions_constituentsclean "ShowSourceShellAliasclean "

# apply the pattern to itself
apply_pattern source_shell_alias script=SourceShellAlias




action ShowAlias "echo $(python_alias_def) $(source_shell_alias_def) | tr ' ' '\n' " \
           WIN32 "echo $(python_alias_def) $(source_shell_alias_def)"

macro_remove cmt_actions_constituents "ShowAlias "
macro_remove cmt_actions_constituentsclean "ShowAliasclean "


#--------------------------------------------
# Patterns for specifically declaring and installing script files in the
# current installation area
#--------------------------------------------

cmtpath_pattern \
    path_remove_regexp  PATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "/<project>/.*$(<project>_installarea_prefix)/scripts" \
         <project>_with_installarea&WIN32 "\<project>\.*$(<project>_installarea_prefix)\scripts" ; \
    path_remove_regexp  PATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "/<project>/.*$(<project>_installarea_prefix)/.*/bin" \
         <project>_with_installarea&WIN32 "\<project>\.*$(<project>_installarea_prefix)\.*\bin" ; \
    path_remove_regexp  PATH "" \
         <project>_with_installarea&WIN32 "\<project>\.*$(<project>_installarea_prefix)\.*\lib" ; \
    path_prepend PATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "<path>/$(<project>_installarea_prefix)/scripts" \
         <project>_with_installarea&WIN32 "<path>\$(<project>_installarea_prefix)\scripts"

cmtpath_pattern \
    path_remove_regexp LD_LIBRARY_PATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "/<project>/.*$(<project>_installarea_prefix)/.*/lib" \
    

pattern install_scripts \
    path_remove  PATH "" \
          <project>_without_installarea&Unix "/<package>/scripts" \
          <project>_without_installarea&WIN32 "\<package>\scripts" ; \ 
    path_prepend PATH "" \
          <project>_without_installarea&Unix "$(<package>_root)/scripts" \
          <project>_without_installarea&WIN32 "$(<package>_root)\scripts" ; \
    document install_scripts install_scripts 
    
make_fragment install_scripts -header=install_scripts_header

cmtpath_pattern \
    path_remove_regexp  HPATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "/<project>/.*$(<project>_installarea_prefix)/doc/help" \
         <project>_with_installarea&WIN32 "\<project>\.*$(<project>_installarea_prefix)\doc\help" ; \
    path_prepend HPATH "" \
         <project>_without_installarea "" \
         <project>_with_installarea&Unix "<path>/$(<project>_installarea_prefix)/doc/help" \
         <project>_with_installarea&WIN32 "<path>\$(<project>_installarea_prefix)\doc\help"

pattern install_script_doc \
    path_remove  HPATH "" \
          <project>_without_installarea&Unix "/<package>/doc/help" \
          <project>_without_installarea&WIN32 "\<package>\doc\help" ; \
    path_prepend HPATH "" \
          <project>_without_installarea&Unix "$(<package>_root)/doc/help" \
          <project>_without_installarea&WIN32 "$(<package>_root)\doc\help" ; \
    macro_append install_excludes " -xhtml " ; \
    document install_doc install_doc
    
make_fragment install_doc -header=install_doc_header

#-------------------------------------------------------------------
# Generic cmt template processing
# take "fichier.tmpl" as input and outputs "fichier" with all 
# cmt macros expanded. E.g:
#
#  document template DoxyTemplate -s=../doc *.tmpl
#
#-------------------------------------------------------------------

make_fragment template -header=template_header -dependencies

#-------------------------------------------------------------------
# Generic pattern to call a command.
# It is driven by macros.
# E.g:
# 
#   macro MyCommandTarget_output  "output.file"
#   macro MyCommandTarget_deps    "input.file"
#   macro MyCommandTarget_command "python do_something.py -o $(MyCommandTarget_output) $(MyCommandTarget_deps)"
#
#   apply_pattern CallCommand target=MyCommandTarget
#
# (Marco Clemencic)
#-------------------------------------------------------------------
make_fragment call_command -header=call_command_header
pattern CallCommand \
   document call_command <target> -group=<group> name="<target>"

#---------------------------------------------------
# Automatic Installation
#---------------------------------------------------

cmtpath_pattern \
    apply_pattern install_scripts ; \
    apply_pattern install_python_modules ; \
    apply_pattern install_script_doc

#---------------------------------------------------
# remove CMTPATH from the environment
#---------------------------------------------------

apply_pattern source_shell_alias script=NoCMTPATH

# remove CMTPATH from the environment
macro nocmtpath_script "$(LBSCRIPTSPOLICYROOT)/scripts/NoCMTPATH"
setup_script $(nocmtpath_script)

#---------------------------------------------------
# clean up of the different path
#---------------------------------------------------

apply_pattern source_shell_alias script=StripPath

macro strip_script "$(LBSCRIPTSPOLICYROOT)/scripts/StripPath" 

cmtpath_pattern \
    setup_script $(strip_script) ;


