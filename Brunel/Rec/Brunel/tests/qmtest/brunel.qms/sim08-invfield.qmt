<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: M.Cattaneo
# Purpose: Check that Brunel reconstruction is insensitive to direction
#          of magnetic field
# Common failure modes, severities and cures: 
#          . MAJOR: Every failure should be understood. If sim08 test
#                   also fails, check first reasons for those failures
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="timeout"><integer>2400</integer></argument>
  <argument name="options"><text>
from Gaudi.Configuration import *

from Configurables import LHCbApp
LHCbApp().DDDBtag="dddb-20130312-1"
LHCbApp().CondDBtag="sim-20130222-1-vc-md100"

EventSelector().Input = ["DATAFILE='PFN:$LHCBDEV/GAUSS/Tests/Tests-v45r0/10000000-50ev-20130313-HLT.digi'"]

from Brunel.Configuration import *
Brunel().Monitors = ["SC","FPE"]
Brunel().WithMC=True
Brunel().InputType = "DIGI"
Brunel().OutputType = "LDST"
Brunel().DataType="2012"

# invert the Magnetic field
from Configurables import MagneticFieldSvc, STOfflinePosition
MagneticFieldSvc().ForceToUseUpMap=True
STOfflinePosition('ToolSvc.ITClusterPosition').applyLorentzCorrection=False
STOfflinePosition('ToolSvc.STOfflinePosition').applyLorentzCorrection=False
  </text></argument>
  <argument name="reference"><text>../refs/sim08.ref</text></argument>
  <argument name="validator"><text>
from Brunel.QMTest.BrunelExclusions import preprocessor
validateWithReference(preproc = preprocessor)
</text></argument>
</extension>
