<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: M.Cattaneo
# Purpose: Identical to 2015-em, but with rdst output
# Common failure modes, severities and cures: 
#          . MAJOR: Every failure should be understood. If brunel2012magdown test
#                   also fails, check first reasons for those failures
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="timeout"><integer>3600</integer></argument>
  <argument name="args"><set>
    <text>$APPCONFIGOPTS/Brunel/saveFittedVeloTracks.py</text>
    <text>$PRCONFIGOPTS/Brunel/PR-COLLISION15EM-Beam6500GeV-VeloClosed-MagDown.py</text>
    <text>--option</text>
    <text>from Configurables import Brunel; Brunel().DataType = "2015"; Brunel().EvtMax = 1000; Brunel().DatasetName="2015-em"; Brunel().Monitors=["SC","FPE"]; Brunel().OutputType="RDST"; from Configurables import EventClockSvc; EventClockSvc( InitialTime = 1433509200000000000 )
</text>
  </set></argument>
  <argument name="reference"><text>../refs/2015-em.ref</text></argument>
  <argument name="validator"><text>
from Brunel.QMTest.BrunelExclusions import preprocessor as BrunelPreprocessor
preprocessor = BrunelPreprocessor + \
  RegexpReplacer(when = "DstWriter", orig = r'ev.rdst', repl = r'ev.dst') + \
  RegexpReplacer(when = "FSROutputStream", orig = r'ev.rdst', repl = r'ev.dst') + \
  RegexpReplacer(when = "OutputDSTSeq         INFO Member list:", orig = r'GaudiSequencer/RawEventSplitSeq, ', repl = r'') + \
  LineSkipper( ["RawEventSplitSeq     INFO"] ) + \
  LineSkipper( ["BrunelInit           INFO RecInit:: The INFO message is suppressed : 'Memory exceeds limit of 2000000 KB -> Purging pools'"] )
validateWithReference(preproc = preprocessor)
</text></argument>
</extension>
