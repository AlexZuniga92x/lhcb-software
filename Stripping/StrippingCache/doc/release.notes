! $Id$
! -----------------------------------------------------------------------------
! Package     : StrippingCache
! Responsible : Vanya Belyaev
! Purpose     : Keep C++ functors for stripping
! Created     : 2015-02-4
! -----------------------------------------------------------------------------
!                   $Revision$
! Last modification $Date$
!                by $Author$
! -----------------------------------------------------------------------------

! 2015-06-25 - Marco Clemencic
 - Added (preliminary) CMake integration.

! 2015-06-23 - Vanya Belyaev
 - test with new setting of hybrid base

! 2015-02-22 - Vanya Belyaev
 - commit fixed version of script directory

! 2015-02-11 - Vanya Belyaev

 - INSTRUCTIONS:

1. get the package:

   getpack StrippingCache head
   cd StrippingCache/options


2&3. set environment variable and run stripping:

     export LOKI_GENERATE_CPPCODE=20

     gaudirun.py  <options>...

  I've actually used 2 step action:

     export LOKI_GENERATE_CPPCODE=20

     gaudirun.py DV-Stripping21-Stripping.py DataType.py -n -o Stripping21.pkl

     gaudirun.py ./Stripping21.pkl

4. move generated cpp code to src directori and build the cache:

     mv *.cpp ../src

     make -j 10

 Thats all...
 for next run of gaudirun it will pick up functors from cache:

 ToolSvc.HybridFactory         SUCCESS Number of counters : 2
 |    Counter                                      |     #     |
 | "# loaded from CACHE"                           |     14770 |
 | "# loaded from PYTHON"                          |         1 |
ToolSvc.CoreFactory           SUCCESS Number of counters : 1
 |    Counter                                      |     #     |
 | "# loaded from CACHE"                           |      1212 |


! 2015-02-04 - Vanya Belyaev
 - the first import

! -----------------------------------------------------------------------------
! The END
! -----------------------------------------------------------------------------
