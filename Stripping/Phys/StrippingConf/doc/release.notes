!$Id: release.notes,v 1.82 2010-08-20 14:58:48 jpalac Exp $
! -----------------------------------------------------------------------------
! Package     : Phys/StrippingConf
! Responsible : Anton Poluektov
! Purpose     : Stripping framework
! -----------------------------------------------------------------------------

! 2010-09-27 - Vanya Belyaev

 - python/StrippingConf/StrippingLine.py

      add new property FILTER, to run LoKi::VoidFilter instance 
      before entering into line

       - corresponding filter is bound to the line 
       - the filter is not propagated to underlying c++ StrippingAlg 
      
       The usage:

       a. simple string:

       line = StrippingLine ( ... ,
          FILTER = " CONTAINS ( 'Rec/Track/Best') < 400  "
          )

       b. tuple: ( code, preambulo) 

       line = StrippingLine ( ... ,
  		    FILTER =  ( " TrSOURCE( 'Rec/Track/Best' , TrLONG & ( TrCHI2 < 5 ) ) < 200  " , 
                      [ "from LoKiTracks.decorators import *" ] ) 
	
          )

       c. dictionary with full configuration of LoKi::VoidFilter algoithm

       line = StrippingLine ( ... ,
  		    FILTER =  { 'Code'        : " TrSOURCE( 'Rec/Track/Best' , TrLONG & ( TrCHI2 < 5 ) ) < 200  " , 
                      'Preambulo'   : [ "from LoKiTracks.decorators import *" ] , 
                      'OutputLevel' : 3  } 
          )

  - cmt/requirements 
     version increment to v3r8 

!========================== StrippingConf v3r7 2010-08-20 =================

! 2010-08-11 - Vanya Belyaev

 - python/StrippingConf/StrippingLine.py

     make bindMembers aware of EventSelection from PhysSel/Wrappers.py 
 
! 2010-08-05 - Anton Poluektov 
 - python/StrippingConf/StrippingLine.py
   checkPV argument of StrippingLine can now be: 
     * Boolean: if True, at least 1 PV is required (as before). By default checkPV=True
     * Integer: Minimum number of PVs
     * tuple of 2 elements: Minimum and maximum number of PVs

!========================== StrippingConf v3r6 2010-07-11 =================

! 2010-07-11 - Juan Palacios
 - python/StrippingConf/Configuration.py
  . Protect chechUniqueOutputLocation against lines with outputLocation = None.
 - tests/test_strippingconf.py
  . Typo.

! 2010-07-07 - Juan Palacios
 - Added tests/test_strippingconf.py and related QM test.
 - cmt/requirements
  . Increase to v3r6
 - python/StrippingConf/Configuration.py
  . Raise exception instead of asserting when lines have duplicate output locations.
  . Do not write to stderr in this case, let the exception do the work.

! 2010-07-06 - Anton Poluektov 
  - New options 'MaxCandidates' and 'MaxCombinations' for 
    StrippingConf, StrippingStream and StrippingLine. They apply combinatorics 
    limits to CombineParticles in the stripping lines. Options given at the 
    upper level (e.g. StrippingConf) are overridden by the lower level
    (e.g. StrippingStream or StrippingLine). 
    By default, both 'MaxCandidates' and 'MaxCombinations' are 'None', 
    meaning that no combinatorics limit is applied. 
    
  - Check that the output locations of all active lines in StrippingConf 
    are unique. Otherwise, the error is raised. 

! 2010-06-28 - Anton Poluektov 
  - BadEventSelection and AcceptBadEvents can be given to StrippingConf. 
    However, those in StrippingStream have priority. 

!========================== StrippingConf v3r5 2010-06-24 =================

! 2010-06-24 - Juan Palacios
 - python/StrippingConf/StrippingLine.py
  . Give cloned SelectionSequence a more unique name. Print warning.

! 2010-06-23 - Juan Palacios
 - python/StrippingConf/StrippingLine.py
  . StrippingLines constructed from Selection, SelectionSequence, MergedSelection 
    or AutomaticData write data to 'Phys/'+ line.subname()


! 2010-06-23 - Anton Poluektov 
 - python/StrippingConf/StrippingLine.py
   Make bindMembers to be called only in the StrippingLine constructor. 

! 2010-06-22 - Juan Palacios
 - python/StripingConf/StrippingLine.py
  . Make it understand AutomaticData.

! 2010-06-21 - Anton Poluektov
 - More logical interface for treating bad events in StrippingStream. Options: 
     * BadEventSelection - algorithm that should pass for bad events
     * AcceptBadEvents   - If True, bad events will be accepted 
                           by StrippingStream sequencer (default). 
   The options can be changed after the stream constructor, e.g. 
     stream = StrippingStream("Stream")
     stream.BadEventSelection = filter
     stream.AcceptBadEvents = False

! 2010-06-19 - Anton Poluektov
 - Options BadEventSelection and GoodEventSelection in StrippingStream
   and corresponding member functions SetBadEventSelection and SetGoodEventSelection. 
   
   If an algo is passed as BadEventSelection, it will run before all the lines 
   of the stream. If it passes, the lines will NOT be run, but the event will be 
   accepted. Use this if bad events have to be stored on stream DST.
   
   If GoodEventSelection is given, the lines will run only if it passes. 
   If it fails (bad event), the event will not be accepted. 
   Use this if bad events should NOT be stored on stream DST. 

   BadEventSelection and GoodEventSelection cannot be given at the same time. 
   By default, both are None. 

!========================== StrippingConf v3r4 2010-06-21 =================

! 2010-06-21 - Juan Palacios for Anton Poluektov 
 - Add BadEventSelection attribute to StrippingStream. Events satisfying selection
   are excluded from the stripping selections but are kept in the DST.

! 2010-06-01 - Anton Poluektov 
 - Added stream decisions (OR of all stream lines) to stripping DecReports

!========================== StrippingConf v3r3 2010-05-26 =================

! 2010-05-26 - Juan Palacios
 - Add tests directory for py.tests and QM tests.
 - Add some simple tests for StrippingLine configuration. To be extended.

! 2010-05-21 - Juan Palacios
 - Remove some printouts in StrippingLine.filterMembers()

! 2010-05-21 - Anton Poluektov 
 - Fixed bug in filterMembers affecting StrippingLines with GaudiSequencers: 
   FilterDesktops were not configured correctly for them by DSTwriter, 
   which caused missing candidates on DST. 

! 2010-05-20 - Anton Poluektov
 - Creating StrippingLine with a duplicate name now causes DaVinci to exit
   (was warning before)

!========================== StrippingConf v3r2 2010-05-15 =================

! 2010-04-26 - Anton Poluektov
 - Introduced limit on number of candidates created by CombineParticles 
   (2000 at the moment). 

! 2010-04-16 - Anton Poluektov
 - Warning is printed if the StrippingLine with duplicate name is created
 - Fixed printout of StrippingAlg from python (Filter sequence was not printed)

! 2010-04-15 - Anton Poluektov 
 - Fixed typo in line cloning with modification of GaudiSequencer slots ('keq'->'key')
 - Fixed bug that prevented modification of InputLocations of StrippingMember while 
   cloning lines. 

!========================== StrippingConf v3r1 2010-04-08 =================
! 2010-03-24 - Anton Poluektov 
 - Added StrippingLine.filterMembers() and StrippingStream.filterMembers() functions
   to get the flat list of all filter algorithms (CombineParticles, FilterDesktops etc.)
 - Removed support for HLT-like (dictionary of cuts) settings for configurable selections. 
   Settings can be applied in plain python in a more transparent way. 

! 2010-03-22 - Anton Poluektov
 - python/StrippingConf/StrippingLine.py
   Allow ConjugateNeutralPID to make a StrippingMember (diff by Mat Charles)

! 2010-03-15 - Juan Palacios
 - cmt/requirements
  . Use Phys/SelPy instead of PhysSel/PhysSelPython.
  . Increase to v3r1
 - python/StrippingConf/StrippingLine.py
  . Use SelPy.selection instead of deprecated PhysSelPython.selection

!========================== StrippingConf v3r0p1 2010-03-08 =================

! 2010-03-08 - Juan Palacios
 - Remove src/StrippingAlg and src/Strippingcheck, somehow these remained
   in CVS.
 - Increase version to v3r0p1

!========================== StrippingConf v3r0 2010-02-23 ===================

! 2010-02-23 - Juan Palacios
 - python/StrippingConf/StrippingLine.py
  . StrippingLine can now be built from a Selection object. No longer necesary to build
    a SelectionSequence.
 - cmt/requirements
  . Use PhysSel/PhysSelPyhton.

! 2010-02-22 - Anton Poluektov 
 - TESPrefix property in StrippingConf. Defaults to 'Strip'. 
   Is used both to specify the HltDecReport output location (is prepended to already 
   existing HDRLocation property) in case of DST output and to specify the location 
   of candidates for SETC output. 
   HDRLocation now defaults to 'Phys/DecReports'. 

! 2010-02-22 - Anton Poluektov
 - Fixed calculation of the number of candidates for HltDecReport. 

! 2010-02-19 - Anton Poluektov 
 - Added HDRLocation argument to StrippingConf. 
   Location of the stripping HltDecReport. Equals to 'Strip/Phys/DecReports' by default. 

! 2010-02-18 - Juan Palacios
 - Moved StrippingAlg and StrippingCheck to Phys/StrippingAlgs.
 - This package now only contains python code.
 - Version increased to v3r0

! 2010-02-13 - Anton Poluektov 
 - Added configuration support for settings stored in StrippingSettings
 - StrippingConfigurableUser class with getProps() method

!========================== StrippingConf v2r0 2010-02-02 ===================

! 2010-02-03 - Anton Poluektov 
 - Temporary measures to suppress "Invalid decision ID" warnings while StrippingANNSvc 
   is absent. 

! 2010-02-01 - Anton Poluektov
 - Make alorithm name the default outputSelection for bindMembers 

! 2010-01-29 - Anton Poluektov 
 - Small bugfixes, added SelSequence handler for bindMembers. 

! 2010-01-28 - Anton Poluektov
 - First commit of StrippingConf using Selection::Line. Not fully functional with HltDecReport yet, 
   but should not break the nightlies. 

! 2010-01-13
 - StrippingLine.py - Modified to use HltLine and HltDecReport

!========================== StrippingConf v1r8 2009-11-19 ===================

! 2009-11-19 - Juan Palacios
 - cmt/requirements
  . increase version to v1r8
 - python/StrippingConf/configuration.py
  . Hide configurables that are not known at build time.
 - python/StrippingConf/StrippingLine.py, StrippingStream.py
  . Move some configurables imports to the relevant function bodies.

! 2009-11-18 - Anton POLUEKTOV
 - Printout for StrippingConf/StrippingStream/StrippingAlg.  
   One can do "print StrippingConf" from python now. 
 - Check if the line was declared but not appended to any stream. 
   Warning is produced in this case. 

! 2009-11-12 - Anton POLUEKTOV
 - StrippingLine.py: bug fix with ODIN and L0 filters (missing import)

! 2009-11-06 - Anton POLUEKTOV 
 - StrippingLine.py: Added ODIN and L0 filters to the line options. 

!========================== StrippingConf v1r7 2009-10-28 ===================

! 2009-10-28 - Anton POLUEKTOV
 - Configuration.py
  * Default name for main stripping sequencer is back to "StrippingGlobal"
    for backwards compatibility. 
  * Use StrippingConf._name instead of fixed "StrippingGlobal" in the 
    list of selections names. 

! 2009-10-19 - Juan PALACIOS
 - Configuration.py
  . Make into plain python class. Interface completely backwards compatible.
  . Extensions to interface: add appendStreams( streams ) method accepting a 
    list of StrippingStreams. Add Streams argument to constructor, also taking
    a list of StrippingStreams.
 - cmt/requirements
  . Increase version to v1r7

! 2009-10-13 - Anton Poluektov

 - Major changes in Configuration.py. StrippingConf does not interact with 
   DaVinci internally, but rather provides an interface with the streams. 
   This requires corresponding changes in StrippingSelections jobs. 

 - Streams are not defined in StrippingLine constructor now. 
   StrippingLines have to be attached to StrippingStreams in job options. 

 - New algorithm StrippingCheck. Used instead of StrippingAlg for SETC tagger
   (checks if the TES location is not empty). Activated by TES=True option
   of StrippingConf. 


!========================== StrippingConf v1r6 2009-10-06 ===================
! 2009-10-05 - Anton POLUEKTOV

 - Fixed missing "Phys/" in StrippingLine.outputLocation() used for DST writing in case of
   "old" (i.e. not based on SelectionSequence) selections. 
 - Added "SETC" output type. This does not run selections, but just checks the 
   existence of the corresponding TES locations using TESCheck. To be used for tagger. 

!========================== StrippingConf v1r5 2009-10-02 ===================

! 2009-10-01 - Juan PALACIOS
 - python/StrippingConf/StrippingLine.py
  . Add concept of outputLocation() on top of outputSelection(). 
    outputLocation() gives a useful and explicit TES location for the output
    of a StrippingLine or bindMembers. outputSelection() is the name of the 
    algorithm writing the interesting data.
 - python/StrippingConf/StrippingStream.py
  . outputLocations() are now constructed by calling the outputLocation() 
    method of each member, instead of calling outputSelection() and pre-pending
    a "Phys/"

! 2009-08-31 - Juan PALACIOS
 - python/StrippingConf/StrippingLine.py
  . Add handler for SelectionSequence object.
 - cmt/requirements
  . Increase version to v1r5

!========================== StrippingConf v1r4p1 2009-08-31 =================

! 2009-08-31 - Juan PALACIOS
 - cmt/requirements
  . Increase version to v1r4p1

! 2009-08-27 - Anton Poluektov  
  - The output location for a line with the GaudiSequencer as the last stage 
    was deterimned incorreclty in bindMembers. Caused crash while writing DST. Fixed. 

!========================== StrippingConf v1r4 2009-08-27 ===================

! 2009-08-26 - Juan Palacios
 - python/StrippingConf/StrippingStream.py
  . Class StrippingLine is now an LHCbConfigurableUser. 
  . Simplify code.
  . Fix bug in outputLocations: "/Phys" -> "Phys"
 - python/StrippongConf/Configuration.py
  . StreamList replaced by a GaudiSequencer's Members field. This seems to be
    the only way to pass a list of configurables to another configurable safely.
  . OutputType='DST' does nothing except printing an warning. DST writing now
    handled by SelDSTWriter.

 - cmt/requirements
  . Increase version to v1r4

!========================== StrippingConf v1r3 2009-08-11 ===================

! 2009-08-11 - Juan Palacios
 - cmt/requirements
  . Increase version to v1r3

! 2009-07-31 - Anton Poluektov

  * Added checkPV attribute to the StrippingLine. checkPV=True by default. 
    If checkPV is True, it adds an instance of CheckPV algorithm before 
    all algorithms of the line are run, that requires at least one 
    primary vertex in event. 

!========================== StrippingConf v1r2 2009-07-16 ===================

! 2009-07-10 - Anton Poluektov
   * Fixed the bug due to ModeOR=TRUE in the global sequencer for ETC output. 
     (after the positive decision for one of the selections, all the rest was 
      not called at all)

! 2009-07-07 - Anton Poluektov
   * Introduced a new option for StrippingConf(): StreamFile
     Example: StrippingConf().StreamFile["BExclusive"] = "Common.dst"
              will write the BExclusive stream to Common.dst. 
              Writing many streams to one .dst file is possible. 

!========================== StrippingConf v1r1 2009-06-23 ===================
! 2009-06-17 - Anton Poluektov

   * Added "StrippingGlobal" decision to ETC: the OR of all decisions.

!============================= StrippingConf v1r0 2009-06-02 ==================

! 2009-06-02 - Anton Poluektov
   * Fixed DST output (but not completely, every event is written 2 times!)
   * ActiveStreams now takes "subname" of the line, not "name" 
     (e.g. "B2DPi" rather than "StrippingB2DPi")

! 2009-05-22 - Anton Poluektov
 - Bug fixes related to ETC writing in Configuration.py : 
   * appendToMoniSequence seems not to work, use MainSequence instead
   * appended StreamSequencer (was forgotten)
   * IgnoreFilterPassed = TRUE for this sequencer

! 2009-05-22 - Patrick Koppenburg
 - DaVinciWriteDst now (tag pkoppenb_20090522) populates DaVinci 
   sequencer directly. No need to pass sequnecer anymore.

! 2009-05-21 - Patrick Koppenburg
 - Allow for output None
 - Use DaVinci.appendToMainSequence and appendToMoniSequence. 
   Requires Phys/DaVinci with tag pkoppenb_20090521 or later

! 2009-05-20 - Patrick Koppenburg
 - Remove StrippingConf.pyc file from cvs.

! 2009-05-15  Anton Poluektov

  Initial release. Content of this package: 
    * StrippingLine python objects  (converted from HltConf/HltLines v2r7)
    * StrippingAlg C++ configurable (converted from HltCommon/HltLine v5r5)

! -----------------------------------------------------------------------------
! The END 
! -----------------------------------------------------------------------------
