<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Standard test in many applications, check for continued backwards-compatibility of processing a given file
# Prerequisites: None
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception
#               . MAJOR: additional FATAL/ERROR messages always a major problem. no ERROR messages should ever be printed when running this test. This would indicate a loss of backward-compatibility.
#               . MINOR: additional WARNING messages, sometimes extra warning messages when performing out-of-date/obsoleted tasks can be tolerated.
#               . EXPECTED: Small changes in output are expected and tolerated. Backwards compatibile does not imply the *same exact thing* is done with the exact smae result, just that something sensible is done. Sometimes the database tags can become problematic for these tests, when not-strictly-backward-compatible updates in the code require similar updates in the database. Ideally these should be protected by DataType, but they are not always.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="timeout"><integer>1200</integer></argument>
  <argument name="args"><set>
    <text>$DAVINCITESTSROOT/tests/options/SimpleMuSelection.py</text>
    <text>--option</text>
    <text>from Configurables import DaVinci; from PRConfig import TestFileDB; TestFileDB.test_file_db["brunel-v35r8-2009-xdst-wtruth-wspill"].run(configurable=DaVinci()); </text>
  </set></argument>
  <argument name="validator"><text>
findReferenceBlock("""
BachelorMuForTestsSUCCESS Number of counters : 5
 |    Counter                                      |     #     |    sum     | mean/eff^* | rms/err^*  |     min     |     max     |
 | "# Phys/StdLooseMuons"                          |         1 |          1 |     1.0000 |     0.0000 |      1.0000 |      1.0000 |
 | "# input particles"                             |         1 |          1 |     1.0000 |     0.0000 |      1.0000 |      1.0000 |
 |*"#accept"                                       |         1 |          1 |(  100.000 +- 100.000  )%|   -------   |   -------   |
 |*"#passed"                                       |         1 |          1 |(  100.000 +- 100.000  )%|   -------   |   -------   |
 |*"efficiency"                                    |         1 |          1 |(  100.000 +- 100.000  )%|   -------   |   -------   |
""", stdout, result, causes, signature_offset = 0)
</text></argument>
</extension>
