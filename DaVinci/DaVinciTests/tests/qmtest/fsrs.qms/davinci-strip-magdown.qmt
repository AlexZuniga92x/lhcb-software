<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Run a simple stripping like job to feed FSRs for this test suite
# Prerequisites: This is a complete test suite which creates its own input
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception, stderr, nonzero return code
#               . MAJOR: additional FATAL messages always a major problem. no ERROR messages should ever be printed when running this test.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set>
    <text>$DAVINCIROOT/options/DaVinci-Default.py</text>
    <text>$DAVINCITESTSROOT/tests/options/fsrs/DVStripping-RealData-MagDown.py</text>
    <text>--option</text>
    <text>from Configurables import DaVinci; from PRConfig import TestFileDB; TestFileDB.test_file_db["brunel-v37r3-fsrs-md"].run(configurable=DaVinci(),withDB=False,clear=True); DaVinci().EvtMax=-1;</text>
  </set></argument>
  <argument name="timeout"><integer>3000</integer></argument>
  <argument name="use_temp_dir"><enumeral>true</enumeral></argument>
  <argument name="validator"><text>
findReferenceBlock("""
DaVinciInitAlg                                              SUCCESS 18 events processed
""", stdout, result, causes, signature_offset = 0, id = "4100")
countErrorLines({"FATAL" : 0})
</text></argument> 
</extension>
