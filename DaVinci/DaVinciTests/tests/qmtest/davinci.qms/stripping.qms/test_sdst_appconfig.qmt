<?xml version="1.0" ?>
<!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="timeout"><integer>3600</integer></argument>
<argument name="args"><set>
  <text>$APPCONFIGOPTS/DaVinci/StrippingLinesPrescales-1003.py</text>
  <text>$APPCONFIGOPTS/DaVinci/DVStrippingDST-RealData.py</text>
  <text>$APPCONFIGOPTS/DaVinci/DataType-2010.py</text>
<text>$APPCONFIGOPTS/DaVinci/InputType-SDST.py</text>
    <text>--option</text>
    <text>from Configurables import DaVinci; DaVinci().EvtMax=-1; EventSelector().Input = ["DATAFILE='PFN:castor:/castor/cern.ch/user/c/cattanem/testFiles/Brunel-v37r1-069857_0000000006-1000ev.sdst' TYP='POOL_ROOTTREE' OPT='READ'"]; FileCatalog().Catalogs =['xmlcatalog_file:../options/TestSDSTCatalog.xml']</text>
</set></argument>  <argument name="validator"><text>
findReferenceBlock("""
DaVinciInitAlg                                              SUCCESS 199 events processed
""", stdout, result, causes, signature_offset = 0, id = "4100")
countErrorLines({"FATAL":0})
bad_strings = ["WARNING rawEvent not found at location 'DAQ/RawEvent'", "WARNING L0DUFromRawAlg:: Unable to decode L0DU rawBank", "ERROR RichPIDPacker	Unknown packed data version"]
for bad_string in bad_strings :
   if stdout.find(bad_string) !=-1 :
      causes.append('Excluded string')
      result['GaudiTest.ExcludedString: '+bad_string] = result.Quote('ERROR: Found string '+bad_string)
</text></argument>
</extension>
