<?xml version="1.0" ?>
<!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="timeout"><integer>3600</integer></argument>
<argument name="args"><set>
  <text>../options/DVTestStripping-2010-rDST.py</text>
</set></argument>
<argument name="validator"><text>
findReferenceBlock("""
DaVinciInit                                                 SUCCESS 1000 events processed
""", stdout, result, causes, signature_offset = 0)
countErrorLines({"FATAL":0})
bad_strings = ["WARNING rawEvent not found at location 'DAQ/RawEvent'", "WARNING L0DUFromRawAlg:: Unable to decode L0DU rawBank"]
for bad_string in bad_strings :
   if stdout.find(bad_string) !=-1 :
      causes.append('Excluded string')
      result['GaudiTest.ExcludedString: '+bad_string] = result.Quote('ERROR: Found string '+bad_string)
</text></argument>
</extension>
