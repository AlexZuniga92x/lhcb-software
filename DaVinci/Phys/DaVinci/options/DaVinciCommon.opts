/** @file 
 *  Configuration options for the execution of any DaVinci application.
 *  Standard services and DLLs.
 * 
 *  @author G.Corti
 *  @date 2003-03-14
 */
//--------------------------------------------------------------
// Main initialisation
#include "$PHYSSYSROOT/options/DaVinciInit.opts"
// POOL Persistency
#include "$STDOPTS/DstDicts.opts"
//--------------------------------------------------------------
// Physics packages and dependent packages
#include "$PHYSSYSROOT/options/PhysCoreSys.opts"
//    ... for physics check on MC data
#include "$ANALYSISSYSROOT/options/PhysMCSys.opts"
//--------------------------------------------------------------
#include "$DAVINCIROOT/options/DaVinciTransporter.opts"
//--------------------------------------------------------------
// Get the event time (for CondDb) from ODIN 
EventClockSvc.EventTimeDecoder = "OdinTimeDecoder";

// Profiling
#pragma print on
AuditorSvc.Auditors  = { "NameAuditor", "ChronoAuditor", "MemoryAuditor" };
NameAuditor.Enable   = false;
ChronoAuditor.Enable = false ;
MemoryAuditor.Enable = false;

// General output levels (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL)
MessageSvc.OutputLevel                  = 3;
ToolSvc.OutputLevel                     = 3;
XmlParserSvc.OutputLevel                = 4;

#include "$CALORECOROOT/options/CaloRecoOnDemand.opts"


// TMP // #include "$DAVINCIASSOCIATORSROOT/options/DaVinciAssociators.opts"

// Print algorithm name with 40 characters
MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";

// Print Frequency
EventSelector.PrintFreq  = 10;

//--------------------------------------------------------------
// Histogram persistency 
// Root DLL for histogram persistency is needed for CALOPID. Hbook 
// might be needed for users. 
ApplicationMgr.DLLs += { "RootHistCnv" };
//ApplicationMgr.DLLs += { "HbookCnv" };
// Need a histogram persistency or Calo crashes :-(
ApplicationMgr.HistogramPersistency = "ROOT";

// Default Database dependent configurations. The latest
// compatible database is included from here.
#include "$DAVINCIROOT/options/DaVinciDDDB.opts"

// Start DaVinci sequence
//
#include "$DAVINCIROOT/options/DaVinciMainSeq.opts"
ApplicationMgr.AppName = "DaVinci" ;

//--------------------------------------------------------------
#include "$DAVINCIROOT/options/DaVinciProtoPCalibrate.opts"


//-------------------------------------------------------------
// Check StatusCodes
//-------------------------------------------------------------
ApplicationMgr.StatusCodeCheck = true ;

//-------------------------------------------------------------
// New timer for everything
//-------------------------------------------------------------
ApplicationMgr.ExtSvc +=  [ "ToolSvc" , "AuditorSvc" ] ; 
ApplicationMgr.AuditAlgorithms = 1;  
AuditorSvc.Auditors +=  [ "TimingAuditor/TIMER" ] ;   
ToolSvc.SequencerTimerTool.OutputLevel = 4;          
