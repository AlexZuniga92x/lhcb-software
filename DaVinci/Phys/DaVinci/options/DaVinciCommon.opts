/** @file 
 *  Configuration options for the execution of any DaVinci application.
 *  Standard services and DLLs.
 *  Algorithms for reprocessing, primary vertex and production of 
 *  ProtoParticles.
 *  Default properties for common use algorithms and tools.
 * 
 *  @author G.Corti
 *  @date 2003-03-14
 */

// Allow units to be used in jobOptions
#units "$GAUDICONFROOT/options/units.opts"

// Framework
// ToolSvc has to be first to be sure it's the last
// to be deleted at the end
ApplicationMgr.ExtSvc = { "ToolSvc" ,
                           "ParticlePropertySvc",
                           "EventSelector" };
ApplicationMgr.DLLs  += { "GaudiAud", "GaudiAlg" };

// Detector Description & Magnetic Field
#include "$STDOPTS/DetDesc.opts"
ApplicationMgr.ExtSvc += { "MagneticFieldSvc" };
ApplicationMgr.DLLs   += { "Magnet" };
ApplicationMgr.DLLs   += { "VeloDet", "OTDet", "STDet", "MuonDet" };
ApplicationMgr.DLLs   += { "CaloDet", "CaloDetXmlCnv" };

// Particle Properties
// ParticlePropertySvc.ParticlePropertiesFile = "$PARAMFILESROOT/data/particle.cdf";

// Pool Persistency
#include "$GAUDIPOOLDBROOT/options/GaudiPoolDbRoot.opts"
#include "$EVENTSYSROOT/options/PoolDicts.opts"

// GaudiDb Persistency
//#include "$STDOPTS/RootDb.opts"
EventDataSvc.ForceLeaves = true;
EventDataSvc.RootCLID    =    1;

// Associators
ApplicationMgr.DLLs += { "ITAssociators", "OTAssociators" };
ApplicationMgr.DLLs += { "VeloAssociators", "MuonAssociators" };
ApplicationMgr.DLLs += { "CaloEvent", "CaloAssociators" };
ApplicationMgr.DLLs += { "TrAssociators" };
ApplicationMgr.DLLs += { "Associators" };
ApplicationMgr.DLLs += { "DaVinciAssociators" };
#include "$DAVINCIASSOCIATORSROOT/options/DaVinciAssociators.opts"

// ProtoParticles creation: charged and neutrals
ApplicationMgr.DLLs += { "GlobalReco", "CaloReco", "CaloPIDs" };
ApplicationMgr.DLLs += { "MuonID", "MuonTools" };
#include "$GLOBALRECOROOT/options/GlobalReco.opts"
#include "$DAVINCIMCTOOLSROOT/options/MCPIDProtoPAlg.opts"
#include "$CALORECOOPTS/Reco.opts"
#include "$CALOPIDSOPTS/CaloPIDs.opts"
#include "$MUONIDROOT/options/MuonIDDLLTool.opts"

// Physics packages and dependent packages
ApplicationMgr.DLLs += { "DaVinciTools" };
ApplicationMgr.DLLs += { "TrExtrapolator" };
//    ... for physics check on MC data
ApplicationMgr.DLLs += { "MCTools" };
ApplicationMgr.DLLs += { "DaVinciMCTools" };
ApplicationMgr.DLLs += { "DaVinciEff" };
//ApplicationMgr.DLLs += { "DaVinciTest" };
//ApplicationMgr.DLLs += { "DaVinciUser" };
//    ... generic algorithms for selection of decays
// ApplicationMgr.DLLs += { "PhysSelections", "LoKi" };
ApplicationMgr.DLLs += { "Ks2PiPiSel" };
//    ... flavour tagging
ApplicationMgr.DLLs += { "FlavourTagging" };
ApplicationMgr.DLLs += { "RecoTools" };

// Generic Utility package
ApplicationMgr.DLLs += { "Utilities" };

// Profiling
#pragma print on
AuditorSvc.Auditors  = { "NameAuditor", "ChronoAuditor", "MemoryAuditor" };
NameAuditor.Enable   = false;
ChronoAuditor.Enable = true;
MemoryAuditor.Enable = false;

// General output levels (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL)
MessageSvc.OutputLevel                  = 3;
ToolSvc.OutputLevel                     = 3;
XmlParserSvc.OutputLevel                = 4;

// Print algorithm name with 40 characters
MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";

// Print Frequency
EventSelector.PrintFreq  = 1;


//--------------------------------------------------------------
// Histogram persistency 
// Root DLL for histogram persistency is needed for CALOPID. Hbook 
// might be needed for users. 
ApplicationMgr.DLLs += { "RootHistCnv" };
ApplicationMgr.DLLs += { "HbookCnv" };
// Need a histogram persistency or Calo crashes :-(
ApplicationMgr.HistogramPersistency = "ROOT";

//--------------------------------------------------------------
// Pre DaVinci algorithm. MUST BE FIRST.
ApplicationMgr.TopAlg += { "PreDV" };

// Default Database dependent configurations. The latest
// compatible database is included from here.
#include "$DAVINCIROOT/options/DaVinciDDDB.opts"

/*---------------------------------------------------
  TEMPORARY PATCH:
  Because of a bug in MinimalEventLoopMgr.cpp,
  an algorithm contained in two sequencers
  is executed twice. This is the case of 
  CaloDigitsFromRaw when both the Electrons 
  and Neutrals sequences are called.
  To avoid the problem, execute the algorithm
  in DaVinciCommon.opts, hence in *all* events.
  
  !! Don't forget to restore the initial way when
  a patched version of MinimalEventLoopMgr.cpp
  comes out !!
---------------------------------------------------*/
ApplicationMgr.TopAlg += { "CaloDigitsFromRaw" };
