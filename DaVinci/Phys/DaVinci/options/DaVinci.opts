/** @file 
 * 
 *  Example file to run a DaVinci job.
 *  This file defines, sequences and configures the algorithms 
 *  to be executed
 *  The algorithms to produce common final reconstruction objects
 *  are executed (primary vertices, charged and neutral protoparticles) 
 *  while example on how to run additional algorithm
 *  of general interest are provided commented.
 *
 *  @author G.Corti
 *  @date 2004-01-26
 */

//--------------------------------------------------------------
// Standard Gaudi configuration and additional DLLs are in
// DaVinciCommon. 
#pragma print off
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#pragma print on

// Default Database dependent configurations. The latest
// compatible database is included from here.
// If you need something different choose from vXXXX.opts when
// more than one is available
#include "$DAVINCIROOT/options/DaVinciDDDB.opts"

//--------------------------------------------------------------
// DaVinci Global Reconstruction Algorithms
// VERY IMPORTANT:
//   ChargedProtoPAlg and PrimVtxFinder are executed in
//   DaVinciReco and MUST not be executed again
// REMEMBER:
//   to make Neutral ProtoParticles for channels with neutrals
// REMEMBER:
//   to make Kshorts with all type of tracks
//--------------------------------------------------------------
#include "$DAVINCIROOT/options/DaVinciReco.opts"

//--- Neutral ProtoParticles (gammas and pi0) 
// NOTE:: Not enough information in new GaudiRootDB files at the moment to 
//        produce neutral protoparticles -> only works with POOL input
#include "$DAVINCIROOT/options/DaVinciNeutrals.opts"

//--- For merged and resolved pi0 the corresponding selection algorithm
//    need to be executed. 
//    Note that DaVinciNeutrals MUST be executed
// ApplicationMgr.DLLs   += { "Bd2PiPiPi0" };
// ApplicationMgr.TopAlg += { "ResolvedPi0Alg" };
// #include "$BD2PIPIPI0ROOT/options/ResolvedPi0Alg.opts"
// ApplicationMgr.TopAlg += { "MergedPi0Alg" };
// #include "$BD2PIPIPI0ROOT/options/MergedPi0Alg.opts"

//--- Ks->pi+pi- with all type of tracks loose selection + monitoring
//#include "$DAVINCIROOT/options/DaVinciKshortLoose.opts"
//--- Ks->pi+pi- with all type of tracks tight selection + monitoring
//#include "$DAVINCIROOT/options/DaVinciKshortTight.opts"

//--- Example of Particle with Assigned pID only for HLT studies
//#include "$DAVINCIROOT/options/PreLoadNoPIDParticles.opts"

//--- Example of use of CombinedParticleMaker
//#include "$DAVINCIROOT/options/PreLoadCombinedParticles.opts"

//--------------------------------------------------------------
// >>>>>>>>>>>> To be customized for a specific job <<<<<<<<<<<<
//----------------------------------------------------------------
// Other additional algorithms to be executed, from public 
// or private code and their options can be listed below or
// included. 
// REMEMBER: 
//   Options for algorithms and tools can be added here to overwrite
//   any of the default options
// NOTE:
//   The various selections algorithms have each a DVDecayName.opts
//   file in their package that can be given as full options of the
//   DaVinci executable INSTEAD of DaVinci.opts
//   ex.: DaVinci.exe $B2HHROOT/options/DVBd2PiPi.opts
//        DaVinci.exe $BS2DSHROOT/options/DVBs2KKKPi_Pi.opts
//----------------------------------------------------------------

//----------------------------------------------------------------
// Switch on to produce a miniDST file
//#include "$DAVINCIROOT/options/DaVinciMiniDst.opts"

//--------------------------------------------------------------
// Histogram persistency 
// Hbook or Root are available, uncomment the one you want to use
// Keep in mind that the hbook file referred to here contains 
// all the C++ generated histograms, not those filled in Fortran
#include "$STDOPTS/Hbook.opts"
HistogramPersistencySvc.OutputFile = "DVHistos.hbook";
//#include "$STDOPTS/RootHist.opts"
//HistogramPersistencySvc.OutputFile = "DVHistos.root";

//--------------------------------------------------------------
// Ntuples available by default. Comment to switch off
ApplicationMgr.ExtSvc += { "NTupleSvc" };
NTupleSvc.Output={"FILE1 DATAFILE='DVNtuples.hbook' TYP='HBOOK' OPT='NEW'"};
//NTupleSvc.Output={"FILE1 DATAFILE='DVNtuples.root' TYP='ROOT' OPT='NEW'"};

//--------------------------------------------------------------
// Set output level thresholds (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel                  = 3;
ToolSvc.OutputLevel                     = 3;
XmlParserSvc.OutputLevel                = 4;
ChargedProtoPAlg.OutputLevel            = 3;

// Modify Message Format to print algorithm name with 40 characters
MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";

//---------------------------------------------------------------
// Number of events to process, skip and printing frequency
ApplicationMgr.EvtMax    = 500;
EventSelector.FirstEvent = 1;
EventSelector.PrintFreq  = 1;
   
//---------------------------------------------------------------
// Sample input file 
#include "$DAVINCIROOT/options/DaVinciTestData.opts"

//***************************************************************
