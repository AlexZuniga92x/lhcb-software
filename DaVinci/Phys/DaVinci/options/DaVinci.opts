/** @file 
 * 
 *  Example file to run a DaVinci job.
 *  This file defines, sequences and configures the algorithms 
 *  to be executed
 *
 *  @author G.Corti
 *  @date 2004-01-26
 */

//--------------------------------------------------------------
// Standard Gaudi configuration and additional DLLs are in
// DaVinciCommon. 
#pragma print off
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#pragma print on

//--------------------------------------------------------------
// Re-run L0 and L1 Trigger with DC04 tuning
//#include "$DAVINCIROOT/options/L0.opts"
//#include "$TRGSYSROOT/options/L1.opts"
// HLT: include either of both:
// #include "$TRGSYSROOT/options/Hlt.opts"            // Hlt tracking
// #include "$HLTGENERICROOT/options/HltGeneric.opts" // Hlt tracking + L1 confirmation
//--------------------------------------------------------------
// High luminosity: Include two of                
//#include "$L0DUROOT/options/L0-lumi3e32.opts"
//#include "$L0DUROOT/options/L0-lumi5e32.opts"
//#include "$L1DECISIONROOT/options/L1-lumi3e32.opts"
//#include "$L1DECISIONROOT/options/L1-lumi5e32.opts"
//--------------------------------------------------------------

// #include "$DAVINCIROOT/options/L0Checking.opts"  // for L0 checks
// #include "$TRGSYSROOT/options/TrgChecking.opts"  // for L1 & HlT checks

//--------------------------------------------------------------
// DaVinci Global Reconstruction Algorithms
// REMEMBER to make electrons first.
// REMEMBER to make Neutral ProtoParticles for channels with neutrals
// REMEMBER to make Kshorts with all type of tracks
//--------------------------------------------------------------
//
//--- Charged ProtoParticles
//
// 1. Electrons (MUST be first!)
//#include "$DAVINCIROOT/options/DaVinciElectrons.opts"
// don't forget to call DaVinciReco too.
//
// 2. Charged
// VERY IMPORTANT:
//   ChargedProtoPAlg and PrimVtxFinder are executed in
//   DaVinciReco and MUST not be executed again
#include "$DAVINCIROOT/options/DaVinciReco.opts"

//--- Neutral ProtoParticles (gammas and pi0) 
//
// Note that this has also to be executed if you need
// Bremsstrahlung photons (AddBrem option)
// #include "$DAVINCIROOT/options/DaVinciNeutrals.opts"

//--- For merged and resolved pi0 the corresponding selection algorithm
//    need to be executed. 
//    Note that DaVinciNeutrals MUST be executed
// ApplicationMgr.DLLs   += { "CommonParticles" };
// ApplicationMgr.TopAlg += { "ResolvedPi0Alg" };
// #include "$COMMONPARTICLESROOT/options/ResolvedPi0Alg.opts"
// ApplicationMgr.TopAlg += { "MergedPi0Alg" };
// #include "$COMMONPARTICLESROOT/options/MergedPi0Alg.opts"

// pair photons:
// ApplicationMgr.DLLs   += { "CommonParticles" };
// ApplicationMgr.TopAlg += { "ProducePairPhotons" };
// #include "$COMMONPARTICLESROOT/options/ProducePairPhotons.opts"

//--- Ks->pi+pi- with all type of tracks loose selection + monitoring
//#include "$DAVINCIROOT/options/DaVinciKshortLoose.opts"
//--- Ks->pi+pi- with all type of tracks tight selection + monitoring
//#include "$DAVINCIROOT/options/DaVinciKshortTight.opts"

//--- Example of Particle with Assigned pID only for HLT studies
//#include "$DAVINCIROOT/options/PreLoadNoPIDParticles.opts"

//--- Example of use of CombinedParticleMaker
//#include "$DAVINCIROOT/options/PreLoadCombinedParticles.opts"

//--------------------------------------------------------------
// >>>>>>>>>>>> To be customized for a specific job <<<<<<<<<<<<
//----------------------------------------------------------------
// Other additional algorithms to be executed, from public 
// or private code and their options can be listed below or
// included. 
// REMEMBER: 
//   Options for algorithms and tools can be added here to overwrite
//   any of the default options
// NOTE:
//   The various selections algorithms have each DV*.opts
//   file(s) in their package that can be given as full options of the
//   DaVinci executable INSTEAD of DaVinci.opts
//   ex.: DaVinci.exe $B2HHROOT/options/DVTDRselBd2PiPi.opts
//        DaVinci.exe $BS2PHIETACROOT/options/DVPreselBs2Phi2KK_Etac.opts
//----------------------------------------------------------------

//----------------------------------------------------------------
// Switch on to produce a miniDST file - or have a look at 
// options/DVWriteMiniDst.opts
//#include "$DAVINCIROOT/options/DaVinciMiniDst.opts"

//--------------------------------------------------------------
// Histogram persistency 
// Hbook or Root are available, uncomment the one you want to use
// Keep in mind that the hbook file referred to here contains 
// all the C++ generated histograms, not those filled in Fortran
// ApplicationMgr.HistogramPersistency = "HBOOK";
// HistogramPersistencySvc.OutputFile = "DVHistos.hbook";
// or if you prefer ROOT:
//ApplicationMgr.HistogramPersistency = "ROOT";
//HistogramPersistencySvc.OutputFile = "DVHistos.root";
ApplicationMgr.HistogramPersistency = "HBOOK";
HistogramPersistencySvc.OutputFile = "DVHistos.hbook";

//--------------------------------------------------------------
// Ntuples available by default. Comment to switch off
ApplicationMgr.ExtSvc += { "NTupleSvc" };
NTupleSvc.Output={"FILE1 DATAFILE='DVNtuples.hbook' TYP='HBOOK' OPT='NEW'"};
//NTupleSvc.Output={"FILE1 DATAFILE='DVNtuples.root' TYP='ROOT' OPT='NEW'"};

//--------------------------------------------------------------
// Set output level thresholds (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel                  = 3;
ToolSvc.OutputLevel                     = 3;
XmlParserSvc.OutputLevel                = 4;
ChargedProtoPAlg.OutputLevel            = 3;

// Modify Message Format to print algorithm name with 40 characters
MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";

//---------------------------------------------------------------
// Number of events to process, skip and printing frequency
//---------------------------------------------------------------
// Sample input file 
#include "$DAVINCIROOT/options/DaVinciTestData.opts"

ApplicationMgr.EvtMax    = 10000;
EventSelector.FirstEvent = 1;
EventSelector.PrintFreq  = 1;

// set this to 2 to get memory usage at each event
DaVinci.OutputLevel = 4 ;                                                                                                

//***************************************************************
// Interactive prompt: 
// 1) Add "use GaudiPython v*" to the requirements 
// 2) source setup.csh
// 3) Uncomment the following:
//ApplicationMgr.DLLs += { "GaudiPython" };
//ApplicationMgr.Runable = "PythonScriptingSvc";
// 4) Run DaVinci interactively as usual.
//***************************************************************

