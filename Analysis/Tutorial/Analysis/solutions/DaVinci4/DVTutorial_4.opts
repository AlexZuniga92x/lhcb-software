/** @file 
 * 
 *  Options for exercise 4
 *
 *  @author P. Koppenburg
 *  @date 2006-05-31
 */
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#include "$ANALYSISROOT/options/BolognaOptions.opts"
//
// Don't forget the DLL
ApplicationMgr.DLLs   += { "Analysis" };
//
// Let's make it a sequence
//
ApplicationMgr.TopAlg += { "GaudiSequencer/TutorialSeq" };
//
// J/psi->mumu selection
//
TutorialSeq.Members += { "TutorialAlgorithm/Jpsi2MuMu" };
Jpsi2MuMu.PhysDesktop.InputLocations = { "Phys/StdLooseMuons" } ;
Jpsi2MuMu.Particle = "J/psi(1S)" ;
Jpsi2MuMu.MassWindow = 50*MeV ;
Jpsi2MuMu.MaxChi2 = 100 ;
Jpsi2MuMu.OutputLevel = 3 ;
//
// Phi->KK selection
//
TutorialSeq.Members += { "TutorialAlgorithm/Phi2KK" };
Phi2KK.PhysDesktop.InputLocations = { "Phys/StdLooseKaons" } ;
Phi2KK.Particle =  "phi(1020)" ;
Phi2KK.MassWindow = 50*MeV ;
Phi2KK.MaxChi2 = 100 ;
Phi2KK.OutputLevel = 3 ;

//
// Bs : Use Standard algorithm
//
TutorialSeq.Members += { "MakeResonances/Bs2JpsiPhi" };
Bs2JpsiPhi.PhysDesktop.InputLocations = { "Phys/Phi2KK", "Phys/Jpsi2MuMu" } ;
Bs2JpsiPhi.DecayDescriptor = "B_s0 -> phi(1020) J/psi(1S)"; // mandatory
Bs2JpsiPhi.DaughterFilter.Selections = { " K+ : PVIPFilterCriterion"  }; // Refine Kaons
Bs2JpsiPhi.DaughterFilter.PVIPFilterCriterion.MinIPsignif = 1 ; // 1 sigma IP for kaons from Phi
Bs2JpsiPhi.Window =  100 * MeV; // MeV
Bs2JpsiPhi.MotherFilter.Selections = { "B_s0  : PVIPFilterCriterion,
                                                VtxFilterCriterion,
                                                FlightDistanceFilterCriterion"  };
Bs2JpsiPhi.MotherFilter.VtxFilterCriterion.MaxChi2 = 30 ;  // Require 30 maximal B vertex Chi2
Bs2JpsiPhi.MotherFilter.PVIPFilterCriterion.MaxIPsignif = 4 ; // Require 4 maximal B IP/IPE on best PV
Bs2JpsiPhi.MotherFilter.FlightDistanceFilterCriterion.MinFSPV = 5 ; // Require 5 minimal B flight distance significance
//Bs2JpsiPhi.MakePlots=true;
Bs2JpsiPhi.HistoProduce=true;
Bs2JpsiPhi.DaughterPlots.Variables={"M","P","Pt","IP"};
Bs2JpsiPhi.MotherPlots.Variables={"M", "P","Pt", "IP"};
Bs2JpsiPhi.DaughterPlotsPath={"Bin"};
Bs2JpsiPhi.MotherPlotsPath={"Bout"};

TutorialSeq.IgnoreFilterPassed = true ; // get all Phis

ApplicationMgr.HistogramPersistency = "ROOT";
HistogramPersistencySvc.OutputFile = "DVHistos1.root";

ApplicationMgr.EvtMax = 500 ;

/*
//
// Absurd cuts to be sure one gets something
//
Bs2JpsiPhi.DaughterFilter.PVIPFilterCriterion.MinIPsignif = 0 ; // 1 sigma IP for kaons from Phi
Bs2JpsiPhi.Window =  10000 * MeV; // MeV
Bs2JpsiPhi.MotherFilter.VtxFilterCriterion.MaxChi2 = 1000 ;  // Require 30 maximal B vertex Chi2
Bs2JpsiPhi.MotherFilter.PVIPFilterCriterion.MaxIPsignif = 10000 ; // Require 4 maximal B IP/IPE on best PV
Bs2JpsiPhi.MotherFilter.FlightDistanceFilterCriterion.MinFSPV = 0 ; // Require 5 minimal B flight distance significance

Bs2JpsiPhi.OutputLevel = 2 ;

TutorialSeq.IgnoreFilterPassed = false ; // get all Phis

*/
