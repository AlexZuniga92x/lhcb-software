/** @file 
 * 
 *  Example from the tutorial 
 *
 *  @author P. Koppenburg
 *  @date 2004-11-04
 */
#pragma print off
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#pragma print on
//
// Don't forget the DLL
ApplicationMgr.DLLs   += { "Analysis" };

// 2. Charged
// VERY IMPORTANT:
//   ChargedProtoPAlg and PrimVtxFinder are executed in
//   DaVinciReco and MUST not be executed again
#include "$DAVINCIROOT/options/DaVinciReco.opts"
//
// Let's make it a sequence
//
ApplicationMgr.TopAlg += { "GaudiSequencer/Tutorial" };
//
// Preload particles
//
Tutorial.Members += { "PreLoadParticles" };
PreLoadParticles.PhysDesktop.ParticleMakerType = "CombinedParticleMaker";
PreLoadParticles.PhysDesktop.CombinedParticleMaker.Particles = { "muon", "kaon" } ;
PreLoadParticles.PhysDesktop.CombinedParticleMaker.KaonSelection = { "det='RICH' k-pi='2.0' k-p='-2.0'" };
PreLoadParticles.PhysDesktop.CombinedParticleMaker.MuonSelection = { "det='MUON' mu-pi='-10.0'" }; 
PreLoadParticles.PhysDesktop.CombinedParticleMaker.ExclusiveSelection  = false ; 
//
// J/psi
//
Tutorial.Members += { "TutorialAlgorithm/Jpsi2MuMu" };
Jpsi2MuMu.PhysDesktop.InputLocations = { "Phys/PreLoadParticles" } ;
Jpsi2MuMu.ParticleFilter.CriteriaNames = { "PIDFilterCriterion/Muons" } ;
Jpsi2MuMu.ParticleFilter.Muons.ParticleNames = {"mu+", "mu-"} ;
Jpsi2MuMu.MassWindow = 50*MeV ;
Jpsi2MuMu.MaxChi2 = 100 ;
Jpsi2MuMu.OutputLevel = 3 ;
Jpsi2MuMu.HistoProduce = true ;
//
// Phi
//
Tutorial.Members += { "CombineParticles/Phi2KK" };
Phi2KK.PhysDesktop.InputLocations = { "Phys/PreLoadParticles" } ;
Phi2KK.DecayDescriptor = "phi(1020) -> K+ K-";
Phi2KK.Selections = {"K+ : PVIPFilterCriterion",
                      "K- : PVIPFilterCriterion",
		      "phi(1020) : BooleanFilterCriterion/PhiFilter"};
Phi2KK.PVIPFilterCriterion.MinIPsignif = 1 ;
Phi2KK.PhiFilter.AndList = { "MassFilterCriterion", "VtxFilterCriterion" };
Phi2KK.PhiFilter.MassFilterCriterion.Window = 20*MeV ;
Phi2KK.PhiFilter.VtxFilterCriterion.MaxChi2 = 100 ;
//
// Bs : Use Standard algorithm
//
Tutorial.Members += { "MakeResonances/Bs2JpsiPhi" };
Bs2JpsiPhi.PhysDesktop.InputLocations = { "Phys/Phi2KK", "Phys/Jpsi2MuMu" } ;
Bs2JpsiPhi.DecayDescriptor = "B_s0 -> phi(1020) J/psi(1S)"; // mandatory
Bs2JpsiPhi.DaughterFilter.Selections = { " K+ : PVIPFilterCriterion"  }; // Refine Kaons
Bs2JpsiPhi.DaughterFilter.PVIPFilterCriterion.MinIPsignif = 2 ;
Bs2JpsiPhi.BFilter.Window =  100 * MeV; // MeV
Bs2JpsiPhi.MotherFilter.Selections = { "B_s0  : PVIPFilterCriterion, 
                                                VtxFilterCriterion, 
						FlightDistanceFilterCriterion"  }; 
Bs2JpsiPhi.MotherFilter.VtxFilterCriterion.MaxChi2 = 30 ;  // Require 30 maximal B vertex Chi2
Bs2JpsiPhi.MotherFilter.PVIPFilterCriterion.MaxIPsignif = 4 ; // Require 4 maximal B IP/IPE on best PV
Bs2JpsiPhi.MotherFilter.FlightDistanceFilterCriterion.MinFSPV = 5 ; // Require 5 minimal B flight distance significance
//
// Print a correlations table
//
ApplicationMgr.TopAlg += { "SelResultCorrelations" };
SelResultCorrelations.Algorithms = { "Jpsi2MuMu", "Phi2KK", "Bs2JpsiPhi"  } ;
//
// Run the efficiency algorithm
// Needs to be run outside of the sequence!
//
ApplicationMgr.TopAlg += { "MCEffBuilder/EffMcTruth" };
EffMcTruth.MCDecay =  "[B_s0 -> (phi(1020) -> ^K+ ^K-) (J/psi(1S) -> ^mu+ ^mu- {, gamma})]cc";

ApplicationMgr.TopAlg += { "EffSelCheck/EffBs2JpsiPhi" };
EffBs2JpsiPhi.Histograms = true;
EffBs2JpsiPhi.MCDecay = "[B_s0 -> (phi(1020) -> ^K+ ^K-) (J/psi(1S) -> ^mu+ ^mu- {, gamma})]cc";
EffBs2JpsiPhi.SelDecay = "[B_s0 -> (phi(1020) -> K+ K-) (J/psi(1S) -> mu+ mu-)]cc";

// Print decay tree
Tutorial.Members += { "PrintTree/PrintFoundBs" };
PrintFoundBs.DebugTool.Informations = "Name E M P Px Py Pz Pt phi Vz" ;
PrintFoundBs.PhysDesktop.InputLocations = { "Phys/Bs2JpsiPhi" } ;
PrintFoundBs.OutputLevel = 3 ;

// Print MC decay tree
Tutorial.Members += { "PrintMCTree/PrintTrueBs" };
PrintTrueBs.DebugTool.Informations = "Name E M P Px Py Pz Pt phi Vz" ;
PrintTrueBs.ParticleNames = {  "B_s0", "B_s~0" } ;
PrintTrueBs.OutputLevel = 3 ;
PrintTrueBs.Depth = 2;  // down to the K and mu

ApplicationMgr.HistogramPersistency = "HBOOK";
HistogramPersistencySvc.OutputFile = "DVHistos2.hbook";

ApplicationMgr.EvtMax = 500 ;

//-- GAUDI data cards generated on Nov 4, 2004 5:34:03 PM
//-- For Event Type = 13144000 / Data type = DST 1
//--     Configuration = DC04 - v1
//--     DST 1 datasets produced by Brunel - v23r7
//--     From DIGI 1 datasets produced by ANY
//--     From SIM 1 datasets produced by ANY
//--     Database version = v22r2
//--     Cards content = physical
//--     
//-- Datasets replicated at CERN
//-- 200 dataset(s) - NbEvents = 100000
//-- 
EventSelector.Input   = {
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000017_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000018_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000016_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000020_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000024_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000019_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
};

