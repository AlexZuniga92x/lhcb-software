/** @file 
 * 
 *  Example from the tutorial 
 *
 *  @author P. Koppenburg
 *  @date 2004-11-04
 */
#pragma print off
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#pragma print on
//
// Run the trigger
//
#include "$DAVINCIROOT/options/L0.opts"
#include "$TRGSYSROOT/options/L1.opts"
//
//HLT
//
#include "$HLTSELECTIONSROOT/options/HLTSelections.opts"
HltDecision.MakeCorrelations = true ;
HltDecision.OutputLevel = 3 ;
#include "$HLTSELCHECKERROOT/options/Correlations.opts"
#include "$HLTSELCHECKERROOT/options/Plots.opts"
#include "$HLTSELCHECKERROOT/options/MeasureTimes.opts"
//----------------------------------------------------------
// uncomment to get Kaon-ID
// K-ID
// #include "$HLTSELECTIONSROOT/options/UseRich.opts"
// TrgParticleMaker.KaonDLLCut = 15 ; // default
//

//
// Don't forget the DLL
ApplicationMgr.DLLs   += { "Analysis" };

// 2. Charged
// VERY IMPORTANT:
//   ChargedProtoPAlg and PrimVtxFinder are executed in
//   DaVinciReco and MUST not be executed again
#include "$DAVINCIROOT/options/DaVinciReco.opts"
//
// Let's make it a sequence
//
ApplicationMgr.TopAlg += { "GaudiSequencer/TutorialSeq" };
TutorialSeq.MeasureTime = true ;
//
// Preload particles
//
TutorialSeq.Members += { "PreLoadParticles/PreLoadBs2JpsiPhi" };
PreLoadBs2JpsiPhi.PhysDesktop.ParticleMakerType = "CombinedParticleMaker";
PreLoadBs2JpsiPhi.PhysDesktop.CombinedParticleMaker.Particles = { "muon", "kaon" } ;
PreLoadBs2JpsiPhi.PhysDesktop.CombinedParticleMaker.KaonSelection = { "det='RICH' k-pi='2.0' k-p='-2.0'" };
PreLoadBs2JpsiPhi.PhysDesktop.CombinedParticleMaker.MuonSelection = { "det='MUON' mu-pi='-10.0'" }; 
PreLoadBs2JpsiPhi.PhysDesktop.CombinedParticleMaker.ExclusiveSelection  = false ; 
//
// J/psi
//
TutorialSeq.Members += { "TutorialAlgorithm/Jpsi2MuMu" };
Jpsi2MuMu.PhysDesktop.InputLocations = { "Phys/PreLoadBs2JpsiPhi" } ;
Jpsi2MuMu.ParticleFilter.CriteriaNames = { "PIDFilterCriterion/Muons" } ;
Jpsi2MuMu.ParticleFilter.Muons.ParticleNames = {"mu+", "mu-"} ;
Jpsi2MuMu.MassWindow = 50*MeV ;
Jpsi2MuMu.MaxChi2 = 100 ;
Jpsi2MuMu.OutputLevel = 3 ;
Jpsi2MuMu.HistoProduce = true ;
//
// Phi->KK selection
//
TutorialSeq.Members += { "TutorialAlgorithm/Phi2KK" };
Phi2KK.PhysDesktop.InputLocations = { "Phys/PreLoadBs2JpsiPhi" } ;
Phi2KK.ParticleFilter.CriteriaNames = { "PIDFilterCriterion/Kaons" } ;
Phi2KK.ParticleFilter.Kaons.ParticleNames = {"K+", "K-"} ;
Phi2KK.MassWindow = 50*MeV ;
Phi2KK.MaxChi2 = 100 ;
Phi2KK.OutputLevel = 3 ;
Phi2KK.Particle = "phi(1020)" ;
Phi2KK.HistoProduce = true ;
//
// Bs : Use Standard algorithm
//
TutorialSeq.Members += { "MakeResonances/Bs2JpsiPhi" };
Bs2JpsiPhi.PhysDesktop.InputLocations = { "Phys/Phi2KK", "Phys/Jpsi2MuMu" } ;
Bs2JpsiPhi.DecayDescriptor = "B_s0 -> phi(1020) J/psi(1S)"; // mandatory
Bs2JpsiPhi.DaughterFilter.Selections = { " K+ : PVIPFilterCriterion"  }; // Refine Kaons
Bs2JpsiPhi.DaughterFilter.PVIPFilterCriterion.MinIPsignif = 2 ;
Bs2JpsiPhi.Window =  100 * MeV; // MeV
Bs2JpsiPhi.MotherFilter.Selections = { "B_s0  : PVIPFilterCriterion, 
                                                VtxFilterCriterion, 
						FlightDistanceFilterCriterion"  }; 
Bs2JpsiPhi.MotherFilter.VtxFilterCriterion.MaxChi2 = 30 ;  // Require 30 maximal B vertex Chi2
Bs2JpsiPhi.MotherFilter.PVIPFilterCriterion.MaxIPsignif = 4 ; // Require 4 maximal B IP/IPE on best PV
Bs2JpsiPhi.MotherFilter.FlightDistanceFilterCriterion.MinFSPV = 5 ; // Require 5 minimal B flight distance significance

// Print a nice message when something was found
TutorialSeq.Members += { "PrintHeader/Found" };
Found.OutputLevel = 2 ;
//
// Print the found decay
//
TutorialSeq.Members += { "PrintTree/PrintFoundBs" };
PrintFoundBs.DebugTool.Information = "Name E M P Px Py Pz Pt phi Vz" ;
PrintFoundBs.PhysDesktop.InputLocations = { "Phys/Bs2JpsiPhi" } ;
PrintFoundBs.OutputLevel = 3 ;
//
// Print the MC decay tree for all B_s
//
TutorialSeq.Members += { "PrintMCTree/PrintTrueBs" };
PrintTrueBs.DebugTool.Information = "Name E M P Px Py Pz Pt phi Vz" ;
PrintTrueBs.ParticleNames = {  "B_s0", "B_s~0" } ;
PrintTrueBs.OutputLevel = 3 ;
PrintTrueBs.Depth = 2;  // down to the K and mu
//
// The tuple goes here
//
TutorialSeq.Members += { "TutorialTuple" };
TutorialTuple.PhysDesktop.InputLocations = { "Phys/Bs2JpsiPhi" } ;
TutorialTuple.OutputLevel = 3 ;

TutorialTuple.BackgroundCategory.Particle2MCWithChi2.Location = "Phys/Relations/Particle2MCWithChi2";
TutorialTuple.BackgroundCategory.Particle2MCWithChi2.AlgorithmName = "catParticle2MCChi2";
catParticle2MCChi2.InputData = {"/Event/Phys/PreLoadBs2JpsiPhi/Particles",
                                "/Event/Phys/Bs2JpsiPhi/Particles",
                                "/Event/Phys/Jpsi2MuMu/Particles",
                                "/Event/Phys/Phi2KK/Particles"};

//
// Tagging
//
#include "$FLAVOURTAGGINGROOT/options/BTaggingTool.opts"
//
// Calculate efficiencies
// Needs to be run as TopAlg after the sequence
//
ApplicationMgr.TopAlg += { "MCEffBuilder/EffMcTruth" };
EffMcTruth.MCDecay =  "[B_s0 -> (phi(1020) -> ^K+ ^K-) (J/psi(1S) -> ^mu+ ^mu- {, gamma})]cc";
ApplicationMgr.TopAlg += { "EffSelCheck/EffBs2JpsiPhi" };
EffBs2JpsiPhi.Histograms = true;
EffBs2JpsiPhi.MCDecay = "[B_s0 -> (phi(1020) -> ^K+ ^K-) (J/psi(1S) -> ^mu+ ^mu- {, gamma})]cc";
//
// Print a corellations table
// Also better run outside of the sequence
//
ApplicationMgr.TopAlg += { "SelResultCorrelations" };
SelResultCorrelations.Algorithms = { "Jpsi2MuMu", "Phi2KK", "Bs2JpsiPhi"  } ;


ApplicationMgr.HistogramPersistency = "ROOT";
HistogramPersistencySvc.OutputFile = "DVHistos.root";

// Ntuple
ApplicationMgr.ExtSvc += { "NTupleSvc" };
NTupleSvc.Output={"FILE1 DATAFILE='DVTuple.root' TYP='ROOT' OPT='NEW'"};

ApplicationMgr.EvtMax = 500 ;

//-- GAUDI data cards generated on Nov 4, 2004 5:34:03 PM
//-- For Event Type = 13144000 / Data type = DST 1
//--     Configuration = DC04 - v1
//--     DST 1 datasets produced by Brunel - v23r7
//--     From DIGI 1 datasets produced by ANY
//--     From SIM 1 datasets produced by ANY
//--     Database version = v22r2
//--     Cards content = physical
//--     
//-- Datasets replicated at CERN
//-- 200 dataset(s) - NbEvents = 100000
//-- 
EventSelector.Input   = {
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000017_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000018_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000016_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000020_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000024_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
"DATAFILE='PFN:castor:/castor/cern.ch/lhcb/DC04/00000543_00000019_5.dst' TYP='POOL_ROOTTREE' OPT='READ'",
};

