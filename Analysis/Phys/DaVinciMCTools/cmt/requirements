# $Id: requirements,v 1.45 2006-10-11 14:19:19 jpalac Exp $
# =============================================================================
# Created    : 19/05/2002
# Maintainer : P. Koppenburg, J. Palacios
# =============================================================================
#
# Documentation on the requirement file can be found at
# http://cern.ch/lhcb-comp/Support/html/new_structure.pdf
# =============================================================================

package           DaVinciMCTools
version           v8r0

# This template is an example for a standard Algorithm package
#
# Structure, i.e. directories to process. 
#============================================================================
branches          cmt doc src/Lib options DaVinciMCTools

# Exported header files
#============================================================================
include_dirs     $(DAVINCIMCTOOLSROOT)

# Used packages. 
#============================================================================
use  PhysEvent           v*  Event
use  GenEvent            v*  Event
use  DaVinciAssociators  v*  Phys
use  DaVinciKernel       v*  Phys
use  DaVinciMCKernel     v*  Phys
use  MCEvent             v*  Event
use  LinkerEvent         v*  Event
use  RecEvent            v*  Event
use  CaloAssociators     v*  Calo
use  CaloUtils           v*  Calo 

# Extra language for translating yacc to c++
# This is used to generate once the necessary files on Linux that are
# then committed (tool not available on win)
#============================================================================
#macro yaccppflags       " -l -d "
#macro yaccpp            "yacc $(yaccppflags)
#make_fragment yacc_to_icpp -suffix=icpp -header=yacc_to_icpp_header
#document yacc_to_icpp MCParser mcparser.ypp
#macro mcparser_ypp_yaccpp_prefix "MCDecayFinder::"

#macro lexppflags        " -L "
#macro lexpp             "lex ${lexppflags}
#make_fragment lex_to_icpp -suffix=icpp -header=lex_to_icpp_header
#document lex_to_icpp MCLexer mclexer.lpp
#macro mclexer_lpp_lexpp_prefix "MCDecayFinder::"

# Component library building rule
#============================================================================
library          DaVinciMCTools       ../src/*.cpp

# define component library link options
#============================================================================
apply_pattern component_library library=DaVinciMCTools

# =============================================================================
# The END 
# =============================================================================
