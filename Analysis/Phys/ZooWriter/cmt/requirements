# Created    : 14-02-2008
# Maintainer : Georg Krocker krocker@physi.uni-heidelberg.de
#              No idea if file is correct for builds on WIN32

package      Zoo
version      v11r0


branches     cmt doc src options

# To get environment set correctly
use      DaVinci  v*  Phys
# For LoKi
use      LoKiAlgo v*  Phys

use      ROOT     v*  LCG_Interfaces -no_auto_imports

# ZooHitCollector stuff
use TrackEvent v* Event
use TrackInterfaces v* Tr
use TrackKernel v* Tr
use PatKernel v* Tf
use TfKernel v* Tf

include_path none

# libZoo is made from all cpp files
library      Zoo  *.cpp
# libZooROOT is made from Zoo.cpp ZooPacked.cpp ZooDict.cpp - this is what ROOT needs
library      ZooROOT Zoo.cpp ZooPacked.cpp ZooPackedState.cpp \
               ZooPackedVertex.cpp ZooPackedParticle.cpp ZooPackedStates.cpp \
               ZooOccupancy.cpp ZooLHCbID.cpp ZooTriggerDecisions.cpp \
               ZooKeyValueBlock.cpp ZooStringToUIDTable.cpp \
               ZooStringValueBlock.cpp ZooObjectManager.cpp ZooDict.cpp

# libZoo is a component library (for use in Gaudi)
apply_pattern component_library library=Zoo

private
# define how to make ZooDict.cpp
# NOTE: rootcint is buggy when dealing with partial template specialization,
#       so patch its output with awk to yield valid C++ code
action ZooDict.cpp "cd ../src; rootcint -f ZooDict.cpp -c -p Zoo.h ZooPacked.h ZooPackedState.h ZooPackedVertex.h ZooPackedParticle.h ZooPackedStates.h ZooObjectManager.h ZooOccupancy.cpp ZooLHCbID.h ZooTriggerDecisions.h ZooKeyValueBlock.h ZooStringToUIDTable.h ZooStringValueBlock.h ZooLinkDef.h; mv ZooDict.cpp ZooDict.cpp.tmp; awk '/.*<.*>::fgIsA = 0/ { if (!($$0 ~ /^template *<>/)) $$0 = "'"'"template <> "'"'" $$0; } // { print; }' < ZooDict.cpp.tmp > ZooDict.cpp; rm ZooDict.cpp.tmp"
# building libZoo requires building libZooROOT, and both require the ROOT
# dictionaries
macro Zoo_dependencies ZooROOT ZooDict.cpp
macro ZooROOT_dependencies ZooDict.cpp
# define what goes in ZooDict.cpp
macro ZooDict.cpp_dependencies Zoo.cpp Zoo.h ZooPacked.cpp ZooPacked.h \
          ZooPackedState.h ZooPackedVertex.h ZooPackedParticle.h \
          ZooPackedState.cpp ZooPackedVertex.cpp ZooPackedParticle.cpp \
          ZooPackedStates.cpp ZooPackedStates.h ZooObjectManager.h \
          ZooObjectManager.cpp ZooOccupancy.h ZooOccupancy.cpp \
          ZooLHCbID.h ZooLHCbID.cpp ZooKeyValueBlock.h \
          ZooKeyValueBlock.cpp ZooStringToUIDTable.h ZooStringToUIDTable.cpp \
          ZooTriggerDecisions.h ZooTriggerDecisions.cpp \
          ZooStringValueBlock.h ZooStringValueBlock.cpp ZooLinkDef.h

# Pass DaVinci Version to preprocessor. This may cause trouble in case the user hast a crap path because we are extracting the version from the DaVinci_v*r*p* string from $DAVINCIROOT
macro_append Zoo_cppflags "-DDV_VER=$(shell echo $(DAVINCIROOT)| awk 'BEGIN{RS="'"'"/"'"'"} /DaVinci_v*r*/ {if (index($$0, "'"'"p"'"'")) {ver=substr($$0,0, index($$0,"'"'"p"'"'")-1)}else{ver=$$0}}; END{print ver}'| sed "'"'"s/[^0-9]//g"'"'" )"
# Support ROOT matrixes IO (!!! most probably not work for Win32!!!)
macro_append Zoo_use_linkopts "-Wl,--no-as-needed -lSmatrix -Wl,--as-needed" \
       WIN32     "libSmatrix.lib"
# libZooROOT must include all ROOT libs as well
macro_append ZooROOT_use_linkopts "-Wl,--no-as-needed `root-config --libs` -Wl,--as-needed" \
       WIN32     "libSmatrix.lib libTree.lib"
end_private
