 MACRO book ncat=[1] 
   DO i = 0 , [ncat] 
     hid=$EVAL(10000+[i])
     IF $HEXIST([hid]) THEN
       H/oper/RESET [hid]
     ELSE
       1D [hid] ' PI0 MASS ' 100 0.020 0.220 
     ENDIF
   ENDDO
 RETURN 
 
 MACRO fill 
   
   ncat=[1]
   
   exec book [ncat] 
   
   n/loop 1 calib.f
   
   IF $VEXIST(EMASS) THEN 
   ELSE
     ve/cr EMASS($eval([ncat]))
   ENDIF 
   IF $VEXIST(AMASS) THEN 
   ELSE
     ve/cr AMASS($eval([ncat]))
   ENDIF 
   If $VEXIST(NPI0) THEN
   ELSE
     ve/cr NPI0($eval([ncat]))
   ENDIF
   
   DO i = 1 , [1]
     hid=$eval(10000+[i])
     exec pi0fit [hid]
     ve/in emass($eval([i])) $eval(pare(2))
     ve/in amass($eval([i])) $eval(par(2))     
     ve/in npi0($eval([i]))  $eval(par(1))     
   ENDDO
   
   exec pi0fit 10000 
   
 RETURN
 
 MACRO pi0fit 
   
   hid = [1]
   
   message processing histogram id=[hid]
   
 IF $VEXIST(par)  THEN
 ELSE
   ve/cr PAR(10)
   ve/in par 100 0.135 0.0094 100 0 0 0 0 0 0
 ENDIF
 IF $VEXIST(PARE) THEN 
 ELSE
   ve/cr PARE(10)
 ENDIF
 IF $VEXIST(PSTEP) THEN
 ELSE
   ve/cr PSTEP(10)
   ve/in PSTEP(2:3) 0.0002 0.00005
 ENDIF 
 IF $VEXIST(PMINV) THEN
 ELSE
   ve/cr PMINV(10)
   ve/in PMINV(2:3) 0.120 0.005
 ENDIF 
 IF $VEXIST(PMAXV) THEN
 ELSE
   ve/cr PMAXV(10)
   ve/in PMAXV(2:3) 0.150 0.015  
 ENDIF 
 
 ascale = $eval($HINFO([hid],'SUM')/1042550.0)
 ve/in par(1) $eval(116594.0*[ascale])
 ve/in par(4) $eval(11764.10*[ascale])
 
 ierr=0
 
start1:
 
Application HMINUIT exit
name 1 signal
name 2 mass
name 3 sigma 
name 4 background 
 set par 6 0 
 fix 6 
 set par 7 0 
 fix 7
 migrad 
 rel 6 
 rel 7 
 migrad 
exit
 IF $HINFO([HID],'MIN')<4 THEN 
   hi/fit [hid] fun1g.f lmbq0 7 par pstep pminv pmaxv pare 
 ELSE
   hi/fit [hid] fun1g.f  mbq0 7 par pstep pminv pmaxv pare 
 ENDIF
 
 
 IF PAR(4)<0.1 THEN
   ierr=$eval([ierr]+1)
   message WARNING4:  par(1/4): $eval(par(1)) $eval(par4) make a loop [ierr]
   ve/in par(4:7) 100 0 0 0 
   ve/in par(1)   100 
   if [ierr]<6 GO TO start1
 ENDIF 
 
 IF PAR(1)<0.1 THEN
   ierr=$eval([ierr]+1)
   message WARNING1:  par(1/4): $eval(par(1)) $eval(par4) make a loop [ierr]
   ve/in par(4:7) 100 0 0 0 
   ve/in par(1)   100 
   if [ierr]<6 GO TO start1
 ENDIF 
 
start2:
 
Application HMINUIT exit
name 1 signal
name 2 mass
name 3 sigma 
name 4 background 
 fix 2 3  
 migrag
 rel 2 3 
 migrad 
exit 
 IF $HINFO([HID],'MIN')<4 THEN 
   hi/fit [hid] fun1g.f lmq0 7 par ! ! ! pare 
 ELSE
   hi/fit [hid] fun1g.f  mq0 7 par ! ! ! pare 
 ENDIF
  
* for next usage 
 sigma pstep = 0.10*pare
 
 bbb=$eval(2.0*par(3)*100.0/0.2)
 bgr=$eval(2.0*par(4)*[bbb])
 
 message _
   $FORMAT([hid],I5) _ 
   $FORMAT($eval(par(1)),I7)  _  
   $FORMAT($eval(par(1)/[bgr]),F5.2) _  
   $FORMAT($eval(par(2)*1000),F6.2)  _  
   $FORMAT($eval(par(3)*1000),F5.2) _
   $FORMAT($eval(pare(2)/par(3)),F7.3) _
   $FORMAT($eval(pare(2)/par(2)),F7.3) 
 
 
 RETURN
 
 MACRO iterate
   
   ncat=[1]
   niter=[2]
   
   if      $VDIM(lam0,1)<$VDIM(alam,1) THEN
     message Invalid vector length
     STOPM
   ELSEIF  $VDIM(lam0,1)>$VDIM(alam,1) THEN
     message Invalid vector length
     STOPM
   ENDIF 
   
   sigma alam=1.0+0.0*alam 
   
   DO i = 0 , [niter]
     hid=$eval(100+[i])
     1d [hid] ' lam0*alam    '  500 0.75 1.25
     hid2=$eval(200+[i])
     1d [hid2] ' amass/0.135 ' 1000 0.95 1.05
   ENDDO
   
   ve/cr vpar(3)
   ve/in vpar  100 1.0 0.05 
   ve/cr vpe(3)
   
   hfill $sigma(lam0*alam) 100 
   
   ve/in vpar $HINFO(100,'MAX') $HINFO(100,'MEAN') $HINFO(100,'RMS')
   hi/fit 100 g l0 3 vpar ! ! ! vpe
   
   ve/cr res($eval([niter]+1))
   ve/cr rese($eval([niter]+1))
   
   ve/in res(1)  $eval(vpar(3))
   ve/in rese(1) $eval(vpe(3))
   
   DO iter = 1 , [niter] 
     
     message ******** Iteration [iter] from [niter] ***********************
     
     exec book [ncat]
     exec fill [ncat]
     
     h/copy 10000 $eval(20000+[iter])
     
* some convergency 
     sigma alam=alam*0.135/amass 
* fast?
* sigma alam=alam*0.135*(1.0-0.75*(amass-0.135))/amass 
     
     
     hid=$eval(100+[iter])
     hfill $sigma(lam0*alam) [hid] 
     ve/in vpar $eval($HINFO([hid],'MAX')) $eval($HINFO([hid],'MEAN')) $eval($HINFO([hid],'RMS'))     
     
     hi/fit [hid] g l0 3 vpar ! ! ! vpe 
     
     ve/in res($eval([iter]+1))  $eval(vpar(3))
     ve/in rese($eval([iter]+1)) $eval(vpe(3))
     
     hid2=$eval(200+[iter])
     hfill $sigma(amass/0.135) [hid2]
     ve/in vpar $eval($HINFO([hid2],'MAX')) $eval($HINFO([hid2],'MEAN')) $eval($HINFO([hid2],'RMS'))
     hi/fit [hid2] g l0 3 vpar ! ! ! vpe  
     
     ve/write alam lambda_[iter].dat 
     
     
     sigma npi=vsum(npi0)
     ave=$eval(npi(1)/([ncat]))
     sigma rms=sqrt((vsum(npi0*npi0)/$eval([ncat])-$eval([ave])**2))
     
     message ' pi0s: ' [ave] $eval(rms(1)) $sigma(vmin(npi0)) $sigma(vmax(npi0))
     
   ENDDO
   
   1d    30000 ' result: calibration ' $eval(1+[niter]) 0 [niter] 
   h/p/c 30000 res 
   h/p/e 30000 rese    
   
   sigma npi=vsum(npi0)
   ave=$eval(npi(1)/([ncat]))
   sigma rms=sqrt((vsum(npi0*npi0)/$eval([ncat])-$eval([ave])**2))
   
   message ' Final: ' [ave] $eval(rms(1)) $eval(res([niter])) $eval(rese([niter]))
     
 RETURN 
 
 MACRO opts
   
   message ' writing Gaudi "opts" file ' 
   
   fmessage 'EcalMis1.Constants ={ '  new.opts 
   fmessage ' '//$FORMAT($eval(ALAM(1)),F9.6)//' //'//$FORMAT($eval(1),I5) new.opts 
   DO i = 2, $VDIM(alam,1)
      fmessage ','//$FORMAT($eval(ALAM([i])),F9.6)//' //'//$FORMAT($eval([i]),I5) new.opts 
   ENDDO 
   fmessage '} ; '                      new.opts 
   
 RETURN 
 
 
 MACRO rho
   
   nr=100
   
   ve/cr nrho(100)
   ve/in nrho 100*0.0 
   
   DO i = 1 , [nr]
     hid=$EVAL(50000+[i])
     IF $HEXIST([hid]) THEN
       H/oper/RESET [hid]
     ELSE
       1D [hid] ' PI0 MASS versus R ' 100 0.020 0.220 
     ENDIF
   ENDDO
   
   n/loop 1 calib.f
   
   DO i = 8, [nr]
     hid=$EVAL(50000+[i])
     exec pi0fit [hid]
     ve/in nrho([i]) $eval(par(1)/4.0/6.28/[i]/4.0) 
   ENDDO
   
 RETURN  
