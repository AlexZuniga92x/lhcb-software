/** @file 
 * 
 *  Example file to run a DaVinci job.
 *  This file defines, sequences and configures the algorithms 
 *  to be executed
 *
 *  @author G.Corti
 *  @date 2004-01-26
 */

//--------------------------------------------------------------
// Standard Gaudi configuration
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
//--- Example of Particle with Assigned pID only for HLT studies
// #include "$PARTICLEMAKERROOT/options/PreLoadNoPIDParticles.opts"
//--- Uncomment for running HLT
//#include "$HLTSYSROOT/options/L0.opts"
//#include "$HLTSYSROOT/options/Hlt.opts"
//--------------------------------------------------------------
// >>>>>>>>>>>> To be customized for a specific job <<<<<<<<<<<<
//----------------------------------------------------------------
// Other additional algorithms to be executed, from public 
// or private code and their options can be listed below or
// included. 
// REMEMBER: 
//   Options for algorithms and tools can be added here to overwrite
//   any of the default options
// NOTE:
//   The various selections algorithms have each DV*.opts
//   file(s) in their package that can be given as full options of the
//   DaVinci executable INSTEAD of DaVinci.opts
//   ex.: DaVinci.exe $B2HHROOT/options/DVTDRselBd2PiPi.opts
//        DaVinci.exe $BS2PHIETACROOT/options/DVPreselBs2Phi2KK_Etac.opts
//----------------------------------------------------------------
//--------------------------------------------------------------
// CRJ : turn on monitoring of standard particles
//#include "$COMMONPARTICLESROOT/options/EnableStandardParticleMonitors.opts"
// Test the stripping
//#include "$STRIPPINGROOT/options/DVPresel.opts"
//--------------------------------------------------------------
#include "$B2DSXROOT/options/DoPreselBs2DsH.opts"

PreselBs2DsH.DecayDescriptors  = { "[B_s0 -> D_s- pi+]cc"} ;

PreselBs2DsH.OfflineVertexFitter.applyDauMassConstraint = true ;


ApplicationMgr.DLLs += { "DaVinciAssociators" };
ApplicationMgr.DLLs += { "VertexFitCheck" };
ApplicationMgr.TopAlg += { "VtxChecker" };

VtxChecker.ParticlePath = "/Event/Phys/PreselBs2DsH/Particles";
VtxChecker.pidToCheck = 531 ;
VtxChecker.CompositeParticle2MCLinks.skipResonances=true;

VtxChecker.PhysDesktop.InputLocations = {"/Event/Phys/PreselBs2DsH"};
VtxChecker.OutputLevel = 4;

ApplicationMgr.TopAlg += { "ProperTimeChecker" };

ProperTimeChecker.ParticlePath = "/Event/Phys/PreselBs2DsH/Particles";
ProperTimeChecker.pidToCheck = 531 ;

ProperTimeChecker.PhysDesktop.InputLocations = {"/Event/Phys/PreselBs2DsH"};
ProperTimeChecker.OutputLevel = 4;




//--------------------------------------------------------------
// Histogram persistency (defined in DaVinciCommon.opts)
// Hbook or Root are available, uncomment the one you want to use
// Keep in mind that the hbook file referred to here contains 
// all the C++ generated histograms, not those filled in Fortran
// ApplicationMgr.HistogramPersistency = "HBOOK";
// HistogramPersistencySvc.OutputFile = "DVHistos.hbook";
// or if you prefer ROOT:

//ApplicationMgr.HistogramPersistency = "ROOT";
//HistogramPersistencySvc.OutputFile = "bs2dspicheck.root";

ApplicationMgr.DLLs += { "HbookCnv" };
ApplicationMgr.HistogramPersistency = "HBOOK";
HistogramPersistencySvc.OutputFile = "hbs2dspicehck.hbook";


//--------------------------------------------------------------
// Ntuples available by default. Comment to switch off
ApplicationMgr.ExtSvc += { "NTupleSvc" };
NTupleSvc.Output={"FILE1 DATAFILE='nbs2dspicheck.hbook' TYP='HBOOK' OPT='NEW'"};
//NTupleSvc.Output={"FILE1 DATAFILE='bs2dspicheck.root' TYP='ROOT' OPT='NEW'"};

//--------------------------------------------------------------
// Set output level thresholds (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel                  = 3;
ToolSvc.OutputLevel                     = 3;
XmlParserSvc.OutputLevel                = 4;
ChargedProtoPAlg.OutputLevel            = 3;

// Modify Message Format to print algorithm name with 40 characters
MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";

//---------------------------------------------------------------
// Number of events to process, skip and printing frequency
//---------------------------------------------------------------
// Sample input file 
//#include "$DAVINCIROOT/options/DaVinciTestData.opts"
#include "$DAVINCIROOT/options/data/dspi_phys_br30r14_lumi2_pfn.opts"

ApplicationMgr.EvtMax    = 50000;
EventSelector.FirstEvent = 1;
EventSelector.PrintFreq  = 100;

// set this to 2 to get memory usage at each event
DaVinci.OutputLevel = 3 ;                                                 

//---------------------------------------------------------------
// StagerSvc - At CERN Only //
//---------------------------------------------------------------
// ApplicationMgr.ExtSvc += { "StagerSvc" };
// ApplicationMgr.Dlls += { "GaudiSiteSvc" } ; // library containing the StagerSvc
// StagerSvc.BlockSize = 20 ; // n: the number of files in each block
// StagerSvc.InitialStage = 3 ; // m: the number of blocks staged at the beginning of the job

