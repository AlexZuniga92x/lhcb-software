#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC =
CFLAGS = -Wall
RESINC =
LIBDIR =
LIB =
LDFLAGS =

INC_RELEASE = $(INC) -Iinclude
CFLAGS_RELEASE = $(CFLAGS) -O2 -std=c++11 `root-config --cflags --glibs`
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)-lMinuit
LDFLAGS_RELEASE = $(LDFLAGS) -s `root-config --cflags --glibs`
OBJDIR_RELEASE = obj/Release
DEP_RELEASE =
OUT_RELEASE = bin/Release/FF2

OBJ_RELEASE = $(OBJDIR_RELEASE)/src/main.o $(OBJDIR_RELEASE)/src/FFPullHist.o $(OBJDIR_RELEASE)/src/FFPdfs.o $(OBJDIR_RELEASE)/src/FFLoad.o $(OBJDIR_RELEASE)/src/FFFitter.o $(OBJDIR_RELEASE)/src/FFConfig.o $(OBJDIR_RELEASE)/src/FFBlind.o $(OBJDIR_RELEASE)/src/FFBinning.o $(OBJDIR_RELEASE)/src/FFAux.o

all: release

clean: clean_release

before_release:
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src

after_release:

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/src/main.o: src/main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/main.cpp -o $(OBJDIR_RELEASE)/src/main.o

$(OBJDIR_RELEASE)/src/FFPullHist.o: src/FFPullHist.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFPullHist.cpp -o $(OBJDIR_RELEASE)/src/FFPullHist.o

$(OBJDIR_RELEASE)/src/FFPdfs.o: src/FFPdfs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFPdfs.cpp -o $(OBJDIR_RELEASE)/src/FFPdfs.o

$(OBJDIR_RELEASE)/src/FFLoad.o: src/FFLoad.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFLoad.cpp -o $(OBJDIR_RELEASE)/src/FFLoad.o

$(OBJDIR_RELEASE)/src/FFFitter.o: src/FFFitter.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFFitter.cpp -o $(OBJDIR_RELEASE)/src/FFFitter.o

$(OBJDIR_RELEASE)/src/FFConfig.o: src/FFConfig.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFConfig.cpp -o $(OBJDIR_RELEASE)/src/FFConfig.o

$(OBJDIR_RELEASE)/src/FFBlind.o: src/FFBlind.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFBlind.cpp -o $(OBJDIR_RELEASE)/src/FFBlind.o

$(OBJDIR_RELEASE)/src/FFBinning.o: src/FFBinning.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFBinning.cpp -o $(OBJDIR_RELEASE)/src/FFBinning.o

$(OBJDIR_RELEASE)/src/FFAux.o: src/FFAux.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/FFAux.cpp -o $(OBJDIR_RELEASE)/src/FFAux.o

clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/src

.PHONY: before_release after_release clean_release

run:
	./$(OUT_RELEASE)
