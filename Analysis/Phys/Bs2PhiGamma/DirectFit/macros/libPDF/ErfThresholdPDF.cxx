/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "ErfThresholdPDF.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(ErfThresholdPDF) 

 ErfThresholdPDF::ErfThresholdPDF(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _tL,
                        RooAbsReal& _tR,
                        RooAbsReal& _sigma) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   tL("tL","tL",this,_tL),
   tR("tR","tR",this,_tR),
   sigma("sigma","sigma",this,_sigma)
 { 
 } 


 ErfThresholdPDF::ErfThresholdPDF(const ErfThresholdPDF& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   tL("tL",this,other.tL),
   tR("tR",this,other.tR),
   sigma("sigma",this,other.sigma)
 { 
 } 



 Double_t ErfThresholdPDF::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   Double_t tl   = (tL-x)/TMath::Sqrt(2.)/sigma;
   Double_t tr   = (x-tR)/TMath::Sqrt(2.)/sigma;
   if( tl < -5 && tr < -5 )return 1.;
   if( tl > 5  || tr >  5 )return 1.e-5;
   if( tl > -5 && tr <  -5 )return TMath::Erfc(tl)/2.;
   if( tr > -5 && tl<   -5 )return TMath::Erfc(tr)/2.;
   return TMath::Erfc(tl)/2. * TMath::Erfc(tr)/2.;
 } 



