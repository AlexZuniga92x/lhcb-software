// $Id: DV_LoKi_Demo1.opts,v 1.2 2004-01-21 10:01:55 ibelyaev Exp $
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $
// ============================================================================
// $Log: not supported by cvs2svn $
// Revision 1.1.1.1  2003/07/24 16:43:50  ibelyaev
//  new package with LoKi examples 
//
// ============================================================================
// include files 
#pragma print off 
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#include "$DAVINCIROOT/options/DaVinciv254r1.opts"
// ============================================================================

// ============================================================================
/** @file 
 *  Options file to drive the simpelst LoKi example LoKi_Demo1 algorithm
 *  @see LoKi_Demo1 
 *  @author Vanya BELYAEV  Ivan.Belyaev@itep.ru
 *  @date 2003-05-12
 */
// ============================================================================

#pragma print on 

// load nesessary libraries 
ApplicationMgr.DLLs   += { "LoKiExample" , "LoKi" } ;

// top level algorithms 
ApplicationMgr.TopAlg  =  {
  "ChargedProtoPAlg"     ,   // create the charged protoparticles 
  "LoKiPreLoad/Charged"  ,   // create and put into TES charged particles
  "LoKi_Demo1/Demo1"         // execute the algorithm itsels  
};

// configuration of algorithm 'Charged' 
Charged.PhysDesktop.ParticleMakerType =  "ChargedParticleMaker";
Charged.PhysDesktop.ChargedParticleMaker.ParticleNames = 
  { "pi+" , "pi-" , "K+" , "K-" , "p+" , "p~-" , "e+" , "e-" , "mu+" , "mu-" };
Charged.PhysDesktop.ChargedParticleMaker.ConfLevelCuts = 
  { 0.01  , 0.01  , 0.01 , 0.01 , 0.01 , 0.01  , 0.01 , 0.01 , 0.01  , 0.01  };
Charged.PhysDesktop.OutputLocation      = "/Event/Phys/Charged";

// configuration of algorithm "Demo1" 
Demo1.PhysDesktop.InputLocations = { "/Event/Phys/Charged" } ;

#pragma print off 

// The number of events to process 
ApplicationMgr.EvtMax    = 100 ;

// input data set  Bs -> phi phi 
#include "$LHCBHOME/project/web/cards/615300.opts"

// control for printout 
MessageSvc.OutputLevel       =  3 ;  // "INFO" printout level
EventSelector.PrintFreq      = 10 ;  // make a print only each 10th event 
RootEvtCnvSvc.OutputLevel    =  4 ;
ChargedProtoPAlg.OutputLevel =  4 ;

// ============================================================================
// The END 
// ============================================================================
