// $Id: DV_LoKi_VeloClusterMC.opts,v 1.4 2006-06-07 13:52:22 ibelyaev Exp $
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $ ; version $Revision: 1.4 $ 
// ============================================================================
// $Log: not supported by cvs2svn $
// ============================================================================
// include files 
// ============================================================================
#pragma   print off 
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#include "$STDOPTS/RootHist.opts"
#include "$STDOPTS/Hbook.opts"
#pragma   print on 
// ============================================================================

// ============================================================================
/** @file 
 *  Options file to drive the simple LoKi example LoKi_VeloClusterMC algorithm
 *  @see LoKi_VeloClusterMC
 *  @author Vanya BELYAEV  Ivan.Belyaev@itep.ru
 *  @date 2003-05-12
 */
// ============================================================================


// load nesessary libraries 
ApplicationMgr.DLLs   += { "VeloDAQ"     , "VeloAssociators" } ;
ApplicationMgr.DLLs   += { "LoKiExample" , "LoKi"            } ;

DataOnDemandSvc.Nodes += { 
  "DATA='/Event'                TYPE='DataObject'",
  "DATA='/Event/Phys'           TYPE='DataObject'",
  "DATA='/Event/Rec'            TYPE='DataObject'",
  "DATA='/Event/Rec/Relations'  TYPE='DataObject'",
  "DATA='/Event/Raw'            TYPE='DataObject'",
  "DATA='/Event/Raw/Velo'       TYPE='DataObject'"
};

DataOnDemandSvc.Algorithms += 
  { 
    "DATA='/Event/Raw/Velo/Clusters' TYPE='DecodeVeloRawBuffer' " ,
    "DATA='/Event/Rec/Relations/VeloClusters2MCParticles' TYPE='VeloCluster2MCParticleAlg/VeloCluster2MCParticle'" 
  }; 

// top level algorithms 
ApplicationMgr.TopAlg  = { "LoKi_VeloClusterMC/MCVelo"  } ; // execute the algorithm itsels  

// configuration of algorithm 'MCVelo' 
MCVelo.NTupleLUN                        = "TUPLES"  ; // logical file unit 
MCVelo.PP2MC = {} ;

// N-Tuples
ApplicationMgr.ExtSvc += { "NTupleSvc" } ;
NTupleSvc.Output      += 
  {"TUPLES DATAFILE='MCVelo.hbook' TYP='HBOOK' OPT='NEW'" } ;

HistogramPersistencySvc.OutputFile        = "MCVeloHist.hbook";
HistogramPersistency.HistogramPersistency = "HBOOK" ;
HbookHistSvc.PrintHistos = true ;

// control for printout 
MessageSvc.OutputLevel       =  3 ;  // "WARNING" printout level
EventSelector.PrintFreq      = 50 ;  // make a print only each 10th event 
ChargedProtoPAlg.OutputLevel =  4 ;
RootEvtCnvSvc.OutputLevel    =  4 ;

// input data 
#pragma   print off 
#include "$LOKIEXAMPLEOPTS/Bs_Jpsiphimm_DIGI_DC04.opts"
#pragma   print on 

PoolDbCacheSvc.Catalog = 
  { 
    "xmlcatalog_file:$LOKIEXAMPLEOPTS/LoKiExampleMutableCatalog.xml"  ,
    "xmlcatalog_file:$LOKIEXAMPLEOPTS/Bs_Jpsiphimm_DIGI_DC04.xml"          
  };

// The number of events to process 
ApplicationMgr.EvtMax  = 100 ;

// ============================================================================
// The END 
// ============================================================================
 
