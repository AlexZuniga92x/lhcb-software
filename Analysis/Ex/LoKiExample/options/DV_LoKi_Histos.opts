// $Id: DV_LoKi_Histos.opts,v 1.4 2004-08-05 09:54:12 ibelyaev Exp $
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $
// ============================================================================
// $Log: not supported by cvs2svn $
// Revision 1.3  2004/03/11 21:41:04  ibelyaev
//  few algorithms updated fro LoKi v2r0
//
// ============================================================================
// include 
// ============================================================================
#pragma   print off 
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#include "$DAVINCIROOT/options/DaVinciReco.opts"
#include "$STDOPTS/RootHist.opts"
#include "$STDOPTS/Hbook.opts"
#pragma   print on 
// ============================================================================

// ============================================================================
/** @file 
 *  Options file to drive the simpelst LoKi example LoKi_Histos algorithm
 *  @see LoKi_Histos 
 *  @author Vanya BELYAEV  Ivan.Belyaev@itep.ru
 *  @date 2003-05-12
 */
// ============================================================================

// load nesessary libraries 
ApplicationMgr.DLLs    += { "LoKiExample" , "LoKi" } ;

// top level algorithms 
ApplicationMgr.TopAlg   += {
  "LoKiPreLoad/Charged"  ,   // create and put into TES charged particles
  "LoKi_Histos/Histos"       // execute the algorithm itsels  
};

// configuration of algorithm 'Charged' 
Charged.PhysDesktop.ParticleMakerType =  "CombinedParticleMaker" ;
Charged.PhysDesktop.CombinedParticleMaker.Particles   = 
  { "kaon" , "muon" , "pion" } ;

// configuration of algorithm 'Histos' 
Histos.PhysDesktop.InputLocations       = { "/Event/Phys/Charged" };

// the output file for histograms 
HistogramPersistencySvc.OutputFile = "Histos.hbook";



// control for printout 
MessageSvc.OutputLevel       =  3 ;  // "INFO" printout level
EventSelector.PrintFreq      = 10 ;  // make a print only each 10th event 
RootEvtCnvSvc.OutputLevel    =  4 ;
ChargedProtoPAlg.OutputLevel =  4 ;

ChronoStatSvc.NumberOfSkippedEventsForMemStat = -1 ;

#pragma   print off 
// input data set: DC04 Bs -> phi phi 
#include "$LOKIEXAMPLEOPTS/Bs_phiphi_DC04.opts"
#pragma   print on 

PoolDbCacheSvc.Catalog = 
  { 
    "xmlcatalog_file:$LOKIEXAMPLEOPTS/LoKiExampleMutableCatalog.xml"  ,
    "xmlcatalog_file:$LOKIEXAMPLEOPTS/Bs_phiphi_DC04.xml"          
  };

// The number of events to process 
ApplicationMgr.EvtMax  = 5000 ;

// ============================================================================
// The END 
// ============================================================================
