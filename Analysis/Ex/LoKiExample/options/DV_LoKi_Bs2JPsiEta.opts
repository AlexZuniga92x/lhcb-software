// $Id: DV_LoKi_Bs2JPsiEta.opts,v 1.2 2004-01-21 10:01:55 ibelyaev Exp $
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $
// ============================================================================
// $Log: not supported by cvs2svn $
// Revision 1.1.1.1  2003/07/24 16:43:50  ibelyaev
//  new package with LoKi examples 
//
// Revision 1.1  2003/05/12 13:21:33  ibelyaev
//  add the options files for all examples
// 
// ============================================================================
// include files 
#include "$DAVINCIROOT/options/DaVinciCommon.opts"
#include "$DAVINCIROOT/options/DaVinciv254r1.opts"
// Histograms
#include "$STDOPTS/Hbook.opts"
// ============================================================================

// ============================================================================
/** @file 
 *  Options file to drive the simple LoKi example LoKi_Bs2JPsiEta algorithm
 *  @see LoKi_Bs2JPsiEta
 *  @author Vanya  BELYAEV  Ivan.Belyaev@itep.ru
 *  @date 2003-06-29
 */
// ============================================================================

// load nesessary libraries 
ApplicationMgr.DLLs   += { "LoKiExample" , "LoKi" , "DaVinciUser"} ;

// top level algorithms 
ApplicationMgr.TopAlg +=  {
  "ChargedProtoPAlg"          , // create charged protoparticles 
  "NeutralPPsFromCPsAlg"      , // create neutral protoparticles 
  "LoKiPreLoad/Neutrals"      , // create and put into TES neutral particles  
  "LoKiPreLoad/Charged"       , // create and put into TES charged particles
  "LoKi_Bs2JPsiEta/PsiEta"      // execute the algorithm itsels  
};

// configuration of algorithm 'Charged' 
Charged.PhysDesktop.ParticleMakerType =  "ChargedParticleMaker";
Charged.PhysDesktop.ChargedParticleMaker.ParticleNames = 
  { "pi+" , "pi-" , "K+" , "K-" , "p+" , "p~-" , "e+" , "e-" , "mu+" , "mu-" };
Charged.PhysDesktop.ChargedParticleMaker.ConfLevelCuts = 
  { 0.01  , 0.01  , 0.01 , 0.01 , 0.01 , 0.01  , 0.01 , 0.01 , 0.01  , 0.01  };
Charged.PhysDesktop.OutputLocation      = "/Event/Phys/Charged";

// configuration of algorithm 'Neutrals' 
Neutrals.PhysDesktop.ParticleMakerType   =  "PhotonParticleMaker";
Neutrals.PhysDesktop.OutputLocation      = "/Event/Phys/Neutrals";
Neutrals.PhysDesktop.PhotonParticleMaker.UseAllPhotons = true ;

// configuration of algorithm 'PhiGamma' 
PsiEta.PhysDesktop.InputLocations       = {"/Event/Phys/Charged"  ,
                                        "/Event/Phys/Neutrals" } ;
PsiEta.TupleLUN                         = "TUPLES"  ; // logical file unit 

// N-Tuples
ApplicationMgr.ExtSvc += { "NTupleSvc" } ;
NTupleSvc.Output      += 
  {"TUPLES DATAFILE='PsiEta.hbook' TYP='HBOOK' OPT='NEW'" } ;

// access to MC truth for neutrals 
#include "$CALOASSOCIATORSOPTS/CaloAssociators.opts"
// remove upstream protoparticles (suppress warning messages)
ChargedPP2MC.InputData    = { "Rec/ProtoP/Charged" };

// The number of events to process 
ApplicationMgr.EvtMax  = 10000 ;

// input data set:  Bs -> J/Psi eta 
#include "$LHCBHOME/project/web/cards/611000.opts"

// control for printout 
MessageSvc.OutputLevel       =  3 ;  // "WARNING" printout level
EventSelector.PrintFreq      = 10 ;  // make a print only each 10th event 
// suppress some messages 
ChargedProtoPAlg.OutputLevel     = 4 ; 
RootEvtCnvSvc.OutputLevel        = 4 ;
NeutralPPsFromCPsAlg.OutputLevel = 4 ;
// ============================================================================
// The END 
// ============================================================================
