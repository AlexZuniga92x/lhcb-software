! =============================================================================
! $Id: release.notes,v 1.8 2006-08-04 14:01:10 ngilardi Exp $
! =============================================================================
! package Tools/CondDBUI
! package manager : Nicolas Gilardi
! =============================================================================

! 2006-08-04 - Nicolas Gilardi
 - Created the guiextras.CondDBTree class which includes the database tree and
   the location bar of the browser.
 - Moved guiwin.myWindow.createLeaves and guiwin.myWindow.resolvePath to
   guiextras.CondDBTree.
 - Put back the possibility to open an SQLite database not defined in the
   dblookup.xml file:
   * go to menu DataBase/Open
   * in the DBLookUp Alias combo box, chose "SQLite file" (last entry)
   * this opens a file selection dialog. Chose the sqlite file you want
   * back to the open database dialog, give the Database Name
   * press Open DB when done.

! 2006-08-03 - Nicolas Gilardi
 - Created CondDB.getAttributeList and CondDB.getAttributeListList (ok, not a
   nice name, but it is the best I have so far). They behave like
   CondDB.getXMLString and CondDB.getXMLStringList, but get the full contents
   of the Coral Attribute List in a dictionary instead of a single XML string.
 - Simplified CondDB.getXMLString and CondDB.getXMLStringList to reduce code
   duplication with the above new functions.
 - Updated guitree.guiChannel.setCondDBCache to store dictionaries of XML data
   instead of a single XML string.
 - Updated guiextras.MyDBTable._fillTable and guiextras.MyDBTable.showData to
   fit with the new behaviour of the guiChannel's CondDBCache.

! 2006-08-03 - Nicolas Gilardi
 - Major modifications of the guiextras.myDBTable class:
    * It is now a horizontal QSplitter.
    * The text viewer is always visible on the left.
    * The panel on the right contains: the IOV/Tag filter, the IOV table and
      the payload selector.
    * Payload selector is a new element which will contain the keys of the
      Coral Attribute List stored in the database. For the moment, it contains
      only one entry named "data", but in the future, it may contain many
      different elements.
    * The text displayed depend on both the active line of the IOV table and
      the selected element of the payload selector.
    * It is possible to save the content of the text viewer to a file by
      pressing the button "Export to File".
 - Backward compatible modifications of CondDBUI.getXmlString and
   CondDBUI.getXmlStringList to which it is now possible to give a Coral
   Attribute List key (which is "data" by default).

! 2006-07-28 - Nicolas Gilardi
 - Created a special environment variable $CONDDBUI_SESSIONS_PATH where the
   sessions.dbm file is expected to be.
 - Added support for "read only" and "read/write" access to COOL databases. Two
   functions modified: conddbui.CondDB.__init__ and conddbui.CondDB.openDatabase.
   Both now take an optional argument "readOnly" with default value to "True".
 - Major changes in the open database behavior of the Browser:
    * Existing databases _must_ be defined in $CORAL_DBLOOKUP_PATH/dblookup.xml.
      The browser provides a list of database aliases taken from this file.
    * Sessions are no longer user defined: the last 5 sessions are stored in
      sessions.dbm and accessible via the menu DataBase/Recent.
 - Modified the browser's exception catcher to display which function catched
   the exception.
 - Updated CondDBUI module documentation

! 2006-07-19 - Nicolas Gilardi
 - Fixed a bug in the browser which prevented to display the payload if an
   ancestor tag was selected.
   
! 2006-06-20 - Nicolas Gilardi
 - Added attribute "connectionString" to the CondDB class
 - Fixed the compatibility issue of CondDBUI with Windows path
 - Modified the browser to include tagging and database creation and dropping
 - Fixed some bugs in the browser when adding conditions
 - Updated Browser's documentation
 - Created epydoc documentation for CondDBUI
 - Cleaned the doc directory

! 2006-06-16 - Marco Clemencic
 - made CondDB.dropDatabase a class function
 - modified the test function to use a temporary file for the SQLite db
 - fixed few comments
 - added a work-around for the problem of PyCool intercepting the command line
   argments

! 2006-06-09 - Nicolas Gilardi
 **** requires LCGCMT 43b  ****
 - renamed python/conddbui.py to python/browser.py
 - added src/conddbui.py: user API to LHCb COOL
 - documentation isn't up to date


