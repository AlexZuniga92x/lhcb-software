Package: DAQEvent
Author: Jose' Helder Lopes
Purpose: Define the L1Buffer,  L1Event, L1Bank, RawBuffer, RawEvent and 
         RawBank classes.

!================ DAQEvent v5r1 2005-05-09 ============================
! 2005-05-09 - Marco Cattaneo
 - Add constructor from buffer pointer and length to RawEvent and L1Event,
   for online use, and remove constructor from map
 - Store buffer pointer and length in RawEvent and L1Event and add get accessors
 - Add enum to RawBuffer containing "MagicPattern" value
 - Disable copy and assignment operators in L1Buffer and RawBuffer

!================ DAQEvent v5r0 2005-03-08 ============================
! 2005-03-08 - Marco Cattaneo
 - Backwards incompatible changes to RawBank header, to reflect EDMS 565851
 - Add L0 and DAQ bank types, and L0SourceID, DAQSourceID enums to L1Buffer.
   The specific L0Calo, L0DU L0Muon bank types have been removed, use the 
   source ID to distinguish between different L0 (and DAQ) sources
 - Add DAQ and ODIN bank types to RawBuffer, remove Header bank type
 - Modify CreateRawBuffer and EventHeaderFromRaw to use DAQ bank type for
   event and run number
 - Modify CreateL1Buffer to create a DAQ SFC bank 

!================ DAQEvent v4r6 2005-02-24 ============================
! 2005-02-24 - Daniela Lunesu
 - Add L0Muon bank type

! 2005-02-03 - Marco Cattaneo
 - Fixes for serialization with GaudiObjDesc v7. Not backwards compatible
 - Reorganize xml files to be built independently for each class

! 2005-01-31 - Marco Cattaneo
 - Fix typedefs in DAQTypes.h to compile on Windows

!=============== DAQEvent v4r5 2004-10-26 =============================
! 2004-10-26 - Marco Cattaneo
 - Change meaning of "BankType" field in RawBank header. Now top 8 bits are
   interpreted as a bank version number, bottom 8 bits retain original bank type
   meaning, taken from RawBuffer::BankType enum.
   Change is backwards compatible with DC04 data (all version numbers are zero),
   RawBuffer::addBank methods take additional version argument.
 - Add EventHeaderFromRaw algorithm to decode EventHeader from RawBuffer

!============== DAQEvent v4r4p1 2004-07-20 ============================
! 2004-07-29 - Marco Cattaneo
 - Fix a typo in L1Buffer banktype enum, L0DU was called LODU

!=============== DAQEvent v4r4 2004-07-20 =============================
! 2004-07-20 - Marco Cattaneo
 - Fix requirements for Gaudi v15

! 2004-06-28 - Marco Cattaneo
 - Add a component library with trivial algorithms to create empty
   L1Buffer, RawBuffer, and L1Event, RawEvent from corresponding Buffer
 - Due to above change, DAQEvent is now a DLL. Needs to be loaded with
   ApplicationMgr.DLLs += { "DAQEvent" };
 - Add "Header" to RawBuffer BankType enum, for event header.

!=============== DAQEvent v4r3 2004-06-10 =============================
! 2004-06-10 - Marco Cattaneo
 - Add missing lcg dictionaries for STL containers used in L1Event, RawEvent

!=============== DAQEvent v4r2 2004-04-23 =============================
! 2004-04-23 - Jose Helder Lopes
 - Fix the L1Event bank type (savannah bug 3130)

!=============== DAQEvent v4r1 2004-01-16 =============================
! 2004-03-16 - Marco Cattaneo
 - Add L0PU to RawBuffer::BankType enum

!=============== DAQEvent v4r0 2004-01-13 =============================
! 2004-01-12 - Olivier Callot
 - Fix a bug when reading L1Buffer and RawBuffer: The size should be set as
   m_allocatedSize and not m_currentSize

! 2003-12-15 - Marco Cattaneo
 - Fixes for POOL persistency (Gaudi v14)
 - Undo CaloMap hack, not needed for vc71

!=============== DAQEvent v3r2 2003-12-08 =============================
! 2003-12-08 - Marco Cattaneo
 - move to Gaudi v13 (use LHCbKernel v3r*, EventKernel v4r* in requirements)

!=============== DAQEvent v3r1 2003-12-05 =============================
! 2003-12-05 - Jose Helder Lopes
 - Add protections to L1Buffer and RawBuffer if too many banks added or
   sourceID out of range

!=============== DAQEvent v3r0 2003-11-24 =============================
! 2003-11-24 - Marco Cattaneo
 - Rename HltBank, HltBuffer and HltEvent to RawBank, RawBuffer and RawEvent
 - Change data-type hlt_int to raw_int
 - Only one Velo Raw bank type (instead of VeloR and VeloPhi)
 - Use a "CaloMap" instead of std::map in L1Event and RawEvent, to fix 
   Win VC6 map problem (to be removed when we go to VC7)

!=============== DAQEvent v2r1 2003-11-10 =============================
! 2003-11-10 - Marco Cattaneo
 - Add implementation files for L1Buffer and HltBuffer, to implement serializers
 - Add an enum for Hlt bank types

!=============== DAQEvent v2r0 2003-11-03 =============================
! 2003-10-30 - Jose Helder Lopes

  - Identifier Source_ID changed to SourceID to conform to LHCb coding rules.
  - Identifier Class_ID changed to bankType to avoid confusion with the class ID
    used by the LHCb event data classes.
  - L1 header changed: Use 7 bits for bank sizes, 6 bits for source Id's and 3
    bits for bank types.
  - Introduced definitions of L1 bank types in L1Buffer.
  - The HLT classes names changed (HLT -> Hlt) to improve  readability.
  - The method size() of L1Bank and HltBank was renamed to dataSize() and now
    returns the size of the data part only, excluding the header.

!=============== DAQEvent v1r1 2003-10-03 =============================
! 2003-10-03 - Marco Cattaneo
 - Add constructors HLTEvent( HLTBuffer& ) and L1Event( L1Buffer& )

!=============== DAQEvent v1r0 22-09-2003 =============================
  - DAQTypes.h: Header file with typedef's for hlt_int (32 bits) and l1_int 
                (16 bits) types.

  - L1Buffer:   Holds event size(s) information and a buffer(raw array of l1_int)
                with the data for L1 trigger. Serialize and fillStream methods 
                not implemented yet. Header word with source (7 bits), class 
                (2 bits) and size (7 bits) info for each data bank.

  - L1Event:    Scan the L1 buffer and save a std::vector of L1Banks for each
                different class_ID found in the TES.

  - L1Bank:     Holds the size and the pointer to the data in L1 buffer for each
                data bank

  - HLTBuffer:  Holds event size(s) information and a buffer(raw array of hlt_int)
                with the data for HLT, following the Online Data Format prescription
                (LHCb note 2001-097). Should be filled at the end of the 
                digitization phase for each detector sub-system. Serialize and 
                fillStream methods not implemented yet. Transport header and tail
                not implemented.
      
  - HLTEvent:   Scan the HLT buffer and makes a std::vector of HLTBanks for each
                different class_ID found. 
	      
  - HLTBank:    Holds the size and the pointer to the data in HLT buffer for each
                data bank
