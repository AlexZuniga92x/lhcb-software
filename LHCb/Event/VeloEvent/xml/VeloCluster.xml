<?xml version="1.0" encoding="ISO-8859-1"?>
<!--- $Id: -->
<!--- Author  : Tomasz Szumlak -->
<!--- Created : 2005-12-21 -->

<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
 <package name="VeloEvent">
    <class name="VeloCluster" 
     id="4004"
     author="Chris Parkes, update Tomasz Szumlak" 
     desc="A cluster as on the DAQ output, after the data processor and 
     without applying any additional processing. It contains no simulation 
     info."
     location="Raw/Velo/Clusters">
      <import name="Kernel/SerializeStl"/>
      <import name="Kernel/VeloChannelID"/>
      <template name="KeyedObjectDict" t1="LHCb::VeloChannelID"/>
      <base name="KeyedObject&lt;LHCb::VeloChannelID&gt;"/>
        &KeyedContainer;

      <constructor desc="Constructor with key" 
       initList="KeyedObject&lt;LHCb::VeloChannelID&gt;(key),
	m_sensorID(0),
	m_stripSignals()"
      >
       <arg type="LHCb::VeloChannelID" name="key" const="TRUE"/>
        <code/>  
      </constructor> 

      <attribute 
       name="sensorID" 
       type="LHCb::VeloChannelID" 
       desc="Sensor number stored as VeloChannelID"
      />

      <attribute 
       name="stripSignals" 
       type="std::vector&lt;std::pair&lt;long,double&gt; &gt;" 
       desc="strip numbers and their signals"
      />

      <method 
       name="size" 
       type="long" 
       desc="number of strips in cluster" 
       const="TRUE"
      >
       <code>
        return stripSignals().size();
       </code>
      </method>

      <method 
       name="adcValue" 
       type="double" 
       argList="long num" 
       desc="adc value of strips in cluster" 
       const="TRUE"
      >
       <code>
        return stripSignals()[num].second;
       </code>
      </method>

      <method 
       name="sensor" 
       type="long" 
       desc="Sensor number" 
       const="TRUE"
      >
       <code>
        return m_sensorID.sensor();
       </code>
      </method>

      <method 
       name="strip" 
       type="long" 
       argList="long num" 
       desc="strip number of strip in cluster" 
       const="TRUE"
      >
       <code>
        return stripSignals()[num].first;
       </code>
      </method>

      <method 
       name="setSensor" 
       type="void" 
       argList="long num" 
       desc="Set the sensor number (overrides default)"
       const="FALSE"
      >           
       <code>
        m_sensorID.setSensor(num);
       </code>
      </method>

      <method 
       name="channelID" 
       type="LHCb::VeloChannelID" 
       argList="long num" 
       desc="combined sensor and strip number ID (key) of strip in cluster" 
       const="TRUE"
      >
       <code>
        return VeloChannelID(m_sensorID.sensor(),strip(num),m_sensorID.type());
       </code>
      </method>

    </class>
  </package>
</gdd>
