<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd" >

<gdd>

  <package name="RecEvent">
<!-- ****************************************************************
     * ProtoParticle                                                *
     ****************************************************************-->

     <class
      author="Patrick Koppenburg"
      desc="ProtoParticle, precursor of Particles. It holds information relative to final/global reconstruction, mostly pointers to all elements used to make it"
      name="ProtoParticle"
      id="803"
     >
       <import name="Kernel/ParticleID" soft="TRUE"/>
       <import name="Event/CaloHypo" soft="TRUE"/>
       <import name="GaudiKernel/VectorMap"/>
       <import name="Event/Track"/>
       <import name="Event/RichPID" soft="TRUE"/>
       <import name="Event/MuonPID" soft="TRUE"/>
       <typedef
        type="GaudiUtils::VectorMap&lt;int,double&gt;"
        def="ExtraInfo"
        desc="Vector of information for combined PIDs"
        access="PUBLIC"
       />
      <base name="KeyedObject&lt;int&gt;"/>
      &KeyedObject;
       <enum
        desc="Additional information - to be revised by Global PID Task Force"
        name="additionalInfo"
        value="NoPID=0, LkhPIDe, LkhPIDmu, LkhPIDpi, LkhPIDK, LkhPIDp, PhotonID, RichElectron=100, RichMuon, RichPion, RichKaon, RichProton, RichPIDe, RichPIDmu, RichPIDpi, RichPIDK, RichPIDp, MuonMuon=200, MuonPIDmu, CaloTrMatch=300, CaloDepositID, ClusterMass, ShowerShape, CaloEMatch, BremMatch, ECalPIDe, PrsPIDe, BremPIDe, HcalPIDe, HcalPIDmu, EcalPIDmu, VeloCharge=400, TrackChi2=500, TrackNDof, TrackType, LastGlobal=10000"
        access="PUBLIC"
       />
       <location
        name="Default"
        place="Rec/ProtoP/Final"
       />
       <location
        name="Charged"
        place="Rec/ProtoP/Charged"
       />
       <location
        name="Upstream"
        place="Rec/ProtoP/Upstream"
       />
       <location
        name="Neutrals"
        place="Rec/ProtoP/Neutrals"
       />
       <constructor
        argList="ProtoParticle orig"
        desc="Copy constructor, note that the original SmartRef are not cloned"
       />
       <method
        name="clone"
        desc="Clone, note that the original SmartRef are not cloned"
        type="ProtoParticle*"
        const="TRUE"
       />
       <method
        desc="Assignment operator, note that the original SmartRef are all kept"
        name="operator="
        type="ProtoParticle&amp;"
       >
         <arg name="orig" type="ProtoParticle" const='TRUE'/>
       </method>
       <relation
        name="calo"
        desc="Reference to possible calorimeters result"
        multiplicity="N"
        type="LHCb::CaloHypo"       
       />
       <relation
        name="track"
        desc="Reference to possible track used"
        type="LHCb::Track"
       />
       <relation
        name="richPID"
        desc="Reference to possible Rich pID results"
        type="LHCb::RichPID"
       />
       <relation
        name="muonPID"
        desc="Reference to possible Muon pID results"
        type="LHCb::MuonPID"
       />
       <attribute
        name="extraInfo"
        desc="Some addtional user information. Don't use directly. Use *Info() methods."
        type="ExtraInfo"
        setMeth="FALSE"
        getMeth="FALSE"
       />
       <method
        name="extraInfo"
        const="TRUE"
        desc="ExtraInformation. Don't use directly, use hasInfo, info, addInfo..."
        type="const ExtraInfo"
       > 
       <code>
  return m_extraInfo ;
       </code>
       </method>
       <method
        name="hasInfo"
        const="TRUE"
        desc="has information for specified technique"
        argList="int&amp; key"
        type="bool"
       />
       <method
        name="addInfo"
        desc=" add/replace new information , associated with the key"
        argList="int key, double info"
        type="bool"
       />
       <method
        name="info"
        desc="extract the information associated with the given key. If there is no such infomration the default value will be returned."
        argList="int key, double def"
        type="double"
        const="TRUE"
       />
       <method
        name="eraseInfo"
        desc="erase the information associated with the given key"
        argList="int key"
        type="ProtoParticle::ExtraInfo::size_type"
       />
       <method
        name="charge"
        desc="measured charge"
        type="int"
        const="TRUE"
       />
       <!--method
        name="referencePoint"
        desc="Point at which the momentum is given in LHCb reference frame"
        type="LHCb::Point3D"
        const="TRUE"
       /-->

    </class>
  </package>
</gdd>
