<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd" >

<gdd>

  <package name="RecEvent">
<!-- ****************************************************************
     * ProtoParticle                                                *
     ****************************************************************-->

     <class
      author = "Patrick Koppenburg, Chris Jones"
      desc   = "ProtoParticle, precursor of Particles. It holds information relative to final/global reconstruction, mostly pointers to all elements used to make it"
      name   = "ProtoParticle"
      id     = "803"
     >

       <base name="KeyedObject&lt;int&gt;"/>
       &KeyedObject;

       <import name="Kernel/ParticleID" soft="TRUE"/>
       <import name="Event/CaloHypo" soft="TRUE"/>
       <import name="GaudiKernel/VectorMap"/>
       <import name="Event/Track"/>
       <import name="Event/RichPID" soft="TRUE"/>
       <import name="Event/MuonPID" soft="TRUE"/>

       <typedef
        type   = "GaudiUtils::VectorMap&lt;int,double&gt;"
        def    = "ExtraInfo"
        desc   = "Vector of additional information"
        access = "PUBLIC"
       />

       <enum
        desc="Additional information assigned to this ProtoParticle. A combination of the PID information from the RICH, CALO, MUON and VELO systems together with any additional user information"
        name="additionalInfo"
        value="NoPID=0, RichElDLL=100, RichMuDLL=101, RichPiDLL=102, RichKaDLL=103, RichPrDLL=104, RichPIDStatus=105, MuonMuLL=200, MuonBkgLL=201, MuonNShared=202, MuonPIDStatus=203, CaloTrMatch=300, CaloDepositID, ClusterMass, ShowerShape, CaloEMatch, BremMatch, ECalPIDe, PrsPIDe, BremPIDe, HcalPIDe, HcalPIDmu, EcalPIDmu, PhotonID, VeloCharge=400, TrackChi2PerDof=500, TrackNumDof=501, TrackType=502, TrackHistory=503, CombElDLL=601, CombMuDLL=602, CombPiDLL=603, CombKaDLL=604, CombPrDLL=605, LastGlobal=10000"
        access="PUBLIC"
       />

       <location
        name="Default"
        place="Rec/ProtoP/Final"
       />
       <location
        name="Charged"
        place="Rec/ProtoP/Charged"
       />
       <location
        name="Upstream"
        place="Rec/ProtoP/Upstream"
       />
       <location
        name="Neutrals"
        place="Rec/ProtoP/Neutrals"
       />

       <!--constructor
        argList="ProtoParticle orig"
        desc="Copy constructor, note that the original SmartRef are not cloned"
       /-->

       <!--method
        name="clone"
        desc="Clone, note that the original SmartRef are not cloned"
        type="ProtoParticle*"
        const="TRUE"
       /-->

       <!--method
        desc="Assignment operator, note that the original SmartRef are all kept"
        name="operator="
        type="ProtoParticle&amp;"
       >
         <arg name="orig" type="ProtoParticle" const='TRUE'/>
       </method-->

       <relation
        name="calo"
        desc="References to possible calorimeter results"
        multiplicity="N"
        type="LHCb::CaloHypo"       
       />

       <relation
        name="track"
        desc="Reference to possible track used"
        type="LHCb::Track"
       />

       <relation
        name="richPID"
        desc="Reference to possible RichPID result"
        type="LHCb::RichPID"
       />

       <relation
        name="muonPID"
        desc="Reference to possible MuonPID result"
        type="LHCb::MuonPID"
       />

       <attribute
        name="extraInfo"
        desc="Additional particle ID and user information. Do not access directly, use *Info() methods instead."
        type="ExtraInfo"
        setMeth="FALSE"
        getMeth="TRUE"
       />

       <method
        name    = "hasInfo"
        const   = "TRUE"
        desc    = "Does this protoparticle have information for the specified key"
        argList = "const int key"
        type    = "bool"
       />

       <method
        name    = "addInfo"
        desc    = "Add or replace new information, associated with the specified key"
        argList = "const int key, const double info"
        type    = "bool"
       />

       <method
        name    = "info"
        desc    = "Extract the information associated with the specified key. If there is no such information the default value will be returned."
        argList = "const int key, const double def"
        type    = "double"
        const   = "TRUE"
       />

       <method
        name    = "eraseInfo"
        desc    = "Erase the information associated with the specified key"
        argList = "const int key"
        type    = "ProtoParticle::ExtraInfo::size_type"
       />

       <method
        name    = "charge"
        desc    = "Returns the measured particle charge"
        type    = "int"
        const   = "TRUE" >
        <code>
         return ( track() != NULL ? track()->charge() : 0 );
        </code>
       </method>

       <!--method
        name  = "referencePoint"
        desc  = "Point at which the momentum is given in LHCb reference frame"
        type  = "LHCb::Point3D"
        const = "TRUE"
       /-->

    </class>
  </package>
</gdd>
