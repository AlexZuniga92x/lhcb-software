<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'>
<gdd>
  <package name='TrackEvent'>

<!-- ==================== Trajectory class definition ==================== -->

    <class
      name             = 'Trajectory'
      author           = 'Edwin Bos, Jeroen van Tilburg, Eduardo Rodrigues'
      desc             = 'Trajectory is the base class for the trajectory classes.'
      id               = '10030'
      location         = 'Rec/Track/Traj'
      serializers      = 'FALSE'>

      <import name='GaudiKernel/KeyedContainer' />
      <import name='CLHEP/Geometry/Point3D' />
      <import name='CLHEP/Geometry/Vector3D' />
      <import name='CLHEP/Matrix/Matrix' />

      <constructor
        desc = 'Default constructor' />

      <method
        name    = 'expansion'
        desc    = 'Create a parabolic approximation to the Trajectory'
        const   = 'TRUE'
        virtual = 'TRUE'>
        <arg type = 'double' name='arclength' inout='BOTH' />
        <arg type = 'HepPoint3D' name='p' />
        <arg type = 'HepVector3D' name='dp' />
        <arg type = 'HepVector3D' name='ddp' />
      </method>

      <method
        type    = 'const HepMatrix'
        name    = 'derivative'
        desc    = 'Retrieve the derivative of the parabolic approximation to the Trajectory with respect to the State parameters'
        const   = 'TRUE'
        virtual = 'TRUE'>
        <arg type = 'const double' name='arclength' />
      </method>

    </class>

  </package>
</gdd>
