<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">
<gdd>
  <package name="L0Event">
    <import name="Kernel/CLHEPStreams"/>
    <namespace desc="L0 namespace" name="L0Calo">
      <enum desc="L0Type describes the type of candidate" name="L0Type" value="Electron=1, Photon, Hadron, Hadron2, SumEt, Pi0Local, Pi0Global, SpdMult"/>
    </namespace>
    <class author="Olivier Callot" desc="This class represents the input from the calorimeter to the L0 trigger" id="6001" location="/Event/Trig/L0/Calo" name="L0CaloCandidate">
      <base name="KeyedObject&lt;int&gt;"/>
      <import name="stdio.h" std="TRUE"/>
      <import name="CLHEP/Units/SystemOfUnits"/>
      <import name="Kernel/CaloCellID"/>
      <import name="Event/L0Calo"/>
      <constructor argList="int type, CaloCellID ID, int etCode, double et, HepPoint3D cellCenter, double cellSize" desc="special constructor" initList="KeyedObject&lt;int&gt;(type),m_type(type), m_ID(ID), m_etCode(etCode), m_et(et), m_position(cellCenter), m_posTol(cellSize)">
        <code> </code>
      </constructor>
      <method const="TRUE" desc="Returns the type of candidate as a string, for printing" name="typeName" type="std::string">
      </method>
      <attribute desc="Type of trigger, from L0:L0Type" name="type" setMeth="FALSE" type="int"/>
      <attribute desc="Calo Cell ID. To access MC information..." name="ID" setMeth="FALSE" type="CaloCellID"/>
      <attribute desc="integer version of Et." name="etCode" setMeth="FALSE" type="int"/>
      <attribute desc="Transverse energy" name="et" setMeth="FALSE" type="double"/>
      <attribute desc="Position" name="position" setMeth="FALSE" type="HepPoint3D"/>
      <attribute desc="Tolerance on x/y position = 1/2 cell size" name="posTol" setMeth="FALSE" type="double"/>
      <method const="TRUE" desc="Print on MsgStream" name="fillStream" type="MsgStream&amp;">
	<arg name="log" type="MsgStream" />
      </method>

      <method friend="TRUE" desc="Print operator" name="operator&lt;&lt;" 
        type="MsgStream&amp;">
	<arg name="ms" type="MsgStream" />
	<arg name="cand" type="L0CaloCandidate" const="TRUE" />
      </method>

      <method friend="TRUE" desc="Print operator" name="operator&lt;&lt;" 
        type="MsgStream&amp;">
	<arg name="ms" type="MsgStream" />
	<arg name="cand" type="L0CaloCandidate*" const="TRUE" />
      </method>
    </class>
    <class author="Olivier Callot" desc="Information for L0 Calo Trigger: CellID + 8-bit Et" id="6006" name="L0CaloAdc">
      <base name="KeyedObject&lt;int&gt;"/>
      <import name="Kernel/CaloCellID"/>
      <location name="Ecal" place="/Event/Trig/L0/EcalRaw"/>
      <location name="Hcal" place="/Event/Trig/L0/HcalRaw"/>
      <attribute desc="Cell for which the information is given" name="cellID" setMeth="FALSE" type="CaloCellID"/>
      <attribute desc="8-bit transverse energy" name="adc" setMeth="FALSE" type="int"/>
      <constructor argList="CaloCellID ID, int adc" desc="Usual constructor, specifies the cell and Et" initList="KeyedObject&lt;int&gt;( ID.index() ), m_cellID(ID), m_adc(adc)">
        <code> </code>
      </constructor>
    </class>

    <class author="Olivier Callot" desc=" Fired cells in Prs or Spd." id="6007" name="L0PrsSpdHit" templateList="FALSE" templateVector="TRUE">
      <location name="Prs" place="/Event/Trig/L0/PrsRaw"/>
      <location name="Spd" place="/Event/Trig/L0/SpdRaw"/>
      <base name="ContainedObject"/>
      <import name="Kernel/CaloCellID"/>
      <attribute desc="Fired cells" name="cellID" setMeth="FALSE" type="CaloCellID"/>
      <constructor argList="CaloCellID ID" desc="Usual constructor, specifies the CellID" initList="m_cellID( ID )">
        <code> </code>
      </constructor>
    </class>

  </package>
</gdd>
