<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">

<gdd>

  <package name="PhysEvent">

<!-- ****************************************************************
     * Vertex                                                       *
     ****************************************************************-->
     <namespace
      desc="VertexType namespace"
      name="VertexType"
     >
       <enum
        desc="Describe how a vertex was constructed"
        name="VertexType"
        value="Unknown=0, Primary, Decay, DecayWithMass, Interaction, Brem, Pair, Kink"
        access="PUBLIC"
       />
     </namespace>

     <class 
      author="Gloria Corti"
      desc="Physics analysis Vertex. It holds geometrical information and is part of the tree structure"
      name="Vertex"
     >
       <typedef
        def = "Type"
        type   = "unsigned short"
        desc   = "Shortcut for the type of Vertex"
        access = "PUBLIC"
       />
       <base name="KeyedObject&lt;int&gt;"/>
       <import name="CLHEP/Units/SystemOfUnits"/>
       <!--import name="Particle" soft="TRUE"/-->
       <import name="VertexType"/>
       <location name="User" place="/Event/Phys/User/Vertices"/>
       <location name="Production" place="/Event/Phys/Prod/Vertices"/>       
       <location name="Primary" place="/Event/Phys/PrimaryVertices"/>
       <attribute
        desc="Position in LHCb reference system"
        name="position"
        type="HepPoint3D"
        init="0.0, 0.0, -1*km"
       />
       <attribute
        desc="Covariance matrix containing errors on vertex position"
        name="positionErr"
        type="HepSymMatrix"
        init="3, 0"
       />
       <attribute
        desc="Chi square of vertex fit"
        name="chi2"
        type="double"
        init="-1.0"
       />
       <attribute
        desc="Number of degree of freedom"
        name="nDoF"
        type="int"
        init="-1"
       />
       <attribute
        desc="How the vertex was made"
        name="type"
        type="unsigned short"
        init="VertexType::Unknown"
       />
       <relation
        desc="Reference to outgoing particles"
        multiplicity="N"
        name="products"
        type="Particle"
       />
     </class>

<!-- ****************************************************************
     * Particle                                                     *
     ****************************************************************-->

     <class
      author="Gloria Corti"
      desc="Physics Analysis Particle. A chosen hypotesis for a possible candidate particle."
      name="Particle"
     >
       <base name="KeyedObject&lt;int&gt;"/>
       <import name="CLHEP/Units/SystemOfUnits"/>
       <import name="Event/HepMatrixStream"/>
       <location name="User" place="/Event/Phys/User/Particle"/>
       <location name="Production" place="/Event/Phys/Prod/Particle"/>       
       <attribute
        desc="PDG code"
        name="particleID"
        type="ParticleID"
       />
       <attribute
        desc="Confidence Level of the particleID"
        name="ConfLevel"
        type="double"
       />
       <attribute
        desc="Momentum four vector "
        name="momentum"
        type="HepLorentzVector"
        init="0.0, 0.0, 0.0, -1*GeV"
       />
       <attribute
        desc="Point at which the momentum is given in LHCb reference frame"
        name="pointOnTrack"
        type="HepPoint3D"
        init="0.0, 0.0, -1*km"
       />
       <attribute
        desc="Measured Mass"
        name="mass"
        type="double"
        init="-1.0"
       />
       <attribute
        desc="Error on measured mass"
        name="massErr"
        type="double"
        init="-1.0"
       />
       <attribute
        desc="Covariance matrix relative to momentum (4x4)"
        name="momentumErr"
        type="HepSymMatrix"
        init="4,0"
       />
       <attribute
        desc="Covariance matrix relative to point at which the momentum is given (3x3)"
        name="pointOnTrackErr"
        type="HepSymMatrix"
        init="3, 0"
       />
       <attribute
        desc="Matrix with correlation errors between momemtum and pointOnTrack (momentum x point)"
        name="correlationErr"
        type="HepMatrix"
        init="3, 3, 0"
       />
       <attribute
        desc="Describe if a particle flies or not (i.e. is a resonance) and its
product should be taken if used in a vertex"
        name="isResonance"
        type="bool"
        init="false"
       />
       <relation
        desc="Reference to end vertex (ex. decay)"
        name="endVertex"
        type="Vertex"
       />
       <relation
        desc="Reference to originator (ProtoParticle, MCParticle for smearing, or AxPartCandidate for Zebra DST). Void for composite particles"
        name="origin"
        type="ContainedObject"
       />
       <method
        desc="Charge in units of +e (i.e. electron charge = -1.0)"
        name="charge"
        type="double"
       />
    </class>

<!-- ****************************************************************
     * PhysSelDecay                                                 *
     ****************************************************************-->

    <class 
     author="Gloria Corti"
     desc="Results of standards selection for a specific decay channel"
     name="PhysSelDecay"
     templateList="FALSE"
     templateVector="FALSE"
    >
      <enum 
       access="PUBLIC"
       desc="Bit position for results"
       name="selFlags"
       value="MCFlag=0, TRKFlag, PQUALFlag, SELFlag, AGRFlag, TAGFlag"
      />
      <method
       const="TRUE"
       desc="Retrieve all results"
       name="results">
        <arg inout="BOTH" name="mc" type="bool"/>
        <arg inout="BOTH" name="trk" type="bool"/>
        <arg inout="BOTH" name="pqual" type="bool"/>
        <arg inout="BOTH" name="sel" type="bool"/>
        <arg inout="BOTH" name="agr" type="bool"/>
        <arg inout="BOTH" name="tag" type="bool"/>
      </method>
      <method
       argList="bool mc, bool trk, bool pqual, bool sel, bool agr, bool tag"
       desc="Retrieve all results"
       name="setResults"
      />
      <method
       const="TRUE"
       desc="Return if decay is present in MC truth"
       name="decayIsInMCTree"
       type="bool"
      >
        <code>return ( 0 != ( m_results &amp; (1&lt;&lt;MCFlag) ) );</code>
      </method>
      <method
       const="TRUE"
       desc="Return if decay has end particles reconstructed"
       name="decayHasTrkRecon"
       type="bool"
      >
        <code>return ( 0 != ( m_results &amp; (1&lt;&lt;TRKFlag) ) );</code>
      </method>
      <method
       const="TRUE"
       desc="Return if decay has end particles of physics quality"
       name="decayHasTrkPQual"
       type="bool"
      >
        <code>return ( 0 != ( m_results &amp; (1&lt;&lt;PQUALFlag) ) );</code>
      </method>
      <method
       const="TRUE"
       desc="Return if event satisfy the decay selection"
       name="decayIsSelected"
       type="bool"
      >
        <code>return ( 0 != ( m_results &amp; (1&lt;&lt;SELFlag) ) );</code>
      </method>
      <method
       const="TRUE"
       desc="Return if event satisfy the decay selection and one combination is the MC truth"
       name="decaySelectedIsMC"
       type="bool"
      >
        <code>return ( 0 != ( m_results &amp; (1&lt;&lt;AGRFlag) ) );</code>
      </method>
      <method
       const="TRUE"
       desc="Return if one selected combination is also flavour tagged"
       name="decayIsFlavourTagged"
       type="bool"
      >
        <code>return ( 0 != (m_results &amp; (1&lt;&lt;TAGFlag) ) );</code>
      </method>
      <method
       desc="Set if decay channel is present in MC truth"
       name="setDecayIsInMCTree"
       type="void"
      >
        <code>m_results |= 1&lt;&lt;MCFlag;</code>
      </method>
      <method
       desc="Set if decay channel has all end particles reconstructed"
       name="setDecayHasTrkRecon"
       type="void"
      >
        <code>m_results |= 1&lt;&lt;TRKFlag;</code>
      </method>
      <method
       desc="Set if decay channel has all end particles reconstructed and of physics quality"
       name="setDecayHasTrkPQual"
       type="void"
      >
        <code>m_results |= 1&lt;&lt;PQUALFlag;</code>
      </method>
      <method
       desc="Set if event satisfy the decay selection"
       name="setDecayIsSelected"
       type="void"
      >
        <code>m_results |= 1&lt;&lt;SELFlag;</code>
      </method>
      <method
       desc="Set if event satisfy the decay selection and one combination is the MC truth"
       name="setDecaySelectedIsMC"
       type="void"
      >
        <code>m_results |= 1&lt;&lt;AGRFlag;</code>
      </method>
      <method
       desc="Set if one selected combination is also flavour tagged"
       name="setDecayIsFlavourTagged"
       type="void"
      >
        <code>m_results |= 1&lt;&lt;TAGFlag;</code>
      </method>
      <attribute
       desc="decayCode as used in Bookkeeping"
       name="decayID"
       type="long"
      />
      <attribute
       desc="bitset with results of selection analysis"
       name="results"
       type="long"
      />
    </class>

<!-- ****************************************************************
     * PhysSel                                                      *
     ****************************************************************-->

    <class
     author="Gloria Corti"
     desc="Stores the results of the decay selection package"
     id="860"
     name="PhysSel"
     templateList="FALSE"
     templateVector="FALSE"
    >
      <base name="DataObject"/>
      <!--import name="PhysSelDecay"/-->
      <constructor desc="std constructor">
        <code>  setVersion(1);</code>
      </constructor>
      <destructor desc="std destructor"/>
      <method
       desc="Remove all PhysSelDecays entries"
       name="removePhysSelDecays"
      />
      <method
       desc="Add single PhysSelDecay to map"
       name="addPhysSelDecay"
      >
        <arg name="name" type="std::string"/>
        <arg name="value" type="PhysSelDecay*"/>
      </method>
      <method
       desc="Remove single PhysSelDecay entry from map via its name"
       name="removePhysSelDecay"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       desc="Retrieve list of names for which a PhysSelDecay has been stored"
       name="whichPhysSelDecays"
      >
        <arg name="nameList" type="std::vector&lt;std::string&gt;"/>
      </method>
      <method
       desc="Retrieve the PhysSelDecay results for a decay channel by its name"
       name="retrievePhysSelDecay"
      >
        <arg name="name" type="std::string"/>
        <arg name="value" type="const PhysSelDecay*"/>
      </method>
      <method
       desc="Retrieve results as a set of true/false for a decay channel specifying its name"
       name="results"
      >
        <arg name="name" type="std::string"/>
        <arg inout="BOTH" name="mc" type="bool"/>
        <arg inout="BOTH" name="trk" type="bool"/>
        <arg inout="BOTH" name="pqual" type="bool"/>
        <arg inout="BOTH" name="sel" type="bool"/>
        <arg inout="BOTH" name="agr" type="bool"/>
        <arg inout="BOTH" name="tag" type="bool"/>
      </method>
      <method
       desc="Return MC true result for a specific decay channel"
       name="decayIsInMCTree"
       type="bool"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       desc="Return acceptance result for a specific decay channel"
       name="decayHasTrkRecon"
       type="bool"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       desc="Return physics quality result for a specific decay channel"
       name="decayHasTrkPQual"
       type="bool"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       desc="Return selection result for a specific decay channel"
       name="decayIsSelected"
       type="bool"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       desc="Return agreement results  for a specific decay channel"
       name="decaySelectedIsMC"
       type="bool"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       desc="Return flavour tag results for a specific decay channel"
       name="decayIsFlavourTagged"
       type="bool"
      >
        <arg name="name" type="std::string"/>
      </method>
      <method
       const="TRUE"
       desc="Serialize the object for writing"
       name="serialize"
       type="StreamBuffer&amp;"
      >
        <arg name="s" type="StreamBuffer"/>
      </method>
      <method
       desc="Serialize the object for reading"
       name="serialize"
       type="StreamBuffer&amp;"
      >
        <arg name="s" type="StreamBuffer"/>
      </method>
      <method const="TRUE"
       desc="Fill the ASCII output stream"
       name="fillStream"
       type="std::ostream&amp;"
      >
        <arg name="s" type="std::ostream"/>
      </method>
      <attribute
       desc="Map with decay selection results"
       getMeth="FALSE"
       name="table"
       setMeth="FALSE"
       type="std::map&lt;std::string,PhysSelDecay*&gt;"
      />
    </class>


  </package>

</gdd>
