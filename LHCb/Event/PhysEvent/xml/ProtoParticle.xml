<!-- ****************************************************************
     * ProtoParticle                                                *
     ****************************************************************-->

     <class
      author="Gloria Corti"
      desc="ProtoParticle, precursor of Particles. It holds information relative to final/global reconstruction, mostly pointers to all elements used to make it"
      name="ProtoParticle"
      id="803"
     >
       <typedef
        type="std::vector&lt;std::pair&lt;int,double&gt; &gt;"
        def="PIDInfoVector"
        desc="Vector of information for combined pIDs"
        access="PUBLIC"
       />
       <typedef
        type="std::pair&lt;int,double&gt;"
        def="PIDInfoPair"
        desc="Pair with info for combined pIDs: PDG id number and estimator"
        access="PUBLIC"
       />
       <typedef
        type="std::vector&lt;std::pair&lt;int,double&gt; &gt;"
        def="PIDDetVector"
        desc="Vector of information for separate detectors pIDs"
        access="PUBLIC"
       />
        <typedef
        type="std::pair&lt;int,double&gt;"
        def="PIDDetPair"
        desc="Pair with info for separate detectors pIDs: technique and corresponding value which meaning depend on the technique"
        access="PUBLIC"
       />
      <base name="KeyedObject&lt;int&gt;"/>
       <import name="CLHEP/Vector/LorentzVector"/>
       <import name="CLHEP/Geometry/Point3D"/>       
       <import name="Event/ParticleID" soft="TRUE"/>
       <import name="Event/CaloHypo" soft="TRUE"/>
       <import name="Event/TrStoredTrack" soft="TRUE"/>
       <import name="Event/TrStateP" soft="TRUE"/>
       <import name="Event/RichPID" soft="TRUE"/>
       <import name="Event/MuonID" soft="TRUE"/>
       <enum
        desc="Store a detector specific particleID type or technique for which the likelyhood or discriminating value is then stored"
        name="detectorPID"
        value="NoPID=0, RichElectron, RichMuon, RichPion, RichKaon, RichProton, MuonMuon, CaloTrMatch, CaloDepositID, ClusterMass, ShowerShape, CaloEMatch, BremMatch"
        access="PUBLIC"
       />
       <location
        name="Default"
        place="Rec/ProtoP/Final"
       />
       <location
        name="Charged"
        place="Rec/ProtoP/Charged"
       />
       <location
        name="Neutrals"
        place="Rec/ProtoP/Neutrals"
       />
       <constructor
        argList="ProtoParticle orig"
        desc="Copy constructor, note that the original SmartRef are not cloned"
       />
       <method
        name="clone"
        desc="Clone, note that the original SmartRef are not cloned"
        type="ProtoParticle*"
        const="TRUE"
       />
       <method
        desc="Assignment operator, note that the original SmartRef are all kept"
        name="operator="
        type="ProtoParticle&amp;"
       >
         <arg name="orig" type="ProtoParticle" const='TRUE'/>
       </method>
       <relation
        name="calo"
        desc="Reference to possible calorimeters result"
        multiplicity="N"
        type="CaloHypo"       
       />
       <relation
        name="track"
        desc="Reference to possible track used"
        type="TrStoredTrack"
       />
       <relation
        name="richPID"
        desc="Reference to possible Rich pID results"
        type="RichPID"
       />
       <relation
        name="muonPID"
        desc="Reference to possible Muon pID results"
        type="MuonID"
       />
       <attribute
        name="pIDDetectors"
        desc="List of separate detectors pID info: technique and value"
        type="std::vector&lt; std::pair&lt;int,double&gt; &gt;"
       />
       <attribute
        name="pIDInfo"
        desc="List of particleIDs and their Probability value after corresponding merging stage"
        type="std::vector&lt; std::pair&lt;int,double&gt; &gt;"
       />
       <attribute
        name="pIDhistory"
        desc="Bit packing to store combination of which info (if any) is stored in pIDInfo"
        type="bitfield"
       >
         <bitfield name="noneBit" length='1' desc="No particleID available"/>
         <bitfield name="richBit" length='1' desc="Rich is available"/>
         <bitfield name="richCombined" length='1' desc="Rich combined flag"/>
         <bitfield name="muonBit" length='1' desc="Muon is available"/>
         <bitfield name="muonCombined" length='1' desc="Muon combined flag"/>
         <bitfield name="caloeBit" length='1' desc="Calo Electron is available"/>
         <bitfield name="caloeCombined" length='1' desc="Calo Electron combined flag"/>
       </attribute>
       <method
        name="pIDList"
        const="TRUE"
        desc="List of compatible particleIDs"
        type="std::vector&lt;int&gt;"
       />
       <method
        name="probOfPID"
        const="TRUE"
	desc="Probability for specified PDG id code"
        argList="int pid"
        type="double"
       />
       <method
        name="bestPID"
        const="TRUE"
        desc="PDG code of most likely particleID"
        type="int"
       />       
       <method
        name="probOfBestPID"
        const="TRUE"
        desc="Probability of the most probable particleID"
        type="double"
       /> 
       <method 
        name="detPIDvalue"
        const="TRUE"
        desc="Value for specified detector ID technique"
        argList="ProtoParticle::detectorPID det"
        type="double"
       />
       <method
        name="detPID"
        const="TRUE"
        desc="Return true if the specific ID technique is available for this ProtoParticle"
        argList="ProtoParticle::detectorPID det"
        type="bool"
       />
       <method
        name="charge"
        desc="measured charge"
        type="double"
        const="TRUE"
       />
       <method
        name="trStateP"
        desc="TrStateP closest to IP"
        type="const TrStateP*    "
        const="TRUE"
       />
        <method
        name="trStateP"
        desc="TrStateP closest to IP"
        type="TrStateP*"
       />
       <!--method
        name="momentum"
        desc="Measured three momentum components"
        type="Hep3Vector"
        const="TRUE"
       /-->
       <!--method
        name="pointOnTrack"
        desc="Point at which the momentum is given in LHCb reference frame"
        type="HepPoint3D"
        const="TRUE"
       /-->
       <!--method
        name="trStateAtFirstPoint"
        desc="Track state at measured point closedt to IP"
        type="TrState"
        const="TRUE"
       /-->
       <!--method
        name="energy"
        desc="Measured energy"
        type="double"
       /-->

    </class>
