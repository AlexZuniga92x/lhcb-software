//$Header: /afs/cern.ch/project/cvs/reps/lhcb/Ex/DetCondExample/options/job.opts,v 1.4 2001-11-23 18:00:44 andreav Exp $
//==============================================================
// Standard Job options file
//==============================================================

//--------------------------------------------------------------
// Services needed in the application
//--------------------------------------------------------------

// Dynamically load component library for DetCond services and converters
ApplicationMgr.DLLs    = { "DetCond", "GaudiAlg" };

// Configure which DetectorDataSvc should be used
ApplicationMgr.ExtSvc  = { "ConditionsDBDataSvc/DetectorDataSvc" };

// Add other external services to the list of known services
ApplicationMgr.ExtSvc += { "ConditionsDBCnvSvc" };
ApplicationMgr.ExtSvc += { "XmlStringCnvSvc"    };
ApplicationMgr.ExtSvc += { "ChronoStatSvc"      };

// No histograms are needed in this example
ApplicationMgr.HistogramPersistency = "NONE";

//--------------------------------------------------------------
// Sequence of algorithms to be applied
//--------------------------------------------------------------
ApplicationMgr.TopAlg  = { "Sequencer/SequencerAlg" };
SequencerAlg.Members   = { };
SequencerAlg.Members  += { "PopulateDB/Alg__i_PopulateDB" };
SequencerAlg.Members  += { "ClearDetectorStore/Alg_ii_ClearStore" };
SequencerAlg.Members  += { "EvtClock/Alg_00_EvtClock" };
SequencerAlg.Members  += 
  { "TestConditionsDBDataSvc/Alg_01_TestCondDBDataSvc" };
SequencerAlg.Members  += { "TestSmartDataPtr/Alg_02_TestSmartDataPtr" };
SequencerAlg.Members  += { "DumpDetectorStore/Alg__f_ClearStore" };

// Event clock attributes
Alg_00_EvtClock.startTime = 12;
Alg_00_EvtClock.delayTime = 5;

// Number of events to be processed (default is 10)
ApplicationMgr.EvtMax = 5;

//--------------------------------------------------------------
// Location of ConditionsDB boot file
//--------------------------------------------------------------
ConditionsDBGate.condDBBootHost  = "$DETCONDEXAMPLE_BOOTHOST";
ConditionsDBGate.condDBBootDir   = "$DETCONDEXAMPLE_BOOTDIR";
ConditionsDBGate.condDBBootFile  = "$DETCONDEXAMPLE_BOOTFILE";

//--------------------------------------------------------------
// Default global tag for the ConditionsDB
// DataSvc is a ConditionsDBDataSvc called "DetectorDataSvc"
//--------------------------------------------------------------

// Production set of temperatures: Ecal is hot, LHCb is cold
DetectorDataSvc.condDBGlobalTag = "PRODUCTION";

// Cold set of temperatures
//DetectorDataSvc.condDBGlobalTag = "COLD";

// Hot set of temperatures
//DetectorDataSvc.condDBGlobalTag = "HOT";

//--------------------------------------------------------------
// Message service options
//--------------------------------------------------------------

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
// (DetectorDataSvc refers also to ConditionDataSvc and ConditionsDBDataSvc)
// (XmlStringCnvSvc refers also to all XmlStringXxxCnv converters)
MessageSvc.OutputLevel = 2;
//ConditionsDBCnvSvc.OutputLevel       = 3;
//ConditionsDBMaster.OutputLevel       = 3;
//DetectorDataSvc.OutputLevel          = 3; 
//DetectorPersistencySvc.OutputLevel   = 3;
//SequencerAlg.OutputLevel             = 3;
//XmlStringCnvSvc.OutputLevel          = 3;
//Alg__i_PopulateDB.OutputLevel        = 3;
//Alg_ii_ClearStore.OutputLevel        = 3;
//Alg_00_EvtClock.OutputLevel          = 3;
//Alg_01_TestCondDBDataSvc.OutputLevel = 3;
//Alg_02_TestSmartDataPtr.OutputLevel  = 3;
//Alg__f_ClearStore.OutputLevel        = 3;

// Modify Message Format to print algorithm name with 30 characters
MessageSvc.Format = "% F%30W%S%7W%R%T %0W%M";

//--------------------------------------------------------------
// Input file
//--------------------------------------------------------------
ApplicationMgr.EvtSel = "NONE";

//--------------------------------------------------------------
// Persistency and Conversion Services Private Options
//--------------------------------------------------------------
// Detector Persistency service setup: 
DetectorPersistencySvc.CnvServices  = { "ConditionsDBCnvSvc" };
DetectorPersistencySvc.CnvServices += { "XmlStringCnvSvc" };

//--------------------------------------------------------------
// Algorithms Private Options
//--------------------------------------------------------------

//==============================================================
// End of job options file
//==============================================================
