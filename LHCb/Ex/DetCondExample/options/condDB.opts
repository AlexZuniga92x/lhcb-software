//$Id: condDB.opts,v 1.5 2004-12-08 17:24:36 marcocle Exp $
//==============================================================
// Common job options to use a CondDB in DetCondExample
//==============================================================

#include "../options/common.opts"

//--------------------------------------------------------------
// Extra services needed in the application
//--------------------------------------------------------------

// Dynamically load component library for DetCond services and converters
ApplicationMgr.DLLs += { "DetCond" };

// Add other external services to the list of known services
ApplicationMgr.ExtSvc += { "ConditionsDBCnvSvc" };

// Detector Persistency service setup: 
DetectorPersistencySvc.CnvServices += { "ConditionsDBCnvSvc" };

//--------------------------------------------------------------
// Access to the ConditionsDB
//--------------------------------------------------------------

// The default global TAG is "HEAD" but it is not working
ConditionsDBCnvSvc.condDBGlobalTag = "";

// Database implementation (one of CondDBObjy, CondDBOracle, CondDBMySQL)
ConditionsDBGate.condDBImpl = "$CONDDB_implementation";

// Database host (Oracle host in tnsnames.ora; Objectivity lockserver host)
ConditionsDBGate.condDBHost = "$DETCONDEXAMPLE_DBHOST";

// Database user (Oracle only, dummy for Objectivity)
ConditionsDBGate.condDBUser = "$DETCONDEXAMPLE_DBUSER";

// Database password (Oracle only, dummy for Objectivity)
ConditionsDBGate.condDBPswd = "$DETCONDEXAMPLE_DBPSWD";

// Database name (Oracle user-defined DB name, Objectivity boot file full path)
ConditionsDBGate.condDBName = "$DETCONDEXAMPLE_DBNAME";

// Show database password?
ConditionsDBGate.showCondDBPswd = false;

//==============================================================
// End of common job options to use a CondDB in DetCondExample
//==============================================================
