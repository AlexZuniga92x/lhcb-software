# $Id: README.RedHat72,v 1.5 2002-07-25 15:51:29 andreav Exp $

------------------------------------------------------------------------------
Packages needed to execute DetCondExample on lxplus7 (RedHat7.2)
------------------------------------------------------------------------------

# I assume in the following that your release directory is ~/newmycmt
# Go to your release directory
cd ~/newmycmt

# You need to getpack the head versions of the following packages
getpack Det/CondDBOracle   v4r15    head
getpack Det/DetCond        v4r0     head
getpack Det/DetCondExample v4r0     head
getpack Det/DetDesc        v10r3

# You need to getpack ALL the following packages, because:
# - libraries need to be recompiled for the rh72_gcc2952 tag
# - pointers to external libraries must be defined for the rh72_gcc2952 tag
getpack AIDA               v2r2
getpack CLHEP              v17r10p1
getpack ExternalLibs       v3r7
getpack GaudiAlg           v6r1
getpack GaudiConf          v6r2
getpack GaudiKernel        v12r3
getpack GaudiPolicy        v5r5
getpack GaudiSvc           v8r3
getpack HTL                v13r10p1
getpack XERCES             v16r0p1

# You then need to modify some of the packages you downloaded with getpack,
# since they do not yet support Linux RedHat 7.2.

------------------------------------------------------------------------------
Modifications to GaudiPolicy v5r5
------------------------------------------------------------------------------

# You need to define the tag rh72_gcc2952.
# This indicates Linux RedHat 7.2 (kernel linux24, glibc 2.2) with gcc 2.95.2
# -> `fs sysname` returns "Current sysname is 'i386_linux24'"
# -> `uname -msr` returns "Linux 2.4.9-31.1.cernsmp i686"
# -> `ls -l /lib/libc.so.6` points to "libc-2.2.4.so"

#
# ===> MODIFY GaudiPolicy/v5r5/cmt/requirements by adding:
#
> # Linux RedHat 7.2 (kernel linux24, glibc 2.2) with gcc 2.95.2
> tag i386_linux24        Linux glibc-2.2
> tag rh72_gcc2952        Linux glibc-2.2 gcc-2.95.2
> tag rh72_gcc2952dbx     Linux glibc-2.2 gcc-2.95.2 debug
> tag rh72_gcc2952Static  Linux glibc-2.2 gcc-2.95.2 static

------------------------------------------------------------------------------
Modifications to ExternalLibs v3r7
------------------------------------------------------------------------------

# You need to modify ExternalLibs to link the LHCXX packages.
# The LHCXX libraries for RedHat7.2 are maintained under 
# /afs/cern.ch/sw/lhcxx/specific/redhat72/gcc-2.95.2-from72, which is
# soft-linked as /afs/cern.ch/sw/lhcxx/specific/redhat72/gcc-2.95.2.
# This is also soft-linked as /afs/cern.ch/sw/lhcxx/specific/rh72_gcc2952,
# thanks to Andreas Pfeiffer, and can be used with the standard ExternalLibs.
# Notice that another version gcc-2.95.2-from61 was also produced in the past:
# while the compiler version was the same, the compiler itself was compiled 
# on 6.1, so that the old stdc++ libraries would be used. Version 
# gcc-2.95.2-from61 was only used to test Objectivity and will be abandoned.

#
# ===> MODIFY ExternalLibs/v3r7/cmt/requirements:
#
< macro PLATARCH    "$(PLATARCHdef)"\
<       egcs-1.1.2  "rh61_egcs112"\
<       CAMBRIDGE   "rh71_gcc29521"\
<       STANDALONE  ""
---
> macro PLATARCH     "$(PLATARCHdef)"\
>       egcs-1.1.2   "rh61_egcs112"\
>       rh72_gcc2952 "rh72_gcc2952"\
>       CAMBRIDGE    "rh71_gcc29521"\
>       STANDALONE   ""

------------------------------------------------------------------------------
Modifications to HTL v13r10
------------------------------------------------------------------------------

# You need to use HTL 1.3.2.1 as 1.3.1.0 does not exist for RedHat7.2.
# A temporary hack is used, instead of modifying the dependencies
# of dependent packages to use HTL v13r21 instead of v13r10p1.

#
# ===> MODIFY HTL/v13r10p1/cmt/requirements:
#
< macro HTLBASE     "${HTL_DIR}/1.3.1.0"\
<       Solaris     "${HTL_DIR}/1.3.1.1"
---
> macro HTLBASE      "${HTL_DIR}/1.3.1.0"\
>       Solaris      "${HTL_DIR}/1.3.1.1"\
>       rh72_gcc2952 "${HTL_DIR}/1.3.2.1"

------------------------------------------------------------------------------
Modifications to XERCES v16r0p1
------------------------------------------------------------------------------

# You need to use XERCES for RedHat 6.1 as libraries for 7.2 do not exist yet
# This might introduce more problems than the hacks for CLHEP and HTL, since 
# it involves different glibc libraries... but it seems to work for now.

#
# ===> MODIFY XERCES/v16r0p1/cmt/requirements:
#
< macro XERCESBASE "${XERCES_DIR}/1.6.0/$(PLATARCH)" \
<       WIN32      "${XERCES_DIR}/1.6.0/Win32"
---
> macro XERCESBASE   "${XERCES_DIR}/1.6.0/$(PLATARCH)" \
>       rh72_gcc2952 "${XERCES_DIR}/1.6.0/rh61_gcc2952" \
>       WIN32        "${XERCES_DIR}/1.6.0/Win32"

------------------------------------------------------------------------------
How to setup the LHCb RedHat7.2 environment on lxplus7 (RedHat7.2)
------------------------------------------------------------------------------

# Logon to lxplus7
ssh $USER@lxplus7.cern.ch

# Go to your release directory
cd ~/newmycmt

# Go to the cmt directory
cd Ex/DetCondExample/v4r0/cmt

# Source the setup_RedHat72.csh script
# This does the following:
# - it assumes CMT v1r12p20020412 is used
# - it defines CMTCONFIG as rh72_gcc2952
# - it makes sure that gcc 2.95.2 is used instead of gcc 2.96
# - it redefines LHCXX_DIR as $SWROOT/lhcxx/specific/rh72_gcc2952
source setup_RedHat72.csh

# Broadcast "cmt config" to make sure CMT v1r12p20020412 is used everywhere
cmt broadcast cmt config

# I suggest you build packages in debug mode, i.e. using tag $CMTDEB.
# Setup the environment
source ../cmt/setup.csh -tag=$CMTDEB

------------------------------------------------------------------------------
How to setup and link DetCondExample on lxplus7 (RedHat7.2)
------------------------------------------------------------------------------

# NB: Do NOT source LHCXX setup scripts in your .cshrc!
# The configuration of LHCXX stuff is handled for you by CMT scripts!

# Go to your release directory
cd ~/newmycmt

# Go to the cmt directory
cd Ex/DetCondExample/v4r0/cmt

# Setup the environment
source ../cmt/setup.csh -tag=$CMTDEB

# Compile and link all packages
cmt broadcast gmake tag=$CMTDEB

------------------------------------------------------------------------------
How to run DetCondExample on lxplus7 (RedHat7.2)
------------------------------------------------------------------------------

# Go to your release directory
cd ~/newmycmt

# Go to the working directory
cd Ex/DetCondExample/v4r0/options

============
(1) testXml
============

# Run the application
../$CMTDEB/DetCondExample.exe testXml.opts

# Run the application and create an output comparable to the standard one
../$CMTDEB/DetCondExample.exe testXml.opts > log.testXml.Linux72

================
(2a) fillCondDB
================

# Set the debug level for the CONDDB library. Possible debug levels are:
#    none: no message is printed (default)
#    prof: only print messages which do not disturb profiling measurements
#    user: only print messages of "general" interest
#    devl: also print messages of interest only for the package developer
#    more: more paranoid messages are printed 
#    all:  any debug message will be printed
setenv COND_DB_DEBUG none

# Set the correct path to the database
# Even better, you can also modify and execute the setupDB_Oracle.bat script
# You can set your password in the private/setupDBPSWD_Oracle.bat
# The host (here db9) must correspond to an entry in the tnsnames.ora file
# Environment variable TNS_ADMIN defines the search path for tnsnames.ora
# The name of the DB can be anything: a DB with that name is created and used
# For instance, this is what I use... except the password :-)
setenv DETCONDEXAMPLE_DBHOST DB9
setenv DETCONDEXAMPLE_DBUSER AVALASSI
setenv DETCONDEXAMPLE_DBNAME MYCONDDB_LINUX
setenv DETCONDEXAMPLE_DBPSWD ********

# Run the application
../$CMTDEB/DetCondExample.exe fillCondDB.opts

# Run the application and create an output comparable to the standard one
# The database is only filled if empty: the first output is longer
# Be sure to start with a new database if you want to compare the first output
# You do not need to source setupDB.csh again
source ../cmt/cleanupDB.csh
../$CMTDEB/DetCondExample.exe fillCondDB.opts >log.fillCondDB_1.Orac.Linux72
../$CMTDEB/DetCondExample.exe fillCondDB.opts >log.fillCondDB_2.Orac.Linux72

================
(2b) testCondDB
================

# Run the application
# Be sure to have filled the database using fillCondDB.opts first!
../$CMTDEB/DetCondExample.exe testCondDB.opts

# Run the application and create an output comparable to the standard one
../$CMTDEB/DetCondExample.exe testCondDB.opts >log.testCondDB.Orac.Linux72

================
(3) daqCondDB
================

# Run the application
# You can run this as many times as you like and observe how speed changes
../$CMTDEB/DetCondExample.exe daqCondDB.opts

# Run the application and create an output comparable to the standard one
../$CMTDEB/DetCondExample.exe daqCondDB.opts >log.daqCondDB.Orac.Linux72

------------------------------------------------------------------------------
How to fill the DB on Windows and read it from RedHat72 (or viceversa)
------------------------------------------------------------------------------

# In the example above, you created a database from Linux, whose name is
setenv DETCONDEXAMPLE_DBNAME MYCONDDB_LINUX
# In the Windows example (see README), you created a database whose name is
set DETCONDEXAMPLE_DBNAME=MYCONDDB_WINDOWS

# You can run the testCondDB example again on Linux after setting
setenv DETCONDEXAMPLE_DBNAME MYCONDDB_WINDOWS
# You can compare the output to that in the ../job directory
../$CMTDEB/DetCondExample.exe testCondDB.opts \
  > log.testCondDB.Orac.Linux72.DBfilledOnWindows

# You can run the testCondDB example again on Windows after setting
set DETCONDEXAMPLE_DBNAME=MYCONDDB_LINUX
# You can compare the output to that in the ..\job directory
run DetCondExample testCondDB.opts > log.testCondDB.Orac.Windows.DBfilledOnLinux72

# The result of this test is that there are no significant differences
# between log.testCondDB.Orac.Windows.DBfilledOnLinux72 and [...].Windows, or
# between log.testCondDB.Orac.Linux72.DBfilledOnWindows and [...].Linux72
# The only difference is in the standard format to print floats:
# - on Windows: 1.50000000e+001
# - on Linux:   1.50000000e+01

------------------------------------------------------------------------------
How to browse the Oracle DB using SQL commands on lxplus7 (RedHat7.2)
------------------------------------------------------------------------------

# Go to your release directory
cd ~/newmycmt

# Go to the cmt directory
cd Ex/DetCondExample/v4r0/cmt

# Setup the environment
# This sets the path to the DB if you modified the relevant scripts as above
source ../cmt/setup.csh

# List which CondDBs exist on that host for that user
source ../sql/listCondDBs.csh

# List which tables exist on that host for that user for the current DB name
source ../sql/listAll.csh

# Login interactively on that host as that user
source ../sql/loginSqlPlus.csh
# Example: print all CondDBObject's
SQL> select * from <DBNAME>_CONOBJS;
# Example: print the range of all CondDBObject's
SQL> select since,till from <DBNAME>_CONOBJS;
# Example: change your password
SQL> alter user <USERNAME> identified by <NEWPASSWORD>;
# Quit the SQL*plus session
SQL> quit;

==============================================================================

