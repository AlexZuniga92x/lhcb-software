Index: ConditionsDB/CondDBOracleMgrFactory.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/ConditionsDB/CondDBOracleMgrFactory.h,v
retrieving revision 1.1
diff -p -r1.1 CondDBOracleMgrFactory.h
*** ConditionsDB/CondDBOracleMgrFactory.h	12 May 2004 14:15:48 -0000	1.1
--- ConditionsDB/CondDBOracleMgrFactory.h	8 Dec 2004 17:37:46 -0000
***************
*** 5,10 ****
--- 5,11 ----
  
  #include "ConditionsDB/ICondDBMgr.h"
  
+ namespace cool {
  
  /**
   * Factory method of ICondDBMgr for implementation based on Oracle.
*************** public:
*** 24,27 ****
--- 25,30 ----
  
  };
  
+ }
+ 
  #endif // CondDBOracleMgrFactory_h
Index: ConditionsDB/CondDBOracleObjectFactory.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/ConditionsDB/CondDBOracleObjectFactory.h,v
retrieving revision 1.2
diff -p -r1.2 CondDBOracleObjectFactory.h
*** ConditionsDB/CondDBOracleObjectFactory.h	12 May 2004 14:29:41 -0000	1.2
--- ConditionsDB/CondDBOracleObjectFactory.h	8 Dec 2004 17:37:46 -0000
***************
*** 6,11 ****
--- 6,12 ----
  #include "ConditionsDB/ICondDBObject.h"
  #include "ConditionsDB/ICondDBStreamable.h"
  
+ namespace cool {
  
  /**
   * Factory method of ICondDBObject
*************** public:
*** 34,37 ****
--- 35,40 ----
      throw(CondDBException);
  };
  
+ }
+ 
  #endif // CondDBOracleObjectFactory_h
Index: src/CondDBDataIteratorAll.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBDataIteratorAll.cpp,v
retrieving revision 1.1
diff -p -r1.1 CondDBDataIteratorAll.cpp
*** src/CondDBDataIteratorAll.cpp	1 Dec 2003 13:49:40 -0000	1.1
--- src/CondDBDataIteratorAll.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 2,7 ****
--- 2,9 ----
  #include "CondDBObject.h"
  #include "CondDBInterface.h"
  
+ using namespace cool;
+ 
  // Iterator is implemented as a set of two vectors of CondDBObject's IDs. 
  // It is very efficient solution as only part of the data is read at
  // once and for the 99,9% of next() and previous() calls object locator
Index: src/CondDBDataIteratorAll.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBDataIteratorAll.h,v
retrieving revision 1.1
diff -p -r1.1 CondDBDataIteratorAll.h
*** src/CondDBDataIteratorAll.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondDBDataIteratorAll.h	8 Dec 2004 17:37:46 -0000
***************
*** 7,12 ****
--- 7,14 ----
  #include <vector>
  #include <map>
  
+ namespace cool {
+ 
  /**
   * Obracle based implementation of ICondDBDataIterator for full iteration
   */
*************** private:
*** 79,83 ****
--- 81,87 ----
  
  };
  
+ }
+ 
  #endif  /* CondDBDataIteratorAll_h */
  
Index: src/CondDBDataIteratorHorizontal.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBDataIteratorHorizontal.cpp,v
retrieving revision 1.2
diff -p -r1.2 CondDBDataIteratorHorizontal.cpp
*** src/CondDBDataIteratorHorizontal.cpp	30 Jan 2004 09:22:10 -0000	1.2
--- src/CondDBDataIteratorHorizontal.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 6,11 ****
--- 6,13 ----
  #include "CondDBInterface.h"
  #include "CondDBObject.h"
  
+ using namespace cool;
+ 
  // Iterator is implemented as a set of two vectors of CondDBObject's IDs. 
  // It is very efficient solution as only part of the data is read at
  // once and for the 99,9% of next() and previous() calls object locator
Index: src/CondDBDataIteratorHorizontal.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBDataIteratorHorizontal.h,v
retrieving revision 1.1
diff -p -r1.1 CondDBDataIteratorHorizontal.h
*** src/CondDBDataIteratorHorizontal.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondDBDataIteratorHorizontal.h	8 Dec 2004 17:37:46 -0000
***************
*** 7,12 ****
--- 7,14 ----
  #include <vector>
  #include <map>
  
+ namespace cool {
+ 
  /**
   * Oracle based implementation of ICondDBDataIterator for horizontal iteration
   */
*************** private:
*** 81,85 ****
--- 83,89 ----
  
  };
  
+ }
+ 
  #endif  /* CondDBDataIteratorHorizontal_h */
  
Index: src/CondDBDataIteratorVertical.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBDataIteratorVertical.cpp,v
retrieving revision 1.2
diff -p -r1.2 CondDBDataIteratorVertical.cpp
*** src/CondDBDataIteratorVertical.cpp	30 Jan 2004 11:19:04 -0000	1.2
--- src/CondDBDataIteratorVertical.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 6,11 ****
--- 6,13 ----
  #include "CondDBInterface.h"
  #include "CondDBObject.h"
  
+ using namespace cool;
+ 
  // Iterator is implemented as a set of two vectors of CondDBObject's IDs. 
  // It is very efficient solution as only part of the data is read at
  // once and for the 99,9% of next() and previous() calls object locator
Index: src/CondDBDataIteratorVertical.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBDataIteratorVertical.h,v
retrieving revision 1.1
diff -p -r1.1 CondDBDataIteratorVertical.h
*** src/CondDBDataIteratorVertical.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondDBDataIteratorVertical.h	8 Dec 2004 17:37:46 -0000
***************
*** 7,12 ****
--- 7,14 ----
  #include <vector>
  #include <map>
  
+ namespace cool {
+ 
  /**
   * Obracle based implementation of ICondDBDataIterator for vertical iteration
   */
*************** public:
*** 77,81 ****
--- 79,85 ----
    Statement*				stmt;
  };
  
+ }
+ 
  #endif  /* CondDBDataIteratorVertical_h */
  
Index: src/CondDBInterface.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBInterface.cpp,v
retrieving revision 1.3
diff -p -r1.3 CondDBInterface.cpp
*** src/CondDBInterface.cpp	11 May 2004 14:34:10 -0000	1.3
--- src/CondDBInterface.cpp	8 Dec 2004 17:37:46 -0000
*************** extern "C" {
*** 33,38 ****
--- 33,40 ----
  map<string,Number> folderIdCache;
  map<string,Number> tagIdCache;
  
+ using namespace cool;
+ 
  // Constructor
  CondDBInterface::CondDBInterface()
  {
Index: src/CondDBInterface.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBInterface.h,v
retrieving revision 1.5
diff -p -r1.5 CondDBInterface.h
*** src/CondDBInterface.h	11 May 2004 17:12:35 -0000	1.5
--- src/CondDBInterface.h	8 Dec 2004 17:37:46 -0000
***************
*** 7,12 ****
--- 7,14 ----
  
  #include <map>
  
+ namespace cool {
+ 
  class CondDBObject;
  class CondFolderMgr;
  class CondDBTagMgr;
*************** private:
*** 152,155 ****
--- 154,159 ----
  
  };
  
+ }
+ 
  #endif
Index: src/CondDBObject.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBObject.cpp,v
retrieving revision 1.2
diff -p -r1.2 CondDBObject.cpp
*** src/CondDBObject.cpp	30 Jan 2004 11:32:52 -0000	1.2
--- src/CondDBObject.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 1,5 ****
--- 1,7 ----
  #include "CondDBObject.h"
  
+ using namespace cool;
+ 
  // Constructor
  
  CondDBObject::CondDBObject()
Index: src/CondDBObject.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBObject.h,v
retrieving revision 1.1
diff -p -r1.1 CondDBObject.h
*** src/CondDBObject.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondDBObject.h	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  #include "ConditionsDB/ICondDBObject.h"
  #include "Debug.h"
  
+ namespace cool {
+ 
  /**
   * Oracle based implementation of ICondDBObject
   */
*************** private:
*** 75,78 ****
--- 77,82 ----
    bool          isNULLinterval;
  };
  
+ }
+ 
  #endif
Index: src/CondDBOracleMgrFactory.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBOracleMgrFactory.cpp,v
retrieving revision 1.1
diff -p -r1.1 CondDBOracleMgrFactory.cpp
*** src/CondDBOracleMgrFactory.cpp	12 May 2004 14:20:14 -0000	1.1
--- src/CondDBOracleMgrFactory.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 2,7 ****
--- 2,9 ----
  
  #include "CondDBInterface.h"
  
+ using namespace cool;
+ 
  ICondDBMgr* 
  CondDBOracleMgrFactory::createCondDBMgr()
    throw(CondDBException)
Index: src/CondDBOracleObjectFactory.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBOracleObjectFactory.cpp,v
retrieving revision 1.2
diff -p -r1.2 CondDBOracleObjectFactory.cpp
*** src/CondDBOracleObjectFactory.cpp	12 May 2004 14:29:41 -0000	1.2
--- src/CondDBOracleObjectFactory.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 7,12 ****
--- 7,13 ----
  // persistently stored in the database using ICondDBDataAccess
  // interface
  
+ using namespace cool;
  
  // Object with string data
  ICondDBObject* 
Index: src/CondDBTag.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBTag.cpp,v
retrieving revision 1.1
diff -p -r1.1 CondDBTag.cpp
*** src/CondDBTag.cpp	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondDBTag.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 1,6 ****
--- 1,7 ----
  #include "CondDBTag.h"
  #include "CondDBTagMgr.h"
  
+ using namespace cool;
  
  CondDBTag::CondDBTag( const CondDBTagMgr*   inCondTagMgr )
  {
Index: src/CondDBTag.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBTag.h,v
retrieving revision 1.1
diff -p -r1.1 CondDBTag.h
*** src/CondDBTag.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondDBTag.h	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  #include "ConditionsDB/ICondDBTag.h"
  #include "Debug.h"
  
+ namespace cool {
+ 
  class CondDBTagMgr;
  
  /**
*************** private:
*** 48,52 ****
--- 50,56 ----
    const CondDBTagMgr*   condTagMgr;
  };
  
+ }
+ 
  #endif
  
Index: src/CondDBTagMgr.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBTagMgr.cpp,v
retrieving revision 1.3
diff -p -r1.3 CondDBTagMgr.cpp
*** src/CondDBTagMgr.cpp	2 May 2004 14:50:27 -0000	1.3
--- src/CondDBTagMgr.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 3,8 ****
--- 3,10 ----
  #include "CondDBInterface.h"
  #include "CondFolderMgr.h"
  
+ using namespace cool;
+ 
  // Constructor
  CondDBTagMgr::CondDBTagMgr(CondDBInterface* inCondDBInterface)
  {
Index: src/CondDBTagMgr.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondDBTagMgr.h,v
retrieving revision 1.3
diff -p -r1.3 CondDBTagMgr.h
*** src/CondDBTagMgr.h	2 May 2004 14:50:27 -0000	1.3
--- src/CondDBTagMgr.h	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  #include "ConditionsDB/ICondDBTagMgr.h"
  #include "Debug.h"
  
+ namespace cool {
+ 
  class CondDBInterface;
  
  /*
*************** private:
*** 73,77 ****
--- 75,81 ----
  
  };
  
+ }
+ 
  #endif
  
Index: src/CondFolder.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondFolder.cpp,v
retrieving revision 1.1
diff -p -r1.1 CondFolder.cpp
*** src/CondFolder.cpp	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondFolder.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 1,5 ****
--- 1,7 ----
  #include "CondFolder.h"
  
+ using namespace cool;
+ 
  // Constructor
  CondFolder::CondFolder() { 
   name="";
Index: src/CondFolder.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondFolder.h,v
retrieving revision 1.1
diff -p -r1.1 CondFolder.h
*** src/CondFolder.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondFolder.h	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  #include "ConditionsDB/ICondDBFolder.h"
  #include "Debug.h"
  
+ namespace cool {
+ 
  /**
   * Oracle based implementation of ICondDBFolder
   */
*************** private:
*** 39,44 ****
--- 41,48 ----
  
  };
  
+ }
+ 
  #endif  // CONDFOLDER_HH
  
  
Index: src/CondFolderMgr.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondFolderMgr.cpp,v
retrieving revision 1.2
diff -p -r1.2 CondFolderMgr.cpp
*** src/CondFolderMgr.cpp	30 Jan 2004 11:31:26 -0000	1.2
--- src/CondFolderMgr.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 3,8 ****
--- 3,10 ----
  #include "CondFolderSet.h"
  #include "CondDBInterface.h"
  
+ using namespace cool;
+ 
  // Constructor
  CondFolderMgr::CondFolderMgr(CondDBInterface* incondDBInterface)
  {
*************** CondFolderMgr::recursiveCreateFolderSet(
*** 40,46 ****
     
     splitPath( fullPathName, parent, name );
  
!    if (parent==sSeparator) {					// end of path encountered
  	   return;
     } else {													
  	   recursiveCreateFolderSet(parent,attributes,description);
--- 42,50 ----
     
     splitPath( fullPathName, parent, name );
  
!    if (parent==sSeparator
!        || exist(removeROOT(fullPathName))){ // end of missing path encountered
!                                             // -> end of recursion 
  	   return;
     } else {													
  	   recursiveCreateFolderSet(parent,attributes,description);
Index: src/CondFolderMgr.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondFolderMgr.h,v
retrieving revision 1.4
diff -p -r1.4 CondFolderMgr.h
*** src/CondFolderMgr.h	11 May 2004 17:12:35 -0000	1.4
--- src/CondFolderMgr.h	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  #include "ConditionsDB/ICondDBBasicFolderMgr.h"
  #include "Debug.h"
  
+ namespace cool {
+ 
  class CondDBInterface;
  
  /**
*************** private:
*** 99,103 ****
--- 101,107 ----
   
  };
  
+ }
+ 
  #endif
  
Index: src/CondFolderSet.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondFolderSet.cpp,v
retrieving revision 1.2
diff -p -r1.2 CondFolderSet.cpp
*** src/CondFolderSet.cpp	30 Jan 2004 11:26:35 -0000	1.2
--- src/CondFolderSet.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 1,6 ****
--- 1,8 ----
  #include "CondFolderSet.h"
  #include "CondFolderMgr.h"
  
+ using namespace cool;
+ 
  // Constructor
  CondFolderSet::CondFolderSet(const CondFolderMgr* mgr)
  {
Index: src/CondFolderSet.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/CondFolderSet.h,v
retrieving revision 1.1
diff -p -r1.1 CondFolderSet.h
*** src/CondFolderSet.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/CondFolderSet.h	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  #include "ConditionsDB/ICondDBFolder.h"
  #include "Debug.h"
  
+ namespace cool {
+ 
  class CondFolderMgr;
  
  /**
*************** private:
*** 52,55 ****
--- 54,59 ----
  
  };
  
+ }
+ 
  #endif  // CONDFOLDERSET_HH
Index: src/Debug.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/Debug.h,v
retrieving revision 1.4
diff -p -r1.4 Debug.h
*** src/Debug.h	8 Apr 2004 14:20:52 -0000	1.4
--- src/Debug.h	8 Dec 2004 17:37:46 -0000
*************** removeROOT(const string& pathName ) {
*** 141,146 ****
    else return string( pathName.begin()+5, pathName.end() );
  }
  
- 
  #endif /* Debug_h */
  
--- 141,145 ----
Index: src/IntegerConversion.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/Attic/IntegerConversion.h,v
retrieving revision 1.1
diff -p -r1.1 IntegerConversion.h
*** src/IntegerConversion.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/IntegerConversion.h	8 Dec 2004 17:37:46 -0000
***************
*** 20,25 ****
--- 20,27 ----
  #pragma interface 
  #endif
  
+ namespace cool {
+ 
  template <class Integer> class IntegerConversion {
  
  public:
*************** template <class Integer> Integer Unsigne
*** 129,131 ****
--- 131,134 ----
    } 
  }
  
+ }
Index: src/SimpleTime.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/Attic/SimpleTime.cpp,v
retrieving revision 1.1
diff -p -r1.1 SimpleTime.cpp
*** src/SimpleTime.cpp	1 Dec 2003 13:49:41 -0000	1.1
--- src/SimpleTime.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 4,9 ****
--- 4,11 ----
  
  #include <time.h>
  
+ using namespace cool;
+ 
  #define DEBUG
  
  //-ap these give warnings as enums, so we simply move them here ...
Index: src/SimpleTimeDuration.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/Attic/SimpleTimeDuration.cpp,v
retrieving revision 1.1
diff -p -r1.1 SimpleTimeDuration.cpp
*** src/SimpleTimeDuration.cpp	1 Dec 2003 13:49:41 -0000	1.1
--- src/SimpleTimeDuration.cpp	8 Dec 2004 17:37:46 -0000
***************
*** 3,9 ****
  #include <math.h>
  #include <limits.h>
  
- 
  // DinoFM: use ceil() rather than rint()
  #ifdef __i386__
  //-ap this seems not to be defined everywhere !??!
--- 3,8 ----
Index: src/SimpleTimeInterval.h
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/src/Attic/SimpleTimeInterval.h,v
retrieving revision 1.1
diff -p -r1.1 SimpleTimeInterval.h
*** src/SimpleTimeInterval.h	1 Dec 2003 13:49:41 -0000	1.1
--- src/SimpleTimeInterval.h	8 Dec 2004 17:37:46 -0000
*************** class SimpleTimeInterval {
*** 50,53 ****
--- 50,54 ----
    SimpleTime startPoint;
    SimpleTime endPoint;
  };
+ 
  #endif
Index: tests/ComprehensiveTest/comprehensiveTest.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/tests/ComprehensiveTest/comprehensiveTest.cpp,v
retrieving revision 1.7
diff -p -r1.7 comprehensiveTest.cpp
*** tests/ComprehensiveTest/comprehensiveTest.cpp	12 May 2004 14:39:33 -0000	1.7
--- tests/ComprehensiveTest/comprehensiveTest.cpp	8 Dec 2004 17:37:46 -0000
*************** using namespace std;
*** 25,30 ****
--- 25,32 ----
  #include <ctype.h>
  #include <iostream>
  
+ using namespace cool;
+ 
  void printObj(ICondDBObject* condDBobj)
  {
    string description;
Index: tests/CreateFolders/createFolders.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/tests/CreateFolders/createFolders.cpp,v
retrieving revision 1.5
diff -p -r1.5 createFolders.cpp
*** tests/CreateFolders/createFolders.cpp	12 May 2004 14:39:33 -0000	1.5
--- tests/CreateFolders/createFolders.cpp	8 Dec 2004 17:37:46 -0000
*************** using namespace std;
*** 15,20 ****
--- 15,22 ----
  #include <ctype.h>
  #include <iostream>
  
+ using namespace cool;
+ 
  int main ( int argc, char* argv[] )
  {
    string folder = "/cal/temp";
Index: tests/ReadData/readData.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/tests/ReadData/readData.cpp,v
retrieving revision 1.6
diff -p -r1.6 readData.cpp
*** tests/ReadData/readData.cpp	12 May 2004 14:39:33 -0000	1.6
--- tests/ReadData/readData.cpp	8 Dec 2004 17:37:46 -0000
*************** using namespace std;
*** 15,20 ****
--- 15,22 ----
  #include <ctype.h>
  #include <iostream>
  
+ using namespace cool;
+ 
  int main ( int argc, char* argv[] )
  {
    string folder = "/cal/temp";
Index: tests/ReadVector/readVector.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/tests/ReadVector/readVector.cpp,v
retrieving revision 1.4
diff -p -r1.4 readVector.cpp
*** tests/ReadVector/readVector.cpp	12 May 2004 14:39:33 -0000	1.4
--- tests/ReadVector/readVector.cpp	8 Dec 2004 17:37:46 -0000
*************** using namespace std;
*** 16,21 ****
--- 16,23 ----
  #include <ctype.h>
  #include <iostream>
  
+ using namespace cool;
+ 
  int main ( int argc, char* argv[] )
  {
    string folder = "/cal/temp";
Index: tests/StoreData/storeData.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/tests/StoreData/storeData.cpp,v
retrieving revision 1.6
diff -p -r1.6 storeData.cpp
*** tests/StoreData/storeData.cpp	22 Jul 2004 07:34:34 -0000	1.6
--- tests/StoreData/storeData.cpp	8 Dec 2004 17:37:46 -0000
*************** using namespace std;
*** 16,21 ****
--- 16,23 ----
  #include <ctype.h>
  #include <iostream>
  
+ using namespace cool;
+ 
  int main ( int argc, char* argv[] )
  {
    string folder = "/cal/temp";
Index: tests/StoreVector/storeVector.cpp
===================================================================
RCS file: /cvs/conditionsdb/conddb/CondDBOracle/tests/StoreVector/storeVector.cpp,v
retrieving revision 1.4
diff -p -r1.4 storeVector.cpp
*** tests/StoreVector/storeVector.cpp	12 May 2004 14:39:33 -0000	1.4
--- tests/StoreVector/storeVector.cpp	8 Dec 2004 17:37:46 -0000
*************** using namespace std;
*** 17,22 ****
--- 17,24 ----
  #include <ctype.h>
  #include <iostream>
  
+ using namespace cool;
+ 
  int main( int argc, char* argv[] )
  {
    string folder = "/cal/temp";
