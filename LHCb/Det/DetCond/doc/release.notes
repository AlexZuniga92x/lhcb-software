# $Id: release.notes,v 1.8 2001-11-30 09:30:38 andreav Exp $
Package Det/DetCond
Package manager : Andrea Valassi 

!20011130 - Andrea Valassi
- Modified version of DetDataSvc in GaudiSvc committed to CVS 
-> Contains main features of ConditionDataSvc and ConditionsDBDataSvc
-> Remove ConditionDataSvc and ConditionsDBDataSvc from this package

!20011129 - Andrea Valassi
- Remove the IConditionsDBDataSvc special interface
-> ConditionsDBDataSvc now does little more than ConditionDataSvc
- Implement a dummy IIncidentListener interface in ConditionDataSvc
- Redefine ConditionsDBAddress_undefinedClassID = CLID_NULL (it will disappear)

!20011128 - Andrea Valassi
- Move the global tag from the ConditionsDBDataSvc to the ConditionsDBCnvSvc
-> use IAddressCreator interface of CnvSvc to create addresses with global tag
   > "DEFAULT" becomes a reserved word to indicate the global tag
-> remove method setGlobalTag (the tag can only be set in the job options)

!20011127 - Andrea Valassi
- A few more changes before including my detector data service in GaudiSvc
-> the event time is not passed in an address from the DataSvc to the CnvSvc
   > remove IConditionAddress
   > ConditionsDBCnvSvc now reads the event time from the DetDataSvc
   > ConditionDataSvc::updateObject now just checks validity before delegating
-> move interface IDetDataSvc (formerly IConditionDataSvc) to GaudiKernel 
   > needed to retrieve the event time within the ConditionsDBCnvSvc
   > the setEventTime method is temporary (eventually: use the IncidentService)
-> store ConditionsDBAddress private data as GenericAddress private data

!20011126 - Andrea Valassi
- A few changes before including my data service in GaudiSvc.
-> move ConditionData from DetCond/src/Lib to DetCondExample
   > only DataObjects are manipulated, with dynamic casts to IValidity
   > no Lib anymore in DetCond/src
-> manipulate ITime and TimePoint objects rather than ITime pointers
   > add bool method to check if the event time is defined in ConditionDataSvc

!20011123 - Andrea Valassi (v2)
- Upgrade to Gaudi v9
-> addresses now inherit from GenericAddress (which has been simplified a lot)
-> there are no address factories any more
-> adapt to changes in RegistryEntry (which now implements IRegistry)
-> add dummy methods fillObjRefs and updateObjRefs in ConditionsDBCnvSvc
-> notify (by flag "true") ServiceLocator to create services not existing yet

!20010914 - Andrea Valassi (v1)
- New package