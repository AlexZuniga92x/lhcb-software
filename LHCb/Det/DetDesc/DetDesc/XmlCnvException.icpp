#ifndef    DETDESC_XMLCNVEXCEPTION_ICPP
#define    DETDESC_XMLCNVEXCEPTION_ICPP 1 
/// detdesc 
#include "DetDesc/XmlCnvException.h"
///

///////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::XmlCnvException( const std::string& message , 
                                         const StatusCode & sc      )
  : GaudiException( message , "*XmlCnvException*" , sc )
{};
///////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::XmlCnvException( const std::string    & message ,
                                         const GaudiException & ge      ,
                                         const StatusCode     & sc      )
  : GaudiException( message , "*XmlCnvException*" , sc , ge      )
{};
////////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::XmlCnvException( const XmlCnvException& right )
  : GaudiException( right )
{};
///////////////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::~XmlCnvException() throw() {}; 
///////////////////////////////////////////////////////////////////////////////////////////////////
inline const char*       XmlCnvException::getMessage() const { return message().c_str() ; }
///////////////////////////////////////////////////////////////////////////////////////////////////
inline const char*       XmlCnvException::getType   () const { return tag().c_str()     ; } 
///////////////////////////////////////////////////////////////////////////////////////////////////
inline const StatusCode& XmlCnvException::status    () const { return code()            ; } 
///////////////////////////////////////////////////////////////////////////////////////////////////
inline GaudiException*   XmlCnvException::clone     () const { return new XmlCnvException(*this);} 
///////////////////////////////////////////////////////////////////////////////////////////////////

#endif  // DETDESC_XMLCNVEXCEPTION_ICPP
