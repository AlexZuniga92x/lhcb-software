#ifndef         DETDESC_SOLIDSPHERE_ICPP
#define         DETDESC_SOLIDSPHERE_ICPP 1 
/// GaudiKernel
#include "GaudiKernel/MsgStream.h"
/// DetDesc
#include "DetDesc/SolidSphere.h"
///

//////////////////////////////////////////////////////////////////////////////////////////
inline MsgStream&    operator<<( MsgStream&    os , const SolidSphere& box )          
{ return  box.printOut( os ); }
//////////////////////////////////////////////////////////////////////////////////////////
inline MsgStream&    operator<<( MsgStream&    os , const SolidSphere* box )           
{ return box  ? (os<<*box) : (os<<" SolidSphere* points to NULL!"<<endreq) ; }
//////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////
inline   bool  SolidSphere::isInside( const HepPoint3D & point) const
{
  //
  double r2 = point.mag2();
  //
  if ( r2 > outerRadius () * outerRadius ()       ) { return false; }
  if ( r2 < insideRadius() * insideRadius()       ) { return false; }
  //
  double phi = point.phi();
  if( phi < 0 ){ phi+=360.0*degree; }
  //
  if( phi < startPhiAngle()                       ) { return false; } 
  if( phi > startPhiAngle() + deltaPhiAngle()     ) { return false; }
  //
  double theta = point.theta();
  //
  if( theta < startThetaAngle()                   ) { return false; } 
  if( theta > startThetaAngle() + deltaPhiAngle() ) { return false; } 
  //
  return true; 
  //
};
//////////////////////////////////////////////////////////////////////////////////////////
inline const ISolid* SolidSphere::coverTop      () const 
{
  const ISolid* cov = this; 
  while( cov != cov->cover() ){ cov = cov->cover(); } 
  return cov; 
};
/// reset to the initial state //////////////////////////////////////////////////////////
inline const   ISolid* SolidSphere::reset() const
{
  if( 0 != m_sphere_cover ) { delete m_sphere_cover; m_sphere_cover = 0 ;}
  return this;
};
/////////////////////////////////////////////////////////////////////////////////////////


#endif   //     DETDESC_SOLIDSPHERE_ICPP
