Package: GaudiObjDesc
Desccription: This package contains a set of tools used to generate code from the XML description of the data object classes.
Package manager : Stefan Roiser

!20040206 - Stefan
- bugfix: errorReporter attached to Xerces parser was deleted too early

===============================GaudiObjDesc v6r2p2============================
!20040122 - Stefan
- added macros to KeyedDictionary.h and SealDictionary.h in order to allow instantion
  of dictionaries through macros (needed e.g. when dictionary production through GOD
  is not possible because of usage of non GOD compliant containers in Event packages)

===============================GaudiObjDesc v6r2p1============================
!20040107 - Stefan
- bugfix: <import> did not work for associations
- bugfix: GaudiCppExport.xml added information for ITCluster, L1Track2d
          L1Track3d and OTCluster
- new script to produce GaudiCppExport.xml automatically (not used for this version)

===============================GaudiObjDesc v6r2==============================
!20031219 - Stefan
- bugfix: converting XMLCh* to char* when using string with possible replacement

===============================GaudiObjDesc v6r1==============================
!20031217 - Stefan
- <assoc> is now a sub-element of <package> 
- new attribute "from" for element <assoc>
- a new file <packagename>_Associations_dict.cpp will be created containing 
  the initialisations for associations dictionaries for each package

===============================GaudiObjDesc v6r0==============================
!200312 - Stefan
- new element <assoc> to specify associations between event objects
  - attributes "to" for the associated object
               "weight" to specify the type of weight (e.g. int)
               "type" to specify the type of association (either "1D" or "2D")
- new attribte "transient" for <attribute>-element (values "TRUE" or "FALSE")

===============================GaudiObjDesc v6r0==============================

!20031004 - Stefan
- changes to DaDiCppDict to produce output which complies to SEAL dictionaries

!20030701 - Stefan
- changes to bitfields
  - setters of bitfields with length 1 accept bool as argument
  - getters of bitfields with length 1 return bool
  - new sizes for bitfields 'bitfield8', 'bitfield16', 'bitfield32' and 
    'bitfield64'. Old type 'bitfield' is equal 'bitfield32'
  - bitfield-attribute 'startAtOne' removed

===============================GaudiObjDesc v5r2==============================
!20031211 - Stefan
- bugfix: replaced XMLString::release with delete[] for XMLCh[] in some cases

===============================GaudiObjDesc v5r1==============================
!20031126 - Pere Mato
- Changes for Mac OSX (Guy Barrand)

===============================GaudiObjDesc v5r0==============================
!20030430 - Stefan
- changed to new version of Xerces 2.2.0
- fixes of memory-leaks after valgrind-tests

===============================GaudiObjDesc v4r7==============================
!20030115 - Stefan, Pere
- removed SetDTD setup script from requirements
- avoided to define GAUDIOBJDESCROOT when building packages

!20030110 - Stefan
- serialization of enums
- fillStream called also for base-classes
- implementation of templated methods inside class-body (due to vc6 restrictions)

===============================GaudiObjDesc v4r5p1============================
!20021112 - Stefan
- bugfix: corrected the output for 'const' return-values of self-defined methods 

===============================GaudiObjDesc v4r5============================
!20020925 - Stefan
- new database of header-files generated
- meta-information about constructors added to the dictionary-files

===============================GaudiObjDesc v4r4p1============================

!20020910 - Flr
 requirements - use v* in "use" statements

===============================GaudiObjDesc v4r4===============================

!20020619 - Stefan
- introduced new value for 'inout'-attribute of =arg=-element called 'BYVALUE' to be
  able to force the passing of a non-simple argument by value

!20020617 - Stefan
- handling of offsets to abstract-interface-classes
- use friend-classes for investigation of offsets instead of defines
- no dictionary-information for private, protected, pure virtual and friend-functions
- changes to dictionary-fragments to produce the class with the friend-class in the dict-directory

===============================GaudiObjDesc v4r3===============================

!20020514 - Stefan
 - Implementations of friend-functions will be done inside the class-body again, because of link-problems

===============================GaudiObjDesc v4r3===============================

!20020513 - Stefan
 - Added <attribute=- and <relation>-attribute 'serialize' to specify whether to persistify an object
 - Added <attribute>-attribute 'compression' to enable conversion double<->float 
   while serializing to compress the resulting size
 - Added new <bitfield>-element to handle bitpacking
 - friend-functions are now implemented outside the class-body

================v4r2=====================================
! 20020503 Pere Mato
- Small problem on the fragment obj2doth_header that forced the re-creation of 
  all header files each time.
- Some changes in the generation of dictionaries:
  ~ In methods avoid use of static variables for complex types (one one instance available)
  ~ The same for accessor methods
  ~ The return type for relations was not correct in the MetaMethod creation

================v4r1=====================================

! 20020416 Stefan Roiser
 - Added <class>-attribute 'keyedContTypeDef' to force the production of typedefs for KeyedContainers which are inherited 
   indirectly from 'KeyedObject' but cannot be resolved through the xml-file (inheritance from a class defined in another xml-file)
 - Gaudi-type 'longlong' recognized as fundamental-one

================v4r0=====================================
! 20020328 Stefan Roiser
  - changes to produce dictionary-information compliant to the new interface of GaudiIntrospection v4r0

! 20020328 Pere Mato
  - Added ${CONSTITUENT}_GODflags in fragments

! 20020327 Pere Mato
  - Changes needed for Solaris (by Wim.Lavrijsen). Details:
    +++ GaudiObjDesc/src/DaDiCppHeader.cpp
        several const added
    +++ GaudiObjDesc/src/DaDiCppDict.cpp
        several const added

! 20020325 - Stefan Roiser
 - bugfix no reference for arguments which are fundamental types of more then one word (e.g. signed int)

! 20020319 - Stefan Roiser
 - bugfix when using stdVectorTypeDef to create type std::vector<classname*>

==================v3r3p1=================================
! 20020404
 - automatic include of <utility> when using std::pair
 - automatic include of GaudiKernel/StreamBuffer.h for every class
 - bugfix for dict-fragment when processing more than one xml-file

==================v3r3===================================
! 20020403
 - added command-line option '-l <path>' for GODWriteCppDict.exe to define the location of the .h-files

! 20020402
 - branch created 
 - necessary patches from v4r0 applied (const chars for sun-compiler, handling of fundamental types)
 - bugfix when compiling dictionary-information with unary operators
 - bugfix when using virtual selfdefined methods

================v3r2=====================================
! 20020319 - Stefan Roiser
 - introduced new <class>-attribute 'stdVectorTypeDef' for typedef of a std::vector of class-pointer
 - introduced new <class>-attribute 'serializers' to enable/disable writing of serialize-functions
 - bugfix typedefs and enums used in function-implementations outside class now prefixed with 'ClassName::'

! 20020318 - Stefan Roiser
 - applying naming rules for getters with abbreviations also to _dict.cpp-files

! 20020314 - Stefan Roiser
 - bugfix when using methods inside namespaces
 - bugfix declaring public enums before method-definitions

! 20020313 - Stefan Roiser
 - attribute 'array' introduced in <attribute>-element
 - element <method> inside <namespace> introduced
 - bugfix when using forward-declarations <import name='packname/classname' soft='TRUE'/>
 - bugfix no double includes of classes when specified in package- and class-scope
 - attribute noQuote for <location>-element introduced (when concatenating variables)

! 20020227 - Stefan Roiser
 - GaudiObjDesc independent from GaudiKernel
 - added tag 'ignore' to <import>-element for non-inclusion of types
 - new naming-conventions for getters with abbreviations
 - non-const getter for non-simple attributes, 1-M relations and pointers
 - empty initialization of members in standard-constructor when initialization-value is given
 - only one setter for 1-1-relations with SmartRef<Type> as argument 
 - only one addTo- and removeFrom-function for 1-M-relations with SmartRef<Type> as argument

================v3r1=====================================
! 20020214 - Stefan Roiser
 - added <typedef> and <desc> as sub-elements of <namespace>
 - added 'author'-attribute to <namespace>
 - bugfix: Defs of <typedef>s recognized as types which do not have to be included
 - bugfix: classes created through xml-file will be added to 'class-database' ad Event/'ClassName'
 - handling of pointers as simple types
 
================v3r0=====================================
! 20020130 - Stefan Roiser
 - added function to locate the place in the TDS
 - added possibility to make pure virtual functions
 - added 'translator' for unregular plurals

! 20021028 - Stefan Roiser
 - <namespace>-element introduced
 - fragments will now write the output to sub-dir "Event"
 - new 'database' of classes generated from Gaudi v9r0
 - bugfixes applied (writing to public, protected, private; including of unknown classes)
 - typedef for KeyedContainer added if derived from KeyedObject

! 20020118 - Stefan Roiser
 - bugfix applied for better handling of fundamental types
 - <enum>-element introduced
 - attribute 'initList' for special constructors introduced, which will handle initialization
   outside the {-paranthesis

! 20011207 - Stefan Roiser
 - Better formatting standard output streams

! 20011130 - Pere Mato
 - changed generation of "getters" for 1-1 relations to return a pointer instead of SmartRef<> 

! 20011123 - Stefan Roiser
 - changed serializing functions and operator overloading

! 20011105 - Stefan Roiser
 - added serializing functions and operator overloading for serializing objects

! 20011101 - Stefan Roiser
 - relation-attribute 'ratio' renamed to 'multiplicity', possible values '1', 'M', 'm', 'N', 'n'
   fragment for cpp-file production for dictionaries changed, destination is now /dict
   classID-information added to cpp-files for passing it to the dictionary

! 20011029 - Stefan Roiser
 - several changes in order to achieve linux compliance

! 20011019 - Stefan Roiser
 - many small changes: handling of arguments in selfdefined methods, concatenate class descriptions, produce
   at least one empty constructor, handling and errorhandling of class-attribute 'argList'
 
! 20011018 - Stefan Roiser
 - CppWriter generates an entry (classname - packagename/classname) to the 'Headerdatabase' before writing the cpp 

! 20011017 - Stefan Roiser
 - Added production of non-standard constructors, destructors, warning at top of file

! 20011010 - Stefan Roiser
 - Changed production of serializers in .h-files

! 20011009 - Stefan Roiser
 - Many small changes to polish the code generation

! 20011003 - Stefan Roiser, Pere Mato
 - New package

