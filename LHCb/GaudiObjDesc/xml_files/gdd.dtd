<?xml encoding="UTF-8"?>
<!-- ?xml encoding="ISO-8859-1"? -->
<!ELEMENT gdd ((import*, package+)+)>
<!ATTLIST gdd
	version CDATA "1.0"
>
<!ELEMENT import EMPTY>
<!ATTLIST import
	name CDATA #REQUIRED
	std (TRUE | FALSE) "FALSE"
	soft (TRUE | FALSE) "FALSE"
      ignore (TRUE | FALSE) "FALSE"
>
<!ELEMENT package ((import*, class*, namespace*)*)>
<!ATTLIST package
	name CDATA #REQUIRED
>
<!-- ELEMENT class ((class?, .... -->
<!ELEMENT class ((desc?, base?, import?, location?, enum?, typedef?, constructor?, destructor?, method?, attribute?, relation?)*)>
<!ATTLIST class
	name CDATA #REQUIRED
	author CDATA #REQUIRED
	desc CDATA #REQUIRED
	filename CDATA #IMPLIED
	id CDATA #IMPLIED
	location CDATA #IMPLIED
        stdVectorTypeDef (TRUE | FALSE) "FALSE"
	templateVector (TRUE | FALSE) "TRUE"
	templateList (TRUE | FALSE) "TRUE"
        serializers (TRUE | FALSE) "TRUE"
>
<!ELEMENT desc (#PCDATA)>
<!ATTLIST desc
	xml:space (default | preserve) #FIXED "preserve"
>
<!ELEMENT location EMPTY>
<!ATTLIST location
   name CDATA #REQUIRED
   place CDATA #REQUIRED
   noQuote (TRUE | FALSE) "FALSE"
>
<!ELEMENT namespace ((desc?, typedef?, enum?, class?, import?, attribute?, method?)*)>
<!ATTLIST namespace
	name CDATA #REQUIRED
	author CDATA #IMPLIED
	desc CDATA #REQUIRED
>
<!ELEMENT base EMPTY>
<!ATTLIST base
	name CDATA #REQUIRED
	virtual (TRUE | FALSE) "FALSE"
	access (PUBLIC | PROTECTED | PRIVATE) "PUBLIC"
>
<!ELEMENT enum EMPTY>
<!ATTLIST enum
	name CDATA #REQUIRED
	desc CDATA #REQUIRED
	value CDATA #REQUIRED
	access (PUBLIC | PROTECTED | PRIVATE) "PRIVATE"
>
<!ELEMENT typedef EMPTY>
<!ATTLIST typedef 
  desc CDATA #REQUIRED
  type CDATA #REQUIRED
  def CDATA #REQUIRED
  access (PUBLIC | PROTECTED | PRIVATE) "PRIVATE"
>
<!ELEMENT constructor (arg*, code?, arg*)>
<!ATTLIST constructor
	desc CDATA #REQUIRED
	argList CDATA #IMPLIED
	argInOut CDATA #IMPLIED
	initList CDATA #IMPLIED
>
<!ELEMENT destructor (arg*, code?, arg*)>
<!ATTLIST destructor
	desc CDATA #REQUIRED
	argList CDATA #IMPLIED
	argInOut CDATA #IMPLIED
>
<!ELEMENT method ((arg*, return?, arg*, code?, arg*) | (arg*, code?, arg*, return?, arg*))>
<!ATTLIST method
	name CDATA #REQUIRED
	desc CDATA #REQUIRED
	access (PUBLIC | PROTECTED | PRIVATE) "PUBLIC"
	const (TRUE | FALSE) "FALSE"
	virtual (TRUE | FALSE | PURE) "FALSE"
	static (TRUE | FALSE) "FALSE"
	inline (TRUE | FALSE) "FALSE"
	friend (TRUE | FALSE) "FALSE"
	type CDATA "void"
	argList CDATA #IMPLIED
	argInOut CDATA #IMPLIED
>
<!ELEMENT arg EMPTY>
<!ATTLIST arg
	type CDATA #REQUIRED
	name CDATA #IMPLIED
	const (TRUE | FALSE) "FALSE"
	inout (INPUT | INOUT | BOTH) "INPUT"
>
<!ELEMENT return EMPTY>
<!ATTLIST return
	type CDATA #REQUIRED
	const (TRUE | FALSE) "FALSE"
>
<!ELEMENT code (#PCDATA)>
<!ATTLIST code
	xml:space (default | preserve) #FIXED "preserve"
>
<!ELEMENT attribute EMPTY>
<!ATTLIST attribute
	type CDATA #REQUIRED
	name CDATA #REQUIRED
	desc CDATA #REQUIRED
	init CDATA #IMPLIED
	array CDATA "FALSE"
	access (PUBLIC | PROTECTED | PRIVATE) "PRIVATE"
	setMeth (TRUE | FALSE) "TRUE"
	getMeth (TRUE | FALSE) "TRUE"
>
<!ELEMENT relation EMPTY>
<!ATTLIST relation
	type CDATA #REQUIRED
	name CDATA #REQUIRED
	desc CDATA #REQUIRED
	access (PUBLIC | PROTECTED | PRIVATE) "PRIVATE"
	multiplicity (1 | N | n | M | m) "1"
	setMeth (TRUE | FALSE) "TRUE"
	getMeth (TRUE | FALSE) "TRUE"
	addMeth (TRUE | FALSE) "TRUE"
	remMeth (TRUE | FALSE) "TRUE"
	clrMeth (TRUE | FALSE) "TRUE"
>
