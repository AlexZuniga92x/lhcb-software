CMT_tag=$(tag)
CMTROOT=/home/lhcb/CMT/v1r16p20040901
CMT_root=/home/lhcb/CMT/v1r16p20040901
CMTVERSION=v1r16p20040901
CMTrelease=15
cmt_hardware_query_command=uname -m
cmt_hardware=`$(cmt_hardware_query_command)`
cmt_system_version_query_command=${CMTROOT}/mgr/cmt_linux_version.sh | ${CMTROOT}/mgr/cmt_filter_version.sh
cmt_system_version=`$(cmt_system_version_query_command)`
cmt_compiler_version_query_command=${CMTROOT}/mgr/cmt_gcc_version.sh | ${CMTROOT}/mgr/cmt_filter3_version.sh
cmt_compiler_version=`$(cmt_compiler_version_query_command)`
PATH=/home/lhcb/CMT/v1r16p20040901/${CMTBIN}::/usr//bin:/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin/:/usr/games:/home/atsareg/bin:/home/atsareg/scripts:/usr/java/j2re1.4.2_03/bin
CLASSPATH=/home/lhcb/CMT/v1r16p20040901/java
debug_option=-g
cc=gcc
pp_cflags=-Di586
ccomp=$(cc) -c $(includes) $(cdebugflags) $(cflags) $(pp_cflags)
clink=$(cc) $(clinkflags) $(cdebugflags)
vsCONFIG=Release
vsOptimize=2
ppcmd=-I
preproc=c++ -MD -c 
cpp=g++
cppflags= -Df2cFortran -fPIC -shared -D_GNU_SOURCE -Dlinux -Dunix -pipe -ansi -Wall -W -pthread 
pp_cppflags=-D_GNU_SOURCE
cppcomp=$(cpp) -c $(includes) $(cppdebugflags) $(cppflags) $(pp_cppflags)
cpplinkflags=-Wl,-Bdynamic 
cpplink=$(cpp) $(cpplinkflags)
for=g77
fflags=-O -fno-automatic -fdollar-ok -ff90 -w
fcomp=$(for) -c $(fincludes) $(fdebugflags) $(fflags) $(pp_fflags)
flink=$(for) $(flinkflags)
javacomp=javac -classpath $(src):$(CLASSPATH) 
javacopy=cp
jar=jar
X11_cflags=-I/usr/include
Xm_cflags=-I/usr/include
X_linkopts=-L/usr/X11R6/lib -lXm -lXt -lXext -lX11 -lm
lex=flex $(lexflags)
yaccflags= -l -d 
yacc=yacc $(yaccflags)
ar=ar r
ranlib=ranlib
make_shlib=${CMTROOT}/mgr/cmt_make_shlib_common.sh extract
shlibsuffix=so
shlibbuilder=g++ $(cmt_installarea_linkopts) 
shlibflags=-shared
symlink=/bin/ln -fs 
symunlink=/bin/rm -f 
build_library_links=$(cmtexe) build library_links -quiet -tag=$(tags)
remove_library_links=$(cmtexe) remove library_links -quiet -tag=$(tags)
cmtexe=${CMTROOT}/${CMTBIN}/cmt.exe
build_prototype=$(cmtexe) build prototype
build_dependencies=$(cmtexe) -quiet -tag=$(tags) build dependencies
build_triggers=$(cmtexe) build triggers
implied_library_prefix=-l
SHELL=/bin/sh
src=../src/
doc=../doc/
inc=../src/
mgr=../cmt/
application_suffix=.exe
library_prefix=lib
lock_command=chmod -R a-w ../*
unlock_command=chmod -R g+w ../*
MAKEFLAGS= --no-print-directory 
gmake_hosts=lx1 rsplus lxtest as7 dxplus ax7 hp2 aleph hp1 hpplus papou1-fe atlas
make_hosts=virgo-control1 rio0a vmpc38a
everywhere=hosts
GUID_all={8BC9CEB8-8B4A-11D0-8D11-00A0C91BC955}
package_GUID={8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}
install_command=cp -R 
uninstall_command=/bin/rm -f 
cmt_installarea_command=ln -s 
cmt_uninstallarea_command=/bin/rm -f 
cmt_install_area_command=$(cmt_installarea_command)
cmt_uninstall_area_command=$(cmt_uninstallarea_command)
cmt_install_action=$(CMTROOT)/mgr/cmt_install_action.sh
cmt_installdir_action=$(CMTROOT)/mgr/cmt_installdir_action.sh
cmt_uninstall_action=$(CMTROOT)/mgr/cmt_uninstall_action.sh
cmt_uninstalldir_action=$(CMTROOT)/mgr/cmt_uninstalldir_action.sh
mkdir=mkdir
cmt_installarea_prefix=InstallArea
CMT_PATH_remove_regexp=/[^/]*/
CMT_PATH_remove_share_regexp=/share/
NEWCMTCONFIG=i686-slc101586-gcc341
ProcessorKernel_tag=$(tag)
PROCESSORKERNELROOT=/home/lhcb/L0/ProcessorKernel/v1r0
ProcessorKernel_root=/home/lhcb/L0/ProcessorKernel/v1r0
PROCESSORKERNELVERSION=v1r0
Boost_tag=$(tag)
BOOSTROOT=/home/lhcb/LCG_Interfaces/Boost/v1
Boost_root=/home/lhcb/LCG_Interfaces/Boost/v1
BOOSTVERSION=v1
Boost_native_version=1.31.0
Boost_home=/usr/local
Boost_linkopts=-L$(Boost_home)/lib 
Boost_linkopts_python= -lboost_python-gcc 
Boost_linkopts_filesystem= -lboost_filesystem-gcc 
Boost_linkopts_regex= -lboost_regex-gcc 
LD_LIBRARY_PATH=/usr/local/lib
L0mConf_tag=$(tag)
L0MCONFROOT=/home/lhcb/L0/L0mConf/v2r2p3
L0mConf_root=/home/lhcb/L0/L0mConf/v2r2p3
L0MCONFVERSION=v2r2p3
MuonKernelStandalone_tag=$(tag)
MUONKERNELSTANDALONEROOT=/home/lhcb/Muon/MuonKernelStandalone/v2r6
MuonKernelStandalone_root=/home/lhcb/Muon/MuonKernelStandalone/v2r6
MUONKERNELSTANDALONEVERSION=v2r6
GaudiPolicy_tag=$(tag)
GAUDIPOLICYROOT=/home/lhcb/GaudiPolicy/v5r19
GaudiPolicy_root=/home/lhcb/GaudiPolicy/v5r19
GAUDIPOLICYVERSION=v5r19
dq="
BINDIR=Linux-i686
vsDebug=2
cppdebugflags_s=-g
cppoptimized_s=-O2
cppprofiled_s=-pg
cdebugflags_s=-g
fdebugflags_s=-g
foptimized_s=-O2
fprofiled_s=-pg
makeLinkMap=-Wl,-Map,Linux.map
componentshr_linkopts=-fPIC -Wl,-s -ldl 
libraryshr_linkopts=-fPIC -ldl 
application_linkopts=-Wl,--export-dynamic 
MuonKernelStandalone_libraries= MuonKernelStandalone 
MuonKernelStandalone_linkopts=-L$(MuonKernelStandaloneDir) -lMuonKernelStandalone 
MuonKernelStandalone_stamps=${MUONKERNELSTANDALONEROOT}/${BINDIR}/MuonKernelStandalone.stamp 
XercesC_tag=$(tag)
XERCESCROOT=/home/lhcb/LCG_Interfaces/XercesC
XercesC_root=/home/lhcb/LCG_Interfaces/XercesC
XERCESCVERSION=v*
XercesC_native_version=2.3.0
XercesC_home=/usr/local
XercesC_linkopts=-L$(XercesC_home)/lib -lxerces-c -lpthread
XercesC_warnings=-w -Wno-unused
XercesC_export_paths= $(XercesC_home)/include $(XercesC_home)/lib
L0mConf_libraries= L0mConfLib 
L0mConf_linkopts=-L$(L0mConfDir) -lL0mConfLib 
L0mConf_stamps=${L0MCONFROOT}/${BINDIR}/L0mConfLib.stamp 
L0mConf_cppflags=-fpermissive
ProcessorKernel_libraries= ProcessorKernel 
ProcessorKernel_linkopts=-L$(ProcessorKernelDir) -lProcessorKernel 
ProcessorKernel_shlibflags=$(libraryshr_linkopts) $(use_linkopts)
use_linkopts= $(cmt_installarea_linkopts)     $(L0mConf_linkopts)  $(MuonKernelStandalone_linkopts)  $(Boost_linkopts)  $(GaudiPolicy_linkopts)  $(XercesC_linkopts) 
ProcessorKernel_stamps=${PROCESSORKERNELROOT}/${BINDIR}/ProcessorKernel.stamp 
GaudiPolicyDir=${GAUDIPOLICYROOT}/${BINDIR}
MuonKernelStandaloneDir=${MUONKERNELSTANDALONEROOT}/${BINDIR}
L0mConfDir=${L0MCONFROOT}/${BINDIR}
ProcessorKernelDir=${PROCESSORKERNELROOT}/${BINDIR}
tag=Linux-i686
package=ProcessorKernel
version=v1r0
PACKAGE_ROOT=$(PROCESSORKERNELROOT)
srcdir=../src
bin=../$(ProcessorKernel_tag)/
javabin=../classes/
mgrdir=cmt
project=CMT
use_requirements=requirements $(CMTROOT)/mgr/requirements $(L0MCONFROOT)/cmt/requirements $(MUONKERNELSTANDALONEROOT)/cmt/requirements $(BOOSTROOT)/cmt/requirements $(GAUDIPOLICYROOT)/cmt/requirements $(XERCESCROOT)/cmt/requirements 
use_includes= $(ppcmd)"$(L0MCONFROOT)" $(ppcmd)"$(MUONKERNELSTANDALONEROOT)" $(ppcmd)"$(Boost_home)/include/boost-1_31" $(ppcmd)"$(XercesC_home)/include" 
use_fincludes= $(use_includes)
use_stamps= $(ProcessorKernel_stamps)  $(L0mConf_stamps)  $(MuonKernelStandalone_stamps)  $(Boost_stamps)  $(GaudiPolicy_stamps)  $(XercesC_stamps) 
use_cflags=  $(ProcessorKernel_cflags)  $(L0mConf_cflags)  $(MuonKernelStandalone_cflags)  $(Boost_cflags)  $(GaudiPolicy_cflags)  $(XercesC_cflags) 
use_pp_cflags=  $(ProcessorKernel_pp_cflags)  $(L0mConf_pp_cflags)  $(MuonKernelStandalone_pp_cflags)  $(Boost_pp_cflags)  $(GaudiPolicy_pp_cflags)  $(XercesC_pp_cflags) 
use_cppflags=  $(ProcessorKernel_cppflags)  $(L0mConf_cppflags)  $(MuonKernelStandalone_cppflags)  $(Boost_cppflags)  $(GaudiPolicy_cppflags)  $(XercesC_cppflags) 
use_pp_cppflags=  $(ProcessorKernel_pp_cppflags)  $(L0mConf_pp_cppflags)  $(MuonKernelStandalone_pp_cppflags)  $(Boost_pp_cppflags)  $(GaudiPolicy_pp_cppflags)  $(XercesC_pp_cppflags) 
use_fflags=  $(ProcessorKernel_fflags)  $(L0mConf_fflags)  $(MuonKernelStandalone_fflags)  $(Boost_fflags)  $(GaudiPolicy_fflags)  $(XercesC_fflags) 
use_pp_fflags=  $(ProcessorKernel_pp_fflags)  $(L0mConf_pp_fflags)  $(MuonKernelStandalone_pp_fflags)  $(Boost_pp_fflags)  $(GaudiPolicy_pp_fflags)  $(XercesC_pp_fflags) 
use_libraries= $(L0mConf_libraries)  $(MuonKernelStandalone_libraries)  $(Boost_libraries)  $(GaudiPolicy_libraries)  $(XercesC_libraries) 
includes= $(ppcmd)"$(PROCESSORKERNELROOT)" $(use_includes)
fincludes= $(includes)
ProcessorKernel_use_linkopts=  $(ProcessorKernel_linkopts)  $(L0mConf_linkopts)  $(MuonKernelStandalone_linkopts)  $(Boost_linkopts)  $(GaudiPolicy_linkopts)  $(XercesC_linkopts) 
constituents= ProcessorKernel 
all_constituents= $(constituents)
constituentsclean= ProcessorKernelclean 
all_constituentsclean= $(constituentsclean)
cmt_installarea_paths=$(cmt_installarea_prefix)/$(tag)/bin $(cmt_installarea_prefix)/$(tag)/lib $(cmt_installarea_prefix)/share/lib $(cmt_installarea_prefix)/share/bin
