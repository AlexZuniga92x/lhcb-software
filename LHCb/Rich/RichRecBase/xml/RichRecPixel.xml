<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">
<gdd>
<package name="RichRecBase">

<!-- **************************************************************************
  * $Id: RichRecPixel.xml,v 1.7 2005-03-04 16:52:56 cattanem Exp $
  *****************************************************************************
  * XML-description of RichRecPixel class                                     *
  * author: Chris Jones   Christopher.Rob.Jones@cern.ch                       *
  * date:   2004-06-23                                                        *
  ************************************************************************* -->


<class 
        name             = "RichRecPixel" 
        author           = "Chris Jones   (Christopher.Rob.Jones@cern.ch)" 
        desc             = "Rich reconstruction working pixel object" 
        id               = "12422" 
        keyedContTypeDef = "TRUE" 
        location         = "Rec/Rich/RecoEvent/Pixels" 
        stdVectorTypeDef = "TRUE" >

        <base name="KeyedObject&lt;int&gt;"/>
        &KeyedObject;
            
        <import name="RichRecBase/RichRecPixelParentType"/>
        <import name="Kernel/RichDetectorType"/>

        <import ignore="TRUE" name="Rich"/>
        <import ignore="TRUE" name="PixelParent"/>
        <import ignore="TRUE" name="Type"/>
        <import ignore="TRUE" name="DetectorType"/>
        <import name="Kernel/RichSmartID"/>
            
	<typedef 
		desc   = "type for internal storage for floating point data" 
		access = "PUBLIC" 
		def    = "FloatType" 
		type   = "float"
	/>

        <constructor 
                desc     = "Constructor with arguments" 
                initList = "m_smartID(smartID), m_globalPosition(gPos), m_localPosition(lPos), m_currentBackground(0), m_parentType(parentType), m_richRecTracks(), m_richRecPhotons(), m_parentPixel(parent)">
                <arg inout="BYVALUE"  const="TRUE" name="smartID"    type="RichSmartID"               />
                <arg                  const="TRUE" name="gPos"       type="HepPoint3D"                />
                <arg                  const="TRUE" name="lPos"       type="HepPoint3D"                />
                <arg inout="BYVALUE"  const="TRUE" name="parentType" type="Rich::PixelParent::Type"   />
                <arg                  const="TRUE" name="parent"     type="ContainedObject*"          />
                <code/>
        </constructor>

        <constructor 
                desc     = "Copy Constructor. Creates a new RichRecPixel with the same physics content" 
                initList = "KeyedObject&lt;int&gt;(), m_smartID(pixel.smartID()), m_globalPosition(pixel.globalPosition()), m_localPosition(pixel.localPosition()), m_currentBackground(pixel.currentBackground()), m_parentType(pixel.parentType()), m_richRecTracks(pixel.richRecTracks()), m_richRecPhotons(pixel.richRecPhotons()), m_parentPixel(pixel.parentPixel())">
                <arg  const="TRUE" name="pixel" type="RichRecPixel" />
                <code/>
        </constructor>
            
        <method 
                const = "TRUE" 
                desc  = "Returns the RICH Detector for this pixel" 
                name  = "detector" 
                type  = "Rich::DetectorType">
                <code>
                        return m_smartID.rich();
                </code>
        </method>
            
        <method 
                const = "TRUE" 
                desc  = "Returns unique RichSmartID identifier for the HPD this pixel is in" 
                name  = "pd" 
                type  = "RichSmartID" >
                <code>
                        return m_smartID.pdID();
                </code>
        </method>
            
        <method 
                const = "TRUE" 
                desc  = "Returns unique RichSmartID identifier for the HPD panel this pixel is in" 
                name  = "panel" 
                type  = "RichSmartID" >
                <code>
                        return m_smartID.panelID();
                </code>
        </method>
            
        <attribute 
                desc = "RichSmartID" 
                init = "0" 
                name = "smartID" 
                type = "RichSmartID"
        />
            
        <attribute 
                desc = "Position in global coordinates" 
                name = "globalPosition" 
                init = "0,0,0" 
                type = "HepPoint3D"
        />
            
        <attribute 
                desc = "Position in local coordinates" 
                init = "0,0,0" 
                name = "localPosition" 
                type = "HepPoint3D"
        />
            
        <attribute 
                desc = "Current value for a working estimate of the background in this pixel" 
                init = "0" 
                name = "currentBackground" 
                type = "RichRecPixel::FloatType"
        />
            
        <attribute 
                desc = "Enumeration to Parent type" 
                init = "Rich::PixelParent::Unknown" 
                name = "parentType" 
                type = "Rich::PixelParent::Type"
        />
            
        <relation 
                desc = "Parent Object this pixel was produced from" 
                name = "parentPixel" 
                type = "ContainedObject"
        />
            
        <typedef 
                access = "PUBLIC" 
                def    = "Tracks" 
                desc   = "Container type for RichRecTracks" 
                type   = "std::vector&lt;RichRecTrack*&gt;"
        />
            
        <attribute 
                access = "PRIVATE" 
                desc   = "Associated RichRecTracks with which this pixel has RichRecPhoton candidates" 
                name   = "richRecTracks" serialize="FALSE" 
                type   = "Tracks"
        />
                
        <method 
                desc   = "Add to associated RichRecTracks" 
                inline = "TRUE" 
                name   = "addToRichRecTracks" >
                <arg const="FALSE" name="track" type="RichRecTrack*"/>
                <code>
                        m_richRecTracks.push_back(track);
                </code>
        </method>
            
        <typedef 
                access = "PUBLIC" 
                def    = "Photons" 
                desc   = "Container type for RichRecPhotons" 
                type   = "std::vector&lt;RichRecPhoton*&gt;"
        />
            
        <attribute 
                access    = "PRIVATE" 
                desc      = "Associated RichRecPhotons" 
                name      = "richRecPhotons" 
                serialize = "FALSE" 
                type      = "Photons"
        />
            
        <method 
                desc      = "Add to associated RichRecPhotons" 
                inline    = "TRUE" 
                name      = "addToRichRecPhotons" >
                <arg const="FALSE" name="photon" type="RichRecPhoton*"/>
                <code>
                        m_richRecPhotons.push_back(photon);
                </code>
        </method>

        <relation 
                desc         = "SmartRefVector of RichRecTracks for which this pixel has valid photon associations" 
                multiplicity = "N" 
                name         = "richRecTracksSmartRefs" 
                type         = "RichRecTrack"
        />
            
        <relation 
                desc         = "SmartRefVector to associated RichRecPhotons"
                multiplicity = "N" 
                name         = "richRecPhotonsSmartRefs" 
                type         = "RichRecPhoton"
        />

</class>

</package>
</gdd>
