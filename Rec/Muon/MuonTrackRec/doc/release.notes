!-----------------------------------------------------------------------------
! Package     : Muon/MuonTrackRec
! Responsible : Giovanni Passaleva / Giacomo Graziani
! Purpose     : Standalone Muon track reconstruction (with a recurrent neural network)
!               implementation MuonNNetRecThe is based on a recursive NNet, see: 
!   http://indico.cern.ch/getFile.py/access?subContId=0&contribId=6&resId=1&materialId=slides&confId=26109
!-----------------------------------------------------------------------------

! 20091009 - v1r6 GG
- go back to previous MuonPadRec (new version was not really faster and was breaking 
ordering by station)
- make anyway MuonNNetRec not depending on hits ordering
- convert TrackSpanCut and StationFiringCut to integers
- add FirstComeFirstServed option (default false) to MuonPadRec to choose the first 
  hit and not the most centered in case of multiple hits in same channel in TAE mode

! 20091001 - v1r5
- fix bug in MuonHitDecode

! 20091001 - v1r4
- add possibility to veto logical pads in option file (TileVeto option of MuonPadRec
is array of integers containing keys of pads to be vetoed)

! 20090709 - v1r3
- improve checks for incomplete events in IMuonHitDecode interface

! 2009-05-19 - G. Graziani v1r2
 - be compatible with LHCB v27r0
 - improved time alignment corrections (not bkw compatible!)

! 2009-03-25 - G. Graziani v1r1
 - add one method to IMuonHitDecode for monitoring
 - compile under slc5

! 2009-03-16 - G. Graziani
 - first release of MuonTrackRec, unifying and reorganizing code from packages MuonMonKernel, Cosmics, MuonNNet: 
   * migrate from MuonMonKernel the base classes for muon decoding output
   * add abstract interface for decoding (IMuonHitDecode): default implementation uses the official
	   MuonRawBuffer tool, MuonMonKernel providing a fast alternative for online monitoring
   * add abstract interface for 2d pad reconstruction (IMuonPadRec): implementation migrated from MuonMonKernel
   * more general tool (IMuonTrackRec) for standalone track rec. (MuonNNetRec is the first implementation)
   
