
// Track geometry monitor

// all tracks
RichTkGeom.Members += { "RichTrackGeomMoni/RiRecAllTkGeomMoni" };
// forward tracks
RichTkGeom.Members += { "RichTrackGeomMoni/RiRecFrwdTkGeomMoni" };
RiRecFrwdTkGeomMoni.TrackSelector.TrackAlgs = { "Forward" };
// match tracks
RichTkGeom.Members += { "RichTrackGeomMoni/RiRecMatchTkGeomMoni" };
RiRecMatchTkGeomMoni.TrackSelector.TrackAlgs = { "Match" };
// seed tracks
RichTkGeom.Members += { "RichTrackGeomMoni/RiRecSeedTkGeomMoni" };
RiRecSeedTkGeomMoni.TrackSelector.TrackAlgs = { "Seed" };
// velott tracks
RichTkGeom.Members += { "RichTrackGeomMoni/RiRecVTTTkGeomMoni" };
RiRecVTTTkGeomMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// KsTracks tracks
RichTkGeom.Members += { "RichTrackGeomMoni/RiRecKsTkGeomMoni" };
RiRecKsTkGeomMoni.TrackSelector.TrackAlgs = { "KsTrack" };

// Track resolution monitors
// forward tracks
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecFrwdTkResMoni" };
RiRecFrwdTkResMoni.TrackSelector.TrackAlgs = { "Forward" };
// forward tracks - positive
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecFrwdTkPosResMoni" };
RiRecFrwdTkPosResMoni.TrackSelector.TrackAlgs = { "Forward" };
RiRecFrwdTkPosResMoni.TrackSelector.Charge = 1;
// forward tracks - negative
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecFrwdTkNegResMoni" };
RiRecFrwdTkNegResMoni.TrackSelector.TrackAlgs = { "Forward" };
RiRecFrwdTkNegResMoni.TrackSelector.Charge = -1;
// match tracks
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecMatchTkResMoni" };
RiRecMatchTkResMoni.TrackSelector.TrackAlgs = { "Match" };
// match tracks - positive
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecMatchTkPosResMoni" };
RiRecMatchTkPosResMoni.TrackSelector.TrackAlgs = { "Match" };
RiRecMatchTkPosResMoni.TrackSelector.Charge = 1;
// match tracks - negative
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecMatchTkNegResMoni" };
RiRecMatchTkNegResMoni.TrackSelector.TrackAlgs = { "Match" };
RiRecMatchTkNegResMoni.TrackSelector.Charge = -1;
// seed tracks
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecSeedTkResMoni" };
RiRecSeedTkResMoni.TrackSelector.TrackAlgs = { "Seed" };
// seed tracks - positive
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecSeedTkPosResMoni" };
RiRecSeedTkPosResMoni.TrackSelector.TrackAlgs = { "Seed" };
RiRecSeedTkPosResMoni.TrackSelector.Charge = 1;
// seed tracks - negative
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecSeedTkNegResMoni" };
RiRecSeedTkNegResMoni.TrackSelector.TrackAlgs = { "Seed" };
RiRecSeedTkNegResMoni.TrackSelector.Charge = -1;
// velott tracks
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecVTTTkResMoni" };
RiRecVTTTkResMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// velott tracks - positive
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecVTTTkPosResMoni" };
RiRecVTTTkPosResMoni.TrackSelector.TrackAlgs = { "VeloTT" };
RiRecVTTTkPosResMoni.TrackSelector.Charge = 1;
// velott tracks - negative
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecVTTTkNegResMoni" };
RiRecVTTTkNegResMoni.TrackSelector.TrackAlgs = { "VeloTT" };
RiRecVTTTkNegResMoni.TrackSelector.Charge = -1;
// KsTracks tracks
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecKsTkResMoni" };
RiRecKsTkResMoni.TrackSelector.TrackAlgs = { "KsTrack" };
// KsTracks tracks - positive
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecKsTkPosResMoni" };
RiRecKsTkPosResMoni.TrackSelector.TrackAlgs = { "KsTrack" };
RiRecKsTkPosResMoni.TrackSelector.Charge = 1;
// KsTracks tracks - negative
RichTkRes.Members += { "RichTrackResolutionMoni/RiRecKsTkNegResMoni" };
RiRecKsTkNegResMoni.TrackSelector.TrackAlgs = { "KsTrack" };
RiRecKsTkNegResMoni.TrackSelector.Charge = -1;

// CK res moni
// all tracks
RichCKRes.Members += { "RichCherenkovResMoni/RiRecAllTkCKResMoni" };
// forward tracks - all
RichCKRes.Members += { "RichCherenkovResMoni/RiRecFrwdTkCKResMoni" };
RiRecFrwdTkCKResMoni.TrackSelector.TrackAlgs = { "Forward" };
// forward tracks - positive
RichCKRes.Members += { "RichCherenkovResMoni/RiRecFrwdTkPosCKResMoni" };
RiRecFrwdTkPosCKResMoni.TrackSelector.TrackAlgs = { "Forward" };
RiRecFrwdTkPosCKResMoni.TrackSelector.Charge = 1;
// forward tracks - negative
RichCKRes.Members += { "RichCherenkovResMoni/RiRecFrwdTkNegCKResMoni" };
RiRecFrwdTkNegCKResMoni.TrackSelector.TrackAlgs = { "Forward" };
RiRecFrwdTkNegCKResMoni.TrackSelector.Charge = -1;
// match tracks
RichCKRes.Members += { "RichCherenkovResMoni/RiRecMatchTkCKResMoni" };
RiRecMatchTkCKResMoni.TrackSelector.TrackAlgs = { "Match" };
// match tracks - positive
RichCKRes.Members += { "RichCherenkovResMoni/RiRecMatchTkPosCKResMoni" };
RiRecMatchTkPosCKResMoni.TrackSelector.TrackAlgs = { "Match" };
RiRecMatchTkPosCKResMoni.TrackSelector.Charge = 1;
// match tracks - negative
RichCKRes.Members += { "RichCherenkovResMoni/RiRecMatchTkNegCKResMoni" };
RiRecMatchTkNegCKResMoni.TrackSelector.TrackAlgs = { "Match" };
RiRecMatchTkNegCKResMoni.TrackSelector.Charge = -1;
// seed tracks
RichCKRes.Members += { "RichCherenkovResMoni/RiRecSeedTkCKResMoni" };
RiRecSeedTkCKResMoni.TrackSelector.TrackAlgs = { "Seed" };
// seed tracks - positive
RichCKRes.Members += { "RichCherenkovResMoni/RiRecSeedTkPosCKResMoni" };
RiRecSeedTkPosCKResMoni.TrackSelector.TrackAlgs = { "Seed" };
RiRecSeedTkPosCKResMoni.TrackSelector.Charge = 1;
// seed tracks - positive
RichCKRes.Members += { "RichCherenkovResMoni/RiRecSeedTkNegCKResMoni" };
RiRecSeedTkNegCKResMoni.TrackSelector.TrackAlgs = { "Seed" };
RiRecSeedTkNegCKResMoni.TrackSelector.Charge = -1;
// velott tracks
RichCKRes.Members += { "RichCherenkovResMoni/RiRecVTTTkCKResMoni" };
RiRecVTTTkCKResMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// velott tracks - positive
RichCKRes.Members += { "RichCherenkovResMoni/RiRecVTTTkPosCKResMoni" };
RiRecVTTTkPosCKResMoni.TrackSelector.TrackAlgs = { "VeloTT" };
RiRecVTTTkPosCKResMoni.TrackSelector.Charge = 1;
// velott tracks - negative
RichCKRes.Members += { "RichCherenkovResMoni/RiRecVTTTkNegCKResMoni" };
RiRecVTTTkNegCKResMoni.TrackSelector.TrackAlgs = { "VeloTT" };
RiRecVTTTkNegCKResMoni.TrackSelector.Charge = -1;
// KsTracks tracks
RichCKRes.Members += { "RichCherenkovResMoni/RiRecKsTkCKResMoni" };
RiRecKsTkCKResMoni.TrackSelector.TrackAlgs = { "KsTrack" };

// photon signal monitor
// forward tracks
RichPhotSig.Members += { "RichPhotonSignalMonitor/RiRecPhotSigFrwdTkMoni" };
RiRecPhotSigFrwdTkMoni.TrackSelector.TrackAlgs = { "Forward" };
// match tracks
RichPhotSig.Members += { "RichPhotonSignalMonitor/RiRecPhotSigMatchTkMoni" };
RiRecPhotSigMatchTkMoni.TrackSelector.TrackAlgs = { "Match" };
// seed tracks
RichPhotSig.Members += { "RichPhotonSignalMonitor/RiRecPhotSigSeedTkMoni" };
RiRecPhotSigSeedTkMoni.TrackSelector.TrackAlgs = { "Seed" };
// velott tracks
RichPhotSig.Members += { "RichPhotonSignalMonitor/RiRecPhotSigVTTTkMoni" };
RiRecPhotSigVTTTkMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// Ks tracks
RichPhotSig.Members += { "RichPhotonSignalMonitor/RiRecPhotSigKsTkMoni" };
RiRecPhotSigKsTkMoni.TrackSelector.TrackAlgs = { "KsTrack" };

// Cherenkov angle moni
// forward tracks
RichPhotAng.Members += { "RichCherenkovAngleMonitor/RiRecPhotAngFrwdTkMoni" };
RiRecPhotAngFrwdTkMoni.TrackSelector.TrackAlgs = { "Forward" };
// match tracks
RichPhotAng.Members += { "RichCherenkovAngleMonitor/RiRecPhotAngMatchTkMoni" };
RiRecPhotAngMatchTkMoni.TrackSelector.TrackAlgs = { "Match" };
// seed tracks
RichPhotAng.Members += { "RichCherenkovAngleMonitor/RiRecPhotAngSeedTkMoni" };
RiRecPhotAngSeedTkMoni.TrackSelector.TrackAlgs = { "Seed" };
// velott tracks
RichPhotAng.Members += { "RichCherenkovAngleMonitor/RiRecPhotAngVTTTkMoni" };
RiRecPhotAngVTTTkMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// Ks tracks
RichPhotAng.Members += { "RichCherenkovAngleMonitor/RiRecPhotAngKsTkMoni" };
RiRecPhotAngKsTkMoni.TrackSelector.TrackAlgs = { "KsTrack" };

// Cherenkov geometry moni
// forward tracks
RichPhotGeom.Members += { "RichPhotonGeomMonitor/RiRecPhotGeomFrwdTkMoni" };
RiRecPhotGeomFrwdTkMoni.TrackSelector.TrackAlgs = { "Forward" };
// match tracks
RichPhotGeom.Members += { "RichPhotonGeomMonitor/RiRecPhotGeomMatchTkMoni" };
RiRecPhotGeomMatchTkMoni.TrackSelector.TrackAlgs = { "Match" };
// seed tracks
RichPhotGeom.Members += { "RichPhotonGeomMonitor/RiRecPhotGeomSeedTkMoni" };
RiRecPhotGeomSeedTkMoni.TrackSelector.TrackAlgs = { "Seed" };
// velott tracks
RichPhotGeom.Members += { "RichPhotonGeomMonitor/RiRecPhotGeomVTTTkMoni" };
RiRecPhotGeomVTTTkMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// Ks tracks
RichPhotGeom.Members += { "RichPhotonGeomMonitor/RiRecPhotGeomKsTkMoni" };
RiRecPhotGeomKsTkMoni.TrackSelector.TrackAlgs = { "KsTrack" };

// photon reco eff monitors
// forward tracks
RichPhotEff.Members += { "RichPhotonRecoEffMonitor/RiRecPhotEffFrwdTkMoni" };
RiRecPhotEffFrwdTkMoni.TrackSelector.TrackAlgs = { "Forward" };
// match tracks
RichPhotEff.Members += { "RichPhotonRecoEffMonitor/RiRecPhotEffMatchTkMoni" };
RiRecPhotEffMatchTkMoni.TrackSelector.TrackAlgs = { "Match" };
// seed tracks
RichPhotEff.Members += { "RichPhotonRecoEffMonitor/RiRecPhotEffSeedTkMoni" };
RiRecPhotEffSeedTkMoni.TrackSelector.TrackAlgs = { "Seed" };
// velott tracks
RichPhotEff.Members += { "RichPhotonRecoEffMonitor/RiRecPhotEffVTTTkMoni" };
RiRecPhotEffVTTTkMoni.TrackSelector.TrackAlgs = { "VeloTT" };
// Ks tracks
RichPhotEff.Members += { "RichPhotonRecoEffMonitor/RiRecPhotEffKsTkMoni" };
RiRecPhotEffKsTkMoni.TrackSelector.TrackAlgs = { "KsTrack" };
