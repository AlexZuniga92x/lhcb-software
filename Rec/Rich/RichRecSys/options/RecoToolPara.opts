//=============================================================================================
// Rich Reconstruction Tools
// Configuration to run the offline quality reconstruction on offline tracks
//=============================================================================================

// ============================ Track Creators - New Model ====================================

// RichTrackCreator using full reconstructed information : New track model (Default)
#include "$RICHRECSYSOPTS/tools/RichTracksFromRecoTracks.opts"

// RichTrackCreator using TrStoredTracks but cheating the tracking information by
// using the associated MCRichTrack. In the include file below the cheating can be tuned
// at the level of the tracking algorithm.
//#include "$RICHRECSYSOPTS/tools/RichTracksFromCheatedRecoTracks.opts"

// RichTrackCreator using only MC information
//#include "$RICHRECSYSOPTS/tools/RichTracksFromMCRichTracks.opts"

//---------------------------------------------------------------------------------------------
// Track selector
ToolSvc.Offline.RichToolRegistry.Tools += { "Rich::RichTrackSelector/TrackSelector" };

// ================================== Pixel Creators ==========================================

// Pixel creator using full reconstructed information from RawBuffer (Default)
// Same functionality as the one below, but skips the creation of the RichDigits for speed
// Some MC associations may fail with this option, in which case use the one below
#include "$RICHRECSYSOPTS/tools/RichPixelsFromRawBuffer.opts"

// Pixel creator using all RichSmartIDs from RawBuffer but cheating the hit position 
// on the HPD window using MCRichOpticalPhotons
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromCheatedRawBuffer.opts"

// Pixel creator using RawBuffer but selects only true Cherenkov Hits
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromSignalRawBuffer.opts"

// Pixel creator also using full reconstructed information from RawBuffer
// but in addition can simulate the effect of dead HPDs
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromRawBufferWithDeadHPDs.opts"

// Pixel creator using RichDigits but selects only true Cherenkov Hits
// and then cheats the hit position using MCRichOpticalPhotons
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromSignalCheatedRichDigits.opts"

// Pixel creator that uses real events to form a cache of hits associated to single particles.
// This cache is then used to add a specified number of background particles to each event
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromRichDigitsWithBg.opts"

// Common pixel options
//---------------------------------------------------------------------------------------------

// Pixel suppression
#include "$RICHRECSYSOPTS/tools/RichPixelSuppress.opts"

// ================================== Photon Creators ==========================================

// Photon reconstruction using full reconstructed information (Default)
#include "$RICHRECSYSOPTS/tools/RichPhotonsFromReco.opts"

// Photon reconstruction using full reconstructed information, but selecting only true cherenkov
// photons using MC information
//#include "$RICHRECSYSOPTS/tools/RichPhotonsFromCheatedReco.opts"

// Photon reconstruction using MC information for true cherenkov photons and reconstructed 
// information for fake associations
//#include "$RICHRECSYSOPTS/tools/RichPhotonsWithSignalMC.opts"

// Photon reconstruction that uses only true Cherenkov information from the MCRichOpticalPhotons
// I.e cheat the emission, detection and mirror reflection points, and the cherenkov angles
// and only reconstruct true photons
//#include "$RICHRECSYSOPTS/tools/RichPhotonsFromMCRichOpticalPhotons.opts"

// Photon reconstruction using full reconstructed information, but applying an additional
// gaussian smear to the reconstructed theta values
//#include "$RICHRECSYSOPTS/tools/RichPhotonsFromRecoWithSmearing.opts"

// Photon reconstruction using normal reconstruction tools, but cheated the track direction
// at the photon emission point. Remove contribution from tracking errors to CK resolution
//#include "$RICHRECSYSOPTS/tools/RichPhotonsFromRecoWithCheatedTrackDir.opts"

// =================================== Miscellaneous ===========================================

ToolSvc.Offline.RichToolRegistry.Context = "Offline";

// RichRecRing creator for mass hypothesis rings
ToolSvc.Offline.RichToolRegistry.Tools += { "RichMassHypothesisRingCreator/RichMassHypoRings" };

// Cherenkov Cone ray tracing
ToolSvc.Offline.RichToolRegistry.Tools += { "RichRayTraceCherenkovCone/RichRayTraceCKCone" };
ToolSvc.Offline.RichRayTraceCKCone.NPhotonsRayTrace = 100;

// Segment creator
ToolSvc.Offline.RichToolRegistry.Tools += { "RichSegmentCreator/RichSegmentCreator" };
//                                                Aerogel  C4F10   CF4
ToolSvc.Offline.RichSegmentCreator.EnergyBins = { 5,       5,      5   };

// Status Creator
ToolSvc.Offline.RichToolRegistry.Tools += { "RichStatusCreator/RichStatusCreator" };

// Geometrical efficiency from full ray tracing
ToolSvc.Offline.RichToolRegistry.Tools += { "RichGeomEffPhotonTracing/RichGeomEff" };
ToolSvc.Offline.RichGeomEff.NPhotonsGeomEffCalc          = 50;
ToolSvc.Offline.RichGeomEff.NPhotonsGeomEffBailout       = 15;

// Fixed value
//ToolSvc.Offline.RichToolRegistry.Tools += { "RichGeomEffFixedValue/RichGeomEff" };
//                                                        Aerogel  C4F10   CF4
//ToolSvc.Offline.RichToolRegistry.RichGeomEff.FixedSignalEfficiency   =  { 0.55,    0.62,   0.55  };
//ToolSvc.Offline.RichToolRegistry.RichGeomEff.FixedScatterEfficiency  =  0.55;

// Track signals
ToolSvc.Offline.RichToolRegistry.Tools += { "RichExpectedTrackSignal/RichExpectedTrackSignal" };

// Photon signals
ToolSvc.Offline.RichToolRegistry.Tools += { "RichPhotonSignal/RichPhotonSignal" };

// Cherenkov resolution - fixed binned implementation as a function of cherenkov angle
//#include "$RICHRECSYSOPTS/tools/BinnedCherenkovResVtheta.opts"

// analytical cherenkov resolution calculation
#include "$RICHRECSYSOPTS/tools/FunctionalCherenkovRes.opts"

// Interpolated cherenkov resolution function of the cherenkov angle
//#include "$RICHRECSYSOPTS/tools/InterpCherenkovResVtheta.opts"

// Expected Cherenkov angles
ToolSvc.Offline.RichToolRegistry.Tools += { "RichCherenkovAngle/RichCherenkovAngle" };

// Reco geometry tool
ToolSvc.Offline.RichToolRegistry.Tools += { "RichRecGeomTool/RichRecGeometry" };
//ToolSvc.RichRecGeometry.RadOpticalCorrections = { 0.037, 0.0105, -0.014 };

// Refractive index using XML tabulation
ToolSvc.Offline.RichToolRegistry.Tools += { "RichTabulatedRefractiveIndex/RichRefractiveIndex" };

// Rayleigh scattering using XML tabulation
ToolSvc.Offline.RichToolRegistry.Tools += { "RichTabulatedRayleighScatter/RichRayleighScatter" };
// Rayleigh scattering using analytic function
//ToolSvc.Offline.RichToolRegistry.Tools += { "RichFunctionalRayleighScatter/RichRayleighScatter" };

// Sellmeir function
ToolSvc.Offline.RichToolRegistry.Tools += { "RichSellmeirFunc/RichSellmeirFunc" };
ToolSvc.Offline.RichSellmeirFunc.WaveIndpTrans = 1.0;
//ToolSvc.Offline.RichSellmeirFunc.WaveIndpTrans = 0.9368;

// Photon detection efficiency using XML tabulation
ToolSvc.Offline.RichToolRegistry.Tools += { "RichTabulatedSignalDetectionEff/RichSignalDetectionEff" };

// Rich particle properties
ToolSvc.Offline.RichToolRegistry.Tools += { "RichParticleProperties/RichParticleProperties" };

// Gas Quartz window transmission
ToolSvc.Offline.RichToolRegistry.Tools += { "RichTabulatedGasQuartzWindowAbs/RichGasQuartzWindow" };

// Detector Parameters
ToolSvc.Offline.RichToolRegistry.Tools += { "RichDetParameters/RichDetParameters" };
//                                                    Aerogel  C4F10   CF4
ToolSvc.Offline.RichDetParameters.MinPhotonEnergy = { 1.75,    1.75,   1.75 };
ToolSvc.Offline.RichDetParameters.MaxPhotonEnergy = { 4.00,    7.00,   7.00 };

// SmartID manipulation
ToolSvc.Offline.RichToolRegistry.Tools += { "RichSmartIDTool/RichSmartIDTool" };

// Detector ray-tracing
ToolSvc.Offline.RichToolRegistry.Tools += { "RichRayTracing/RichRayTracing" };
ToolSvc.Offline.RichRayTracing.HistoProduce = false;

// mirror segment finder
ToolSvc.Offline.RichToolRegistry.Tools += { "RichMirrorSegFinder/RichMirrorSegFinder" };

// Raw Buffer decoding
ToolSvc.Offline.RichToolRegistry.Tools += { "RichRawBufferToSmartIDsTool/RichSmartIDDecoder" };

// radiator tool
ToolSvc.Offline.RichToolRegistry.Tools += { "RichRadiatorTool/RichRadiatorTool" };

// raw buffer tool
ToolSvc.Offline.RichToolRegistry.Tools += { "RichRawDataFormatTool/RichRawDataFormatTool" };
