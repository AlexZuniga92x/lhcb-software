//=============================================================================================
// Rich Reconstruction Tools
//=============================================================================================

// ================================== Track Creators ==========================================

// RichTrackCreator using full reconstructed information (Default)
#include "$RICHRECSYSOPTS/tools/RichTracksFromTrStoredTracks.opts"

// RichTrackCreator using TrStoredTracks but cheating the tracking information by
// using the associated MCRichTrack. In the include file below the cheating can be tuned
// at the level of the tracking algorithm.
//#include "$RICHRECSYSOPTS/tools/RichTracksFromCheatedTrStoredTracks.opts"

// ================================== Pixel Creators ==========================================

// Pixel creator using full reconstructed information from RichDigits (Default)
#include "$RICHRECSYSOPTS/tools/RichPixelsFromRichDigits.opts"

// Pixel creator using all RichDigits but cheating the hit position on the HPD 
// window using MCRichOpticalPhotons
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromCheatedRichDigits.opts"

// Pixel creator using RichDigits but selects only true Cherenkov Hits
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromSignalRichDigits.opts"

// Pixel creator using RichDigits but selects only true Cherenkov Hits
// and then cheats the hit position using MCRichOpticalPhotons
//#include "$RICHRECSYSOPTS/tools/RichPixelsFromSignalCheatedRichDigits.opts"

// ================================== Photon Creators ==========================================

// Photon reconstruction using full reconstructed information (Default)
#include "$RICHRECSYSOPTS/tools/RichPhotonsFromReco.opts"

// Photon reconstruction using full reconstructed information, but selecting only true cherenkov
// photons using MC information
//#include "$RICHRECSYSOPTS/tools/RichPhotonsFromCheatedReco.opts"

// Photon reconstruction that uses only true Cherenkov information from the MCRichOpticalPhotons
// I.e cheat the emission, detection and mirror reflection points, and the cherenkov angles
//#include "$RICHRECSYSOPTS/tools/RichPhotonsFromMCRichOpticalPhotons.opts"

// =================================== Miscellaneous ===========================================

// RichRecRing creator for mass hypothesis rings
ToolSvc.RichToolRegistry.Tools += { "RichMassHypothesisRingCreator/RichMassHypoRings" };

// Cherenkov Cone ray tracing
ToolSvc.RichToolRegistry.Tools += { "RichRayTraceCherenkovCone/RichRayTraceCKCone" };
ToolSvc.RichRayTraceCKCone.NPhotonsRayTrace = 20;

// Segment creator
ToolSvc.RichToolRegistry.Tools += { "RichSegmentCreator/RichSegmentCreator" };
//                                             Aerogel  C4F10   CF4
ToolSvc.RichSegmentCreator.EnergyBins      = { 10,      10,     10   };

// Status Creator
ToolSvc.RichToolRegistry.Tools += { "RichStatusCreator/RichStatusCreator" };

// Geometrical efficiency from full ray tracing
ToolSvc.RichToolRegistry.Tools += { "RichGeomEffPhotonTracing/RichGeomEff" };
ToolSvc.RichGeomEff.NPhotonsGeomEffCalc          = 100;
ToolSvc.RichGeomEff.NPhotonsGeomEffBailout       = 25;

// Fixed value
//ToolSvc.RichToolRegistry.Tools += { "RichGeomEffFixedValue/RichGeomEff" };
//ToolSvc.RichGeomEff.FixedSignalEfficiency   =  { 0.75, 0.75, 0.75 };
//ToolSvc.RichGeomEff.FixedScatterEfficiency  =  0.75;

// Track signals
ToolSvc.RichToolRegistry.Tools += { "RichExpectedTrackSignal/RichExpectedTrackSignal" };

// Photon signals
ToolSvc.RichToolRegistry.Tools += { "RichPhotonSignal/RichPhotonSignal" };

// Sellmeir function
ToolSvc.RichToolRegistry.Tools += { "RichSellmeirFunc/RichSellmeirFunc" };
ToolSvc.RichSellmeirFunc.WaveIndpTrans = 1.0;
//ToolSvc.RichSellmeirFunc.WaveIndpTrans = 0.9368;

// Cherenkov resolution - fixed binned implementation as a function of cherenkov angle
#include "$RICHRECSYSOPTS/tools/BinnedCherenkovResVtheta.opts"

// Interpolated cherenkov resolution function of the cherenkov angle
//#include "$RICHRECSYSOPTS/tools/InterpCherenkovResVtheta.opts"

// Interpolated cherenkov resolution function of momentum
//#include "$RICHRECSYSOPTS/tools/InterpCherenkovResVmomentum.opts"

// analytical cherenkov resolution as a function of momentum
//#include "$RICHRECSYSOPTS/tools/FunctionalCherenkovResVmomentum.opts"

// Photon detection efficiency using XML tabulation
ToolSvc.RichToolRegistry.Tools += { "RichTabulatedSignalDetectionEff/RichSignalDetectionEff" };
//ToolSvc.RichSignalDetectionEff.RichSphMirrorLocations = {
//  "/dd/Geometry/Rich1/Rich1SurfaceTabProperties/Rich1Mirror1SurfaceReflectivityPT",
//  "/dd/Geometry/Rich2/Rich2SurfaceTabProperties/Rich2Mirror1SurfaceReflectivityPT"
//};
//ToolSvc.RichSignalDetectionEff.RichFlatMirrorLocations = {
//  "/dd/Geometry/Rich1/Rich1SurfaceTabProperties/Rich1Mirror2SurfaceReflectivityPT",
//  "/dd/Geometry/Rich2/Rich2SurfaceTabProperties/Rich2Mirror2SurfaceReflectivityPT"
//};
ToolSvc.RichSignalDetectionEff.RichSphMirrorLocations = {
  "/dd/Geometry/Rich1/Rich1SurfaceTabProperties/Rich1Mirror1SurfaceIdealReflectivityPT",
  "/dd/Geometry/Rich2/Rich2SurfaceTabProperties/Rich2Mirror1SurfaceIdealReflectivityPT"
};
ToolSvc.RichSignalDetectionEff.RichFlatMirrorLocations = {
  "/dd/Geometry/Rich1/Rich1SurfaceTabProperties/Rich1Mirror2SurfaceIdealReflectivityPT",
  "/dd/Geometry/Rich2/Rich2SurfaceTabProperties/Rich2Mirror2SurfaceIdealReflectivityPT"
};
ToolSvc.RichSignalDetectionEff.QETableLocation =
  "/dd/Materials/RichMaterialTabProperties/HpdQuantumEff";

// Refractive index using XML tabulation
ToolSvc.RichToolRegistry.Tools += { "RichTabulatedRefractiveIndex/RichRefractiveIndex" };
//ToolSvc.RichRefractiveIndex.RefIndexLocations = {
//  "/dd/Materials/RichMaterialTabProperties/AerogelRIndexPT",
//  "/dd/Materials/RichMaterialTabProperties/C4F10SellParamRIndexPT",
//  "/dd/Materials/RichMaterialTabProperties/CF4RIndexPT"
//};
//ToolSvc.RichRefractiveIndex.RefIndexLocations = {
//  "/dd/Materials/RichMaterialTabProperties/AerogelIdealRIndexPT",
//  "/dd/Materials/RichMaterialTabProperties/C4F10SellParamRIndexPT",
//  "/dd/Materials/RichMaterialTabProperties/CF4RIndexPT"
//};
ToolSvc.RichRefractiveIndex.RefIndexLocations = {
  "/dd/Materials/RichMaterialTabProperties/AerogelIdealCkvRIndexFilterPT",
  "/dd/Materials/RichMaterialTabProperties/C4F10SellParamRIndexPT",
  "/dd/Materials/RichMaterialTabProperties/CF4RIndexPT"
};
ToolSvc.RichRefractiveIndex.QETableLocation =
  "/dd/Materials/RichMaterialTabProperties/HpdQuantumEff";

// Rayleigh scattering using XML tabulation
ToolSvc.RichToolRegistry.Tools += { "RichTabulatedRayleighScatter/RichRayleighScatter" };
ToolSvc.RichRayleighScatter.RayScatLengthLocation =
  "/dd/Materials/RichMaterialTabProperties/AerogelRayleighPT";

// Rayleigh scattering using analytic function
//ToolSvc.RichToolRegistry.Tools += { "RichFunctionalRayleighScatter/RichRayleighScatter" };

// Expected Cherenkov angles
ToolSvc.RichToolRegistry.Tools += { "RichCherenkovAngle/RichCherenkovAngle" };

// Rich particle properties
ToolSvc.RichToolRegistry.Tools += { "RichParticleProperties/RichParticleProperties" };

// Gas Quartz window transmission
ToolSvc.RichToolRegistry.Tools += { "RichTabulatedGasQuartzWindowAbs/RichGasQuartzWindow" };
ToolSvc.RichGasQuartzWindow.GasQuartzWindowLocation =
  "/dd/Materials/RichMaterialTabProperties/GasWindowQuartzIdealAbsLengthPT";
//  "/dd/Materials/RichMaterialTabProperties/GasWindowQuartzAbsLengthPT";

// Detector Parameters
ToolSvc.RichToolRegistry.Tools += { "RichDetParameters/RichDetParameters" };
//                                            Aerogel  C4F10   CF4
ToolSvc.RichDetParameters.MinPhotonEnergy = { 1.75,    1.75,   1.75 };
ToolSvc.RichDetParameters.MaxPhotonEnergy = { 3.75,    7.00,   7.00 };

// SmartID manipulation
ToolSvc.RichToolRegistry.Tools += { "RichSmartIDTool/RichSmartIDTool" };

// Detector ray-tracing
ToolSvc.RichToolRegistry.Tools += { "RichRayTracing/RichRayTracing" };
