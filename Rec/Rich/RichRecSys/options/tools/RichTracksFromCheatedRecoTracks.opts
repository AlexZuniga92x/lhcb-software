
// Options to create RichRecTracks from cheated Track reconstructed information
// The Track is used as a starting point, but the gemoetrical and momentum
// information is then extracted from the associated MCRichTrack

// Define the primary RichTrackCreator to be the delegator tool
// This tool sends the real work to other tools depending on the configuration
ToolSvc.Offline_RichToolRegistry.Tools += { "Rich::Rec::DelegatedTrackCreatorFromRecoTracks/RichTrackCreator" };

// Example configuration, use MC for all but forward tracks...
ToolSvc.Offline_RichTrackCreator.ToolsByTrackType = { "Forward/RichTrackCreatorMC",
                                                      "Match/RichTrackCreatorMC",
                                                      "VeloTT/RichTrackCreatorMC",
                                                      "Seed/RichTrackCreatorMC",
                                                      "KsTrack/RichTrackCreatorMC",
                                                      "Velo/RichTrackCreatorMC" };

// The delegated RichTrackCreator that uses full reco information
ToolSvc.Offline_RichToolRegistry.Tools += { "Rich::Rec::TrackCreatorFromRecoTracks/RichTrackCreatorReco" };
ToolSvc.Offline_RichTrackCreator.RichTrackCreatorReco.TrackSelector.TrackAlgs = { "Seed","Match","Forward","KsTrack","VeloTT" };

ToolSvc.Offline_RichTrackCreator.RichTrackCreatorReco.TrackSegmentTool = "RichDetTrSegMakerReco";
// Momentum cuts
ToolSvc.Offline_RichTrackCreator.RichTrackCreatorReco.TrackSelector.VeloTT.MinPCut = 1;

// Configure the RichTrackSegment maker for reconstructed tracks
ToolSvc.Offline_RichToolRegistry.Tools += { "Rich::Rec::DetailedTrSegMakerFromRecoTracks/RichDetTrSegMakerReco" };
ToolSvc.Offline_RichDetTrSegMakerReco.PrimaryTrackExtrapolator = "TrHerabExtrapolator";
ToolSvc.Offline_RichDetTrSegMakerReco.BackupTrackExtrapolator  = "TrParabolicExtrapolator";
// which radiators to use                              Aerogel   C4F10    CF4
ToolSvc.Offline_RichDetTrSegMakerReco.UseRadiators = { true,     true,    true };




// The delegated RichTrackCreator that uses MC information
ToolSvc.Offline_RichToolRegistry.Tools += { "Rich::Rec::TrackCreatorFromRecoTracks/RichTrackCreatorMC" };
ToolSvc.Offline_RichTrackCreator.RichTrackCreatorMC.TrackSelectior.TrackAlgs = { "Seed","Match","Forward","KsTrack","VeloTT" };
ToolSvc.Offline_RichTrackCreator.RichTrackCreatorMC.TrackSegmentTool = "RichDetTrSegMakerMC";
// Momentum cuts
ToolSvc.Offline_RichTrackCreator.RichTrackCreatorMC.TrackSelector.VeloTT.MinPCut = 1;

// Configure the RichTrackSegment maker for MC tracks
ToolSvc.Offline_RichToolRegistry.Tools += { "Rich::Rec::MC::TrSegMakerFromMCRichTracks/RichDetTrSegMakerMC" };
// which radiators to use                              Aerogel   C4F10    CF4
ToolSvc.Offline_RichDetTrSegMakerMC.UseRadiators   = { true,     true,    true };
