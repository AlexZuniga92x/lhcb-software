
// Define the algorithms to run and in which order
// ============================================================================

// Markov chain ring finder
//BrunelRecoRICHSeq.Members += {
  //"Rich1MarkovRingFinderAlg/Rich1P0RingFinder",   // Rich1 Upper panel
  //"Rich1MarkovRingFinderAlg/Rich1P1RingFinder",   // Rich1 Lower panel
  //"Rich2LMarkovRingFinderAlg/Rich2P0RingFinder",  // Rich2 left panel 
  //"Rich2RMarkovRingFinderAlg/Rich2P1RingFinder"   // Rich2 right panel
//};

// Run the Local PID first
BrunelRecoRICHSeq.Members += { "RichLocalPIDAlg/RichLocPID" };

// Initialise GlobalPID each event
BrunelRecoRICHSeq.Members += { "RichGlobalPIDInitialize/RichGloPIDInit" };
BrunelRecoRICHSeq.Members += { "RichGlobalPIDDigitSel/RichGloPIDDigSel" };
BrunelRecoRICHSeq.Members += { "RichGlobalPIDTrTrackSel/RichGloPIDTrSel" };

// Backgroud alg - Uses local PID results as working particle hypotheses
BrunelRecoRICHSeq.Members += { "RichRecBackgroundEsti/RichBckEst1" };

// First iteration of Global PID
BrunelRecoRICHSeq.Members += { "RichGlobalPIDAlg/RichGloPIDIt1" };

// Backgroud alg - Uses global 1st iter results as working particle hypotheses
BrunelRecoRICHSeq.Members += { "RichRecBackgroundEsti/RichBckEst2" };

// Second iteration of Global PID
BrunelRecoRICHSeq.Members += { "RichGlobalPIDAlg/RichGloPIDIt2" };

// Ring refit - uses working PIDs to identify good photons and refit angles
// Results as yet not used in formation of final PID
//BrunelRecoRICHSeq.Members += { "RichRingRefitAlg/RichRingRefit" };

// Finalise Global PID algorithm each event
BrunelRecoRICHSeq.Members += { "RichGlobalPIDFinalize/RichGloPIDFin" };

// Make final output PID results
// Current uses for each track Global PID if it exists, 
// otherwise local if that exists
BrunelRecoRICHSeq.Members += { "RichHierarchicalPIDMerge/MergeRichPIDs" };

// Reconstruction algorithm parameters
// ========================================================================================

// Local Algorithm parameters
RichLocPID.TrackSelection = { "unique","positive","negative","seed","match","forward","KsTrack","veloTT" };
RichLocPID.MinimumPtot                       = 0.0*GeV;
RichLocPID.MaxUsedTracks                     = 300;
RichLocPID.MaxInputTracks                    = 700;
ToolSvc.RichLocPIDTool.MinProbThresholdHighP = { 0.03,  0.01, 0.02, 0.02 };
ToolSvc.RichLocPIDTool.MinProbThresholdLowP  = { 0.1,   0.1,  0.1,  0.09 };
ToolSvc.RichLocPIDTool.CherenkovThetaRes     = { 0.002, 0.0014, 0.0007   };
// Cherenkov angle space tool
ToolSvc.RichToolRegistry.Tools += { "RichLocalPIDToolAngleSpace/RichLocPIDTool" };
// Local XY tool
//RichLocPID.ReconstructPhotons                = false;
//ToolSvc.RichToolRegistry.Tools += { "RichLocalPIDToolLocalXYSpace/RichLocPIDTool" };

// Global PID digit selection
RichGloPIDDigSel.MaxUsedPixels            = 8000;

// Global PID track selection
RichGloPIDTrSel.TrackSelection = { "unique","positive","negative","seed","match","forward","KsTrack","veloTT" };
RichGloPIDTrSel.MaxUsedTracks             = 200;
RichGloPIDTrSel.MaxInputTracks            = 700;
RichGloPIDTrSel.MinimumPhysicsMomentum    = 0.0*GeV;
RichGloPIDTrSel.MinimumLikelihoodMomentum = 0.0*GeV;
RichGloPIDTrSel.ResetTracksToPion         = false;

// Global Algorithm parameters - phase 1
//                                            Its      tracks    lowT    highT
RichGloPIDIt1.TrackMinDeltaLLPara         = { 0,10,    30,150,   -1,-1,  -1, -0.2 };
RichGloPIDIt1.FreezeOutPara               = { 0,10,    30,150,    3, 2,   1,  1   };
RichGloPIDIt1.LikelihoodThreshold         = -1e-2;
RichGloPIDIt1.MinSignalForNoLLCalc        = 1e-25;
RichGloPIDIt1.MinSignalForAproxLLCalc     = 1e-5;

// Global Algorithm parameters - phase 2
//                                            Its      tracks     lowT    highT
RichGloPIDIt2.TrackMinDeltaLLPara         = { 0,10,    30,150,   -4,-3,  -2, -0.5 };
RichGloPIDIt2.FreezeOutPara               = { 0,10,    30,150,    4, 3,   2,  1   };

RichGloPIDIt2.LikelihoodThreshold         = -1e-3;
RichGloPIDIt2.MinSignalForNoLLCalc        = 1e-25;
RichGloPIDIt2.MinSignalForAproxLLCalc     = 1e-5;

// Ring Refit
RichRingRefit.TrackSelection = { "unique","seed","match","forward","KsTrack" };
//                                             Aero   C4F10   CF4
RichRingRefit.MinSignalPhotonProb         = {  999,   1e-2,  1.50e-3  };
RichRingRefit.MinRefitPhotons             = {  999,    999,      7    };
RichRingRefit.MaxBackgroundProb           = {  999,    999,    999    };
RichRingRefit.MaxCandsPerPixel            = {    1,      1,      10   };
RichRingRefit.MinFitProbability           = {  0.5,    0.5,   0.0005  };
RichRingRefit.nDist          = 2.00;
RichRingRefit.nDistFrwrd     = 2.00;
RichRingRefit.nDistMatch     = 2.00;
RichRingRefit.nDistSeed      = 2.20;
RichRingRefit.nDistKshort    = 2.20;
RichRingRefit.NSigmaCut      = 3.00;

// PID merging
MergeRichPIDs.UseRingRefitPIDs = false;
MergeRichPIDs.UseLocalPIDs     = true;
MergeRichPIDs.UseGlobalPIDs    = true;
//MergeRichPIDs.OutputPIDLocation = "Rec/Rich/NewPIDs";
