
// set in offline mode
CheckRICHSeq.Context = "Offline";

// MC tools
//ToolSvc.Offline.RichToolRegistry.Tools += { "Rich::MC::MCTruthTool/RichMCTruthTool" };
//ToolSvc.Offline.RichToolRegistry.Tools += { "Rich::Rec::MC::MCTruthTool/RichRecMCTruthTool" };

// PID Monitors for all tracks combined
#include "$RICHRECQCOPTS/pid/BrunelMoni_AllTracks.opts"
#include "$RICHRECQCOPTS/pid/AllTracks_Para.opts"

// Suppress errors from Linker
MessageSvc.setFatal += { "LinkedTo::MC/Particles2MCRichTracks",
                         "LinkedTo::MC/Rich/Hits2MCRichOpticalPhotons" };

// pixel monitor
CheckRICHSeq.Members += { "Rich::Rec::MC::PixelQC/RichRecPixelQC" };

// Reco QC
// All tracks
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResAllHighP" };
RiCKResAllHighP.HistoPrint       = false;

// Long tracks tracks - all P
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResLong" };
RiCKResLong.TrackSelector.TrackAlgs  = { "Forward", "Match" };
RiCKResLong.HistoPrint       = false;
RiCKResLong.MinParticleMomentum = { 2*GeV, 2*GeV, 2*GeV };

// forward tracks
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResFrwdHighP" };
RiCKResFrwdHighP.TrackSelector.TrackAlgs  = { "Forward" };
RiCKResFrwdHighP.HistoPrint      = false;

// match tracks
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResMatchHighP" };
RiCKResMatchHighP.TrackSelector.TrackAlgs = { "Match" };
RiCKResMatchHighP.HistoPrint     = false;

// KsTracks tracks
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResKsTkHighP" };
RiCKResKsTkHighP.TrackSelector.TrackAlgs  = { "KsTrack" };
RiCKResKsTkHighP.HistoPrint      = false;

// VeloTT tracks
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResVeloTTHighP" };
RiCKResVeloTTHighP.TrackSelector.TrackAlgs = { "VeloTT" };
RiCKResVeloTTHighP.HistoPrint    = false;

//RiCKResVeloTT.HistoProduce  = false;
// Seed tracks
CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResSeedHighP" };
RiCKResSeedHighP.TrackSelector.TrackAlgs  = { "Seed" };
RiCKResSeedHighP.HistoPrint      = false;

// MCRichTracks
//CheckRICHSeq.Members += { "Rich::Rec::MC::RecoQC/RiCKResMCRichTrack" };
//RiCKResMCRichTrack.TrackSelector.TrackAlgs  = { "MCRichTrack" };
//RiCKResMCRichTrack.HistoPrint      = true;

// Reco summary monitor
CheckRICHSeq.Members += { "Rich::Rec::MC::SummaryQC/RichRecSummaryQC" };

