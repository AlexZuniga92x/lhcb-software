!-----------------------------------------------------------------------------
! Package     : Tf/PatAlgorithms
! Responsible : Stephanie-Hansmann-Menzemer
! Purpose     : track finding
!-----------------------------------------------------------------------------

! 2008-05-21 - Johannes Albrecht
	- PatMatchTool. h / .cpp: Add interface for implementtion in Hlt

! 2008-05-21 - Manuel Tobias Schiller
 - PatSeedingTool: fixed a bug in the y window calculation used in L0
   confirmation (no tacks are found in the L0 case)

!========================== PatAlgorithms v3r5 2008-05-16 ====================
! 2008-05-15 - Manuel Tobias Schiller
 - PatFwdPlaneCounter, PatFwdRegionCounter:
   order of arguments to std::distance were given in reverse order, leading to
   slightly decreased performance in PatForward - swapped aruments so that
   order is correct now

! 2008-05-14 - Manuel Tobias Schiller
 - PatFwdPlaneCounter:
   - now uses boost::array instead of std::vector for arrays with known size
     at compile time -> see some small speed improvements for very hot events
   - class itself no longer templated on hit type, instead, methods taking
     hits (or iterators) are templated
 - PatFwdRegionCounter:
   - boost::array instead of std::vector, see above
 - PatForwardTool, PatFwdTool:
   - follow-up changes for the changes in PatFwdPlaneCounter above
   - added some consts where possible to facilitate optimization by the
     compiler
 - PatSeedTool:
   - boost::array instead of std::vector, see above
   - added a missing minus sign in the initial iteration of the stereo fit
   - added const to methods that do not change the object
 - PatSeedTrack:
   - boost::array instead of std::vector, see above
   - added assignment operator
   - removed unused members
   - decreasingQuality() ordering class can now be used to sort containers
     of objects as well (if desired) - used to be only pointers to objects
 - PatSeedingTool:
   - in collectStereoHits: restore coordinates only for the hits we actually
     intend to consider further, not for the whole region
     dramatic speed improvement, as collectStereoHits is executed once for
     each candidate in xz
   - save low quality tracks with high impact y during per region search, add
     additional pass at the end of the algorithm to recover some of these
     tracks (if not too many used hits)
     this is fast (ca 0.7 ms/event), other improvements to algorithm actually
     save more time than we spend here
   - added code to account for OT tilt (dz/dy) before track in y is known
     (need to slightly widen search windows, otherwise, upper and lower half
     of OT show different efficiency at high fabs(y))
     this involves code needed to get dz/dy and z at y=0 for a region
   - boost::array instead of std::vector, see above
   - regrouped property declarations so that related properties form groups
   - improved debugging code: per stage timing has not survived move from
     algorithm to tool, now resurrected
   - cut on drift radii now available as job option
   - when counting hits with some property to see if some cut is exceeded,
     we now stop early when we hit the boundary
   - improved memory management for temporary track candidates (read: faster)
   - methods for each pass of the algorithm over the hits to make separation
     clearer
   - added convenience functions and typedefs to access the hit manager
   - during xz search, cluster positions in the OT are now calculated the
     "Kisel" way, weighting each hit with 1/(r^2+sigma^2); this gives
     slightly better results because the parabola through these points is
     closer to the true track then
   - retuned some of the default properties for improved performance
   - now uses FastMomentumEstimate tool to have all the parametrizations
     available centrally in one place
   - prepareHits() now returns the number of hits returned by the hit
     manager - this might be useful for some applications and is easily
     ignored in all others
   - I'm sure I forgot something...
 - PatSeeding:
   - use private instance of PatSeedingTool to allow different configurations
     for different instances of the algorithm

! 2008-05-08 - Johannes Albrecht
 - PatMatchTool: - New implementation of PatMatch as tool
                         - public function: matchSingle for Hlt
                         - quality of match is now job option: maxMatchChi2
                         - momentum of matched tracks is calculated with tool
 - PatMatch: algorithm which only calls the tool

!========================== PatAlgorithms v3r4p1 2008-03-25 ==================
! 2008-03-25 - Jan Amoraal
 - Removed white space from property impactCurrentNorm in PatMakeV0. 
   Python doesn't like it.
 - Fixed option in PatFwdTool.opts
  +  zMagnetParams -> ZMagnetParams
 
!========================== PatAlgorithms v3r4 2008-02-18 ====================
! 2008-02-18 - Manuel Schiller
 - PatSeedingTool can now take an optional state giving a hint where a track
   is to be found; this is useful for the HLT when confirming L0 candidates
   a track is searched for in a +/- one sigma window which is derived from the
   covariance matrix of the state which is extrapolated with a straight line
   model into the T stations
 - added job option which makes it possible to ignore hits used in a previous
   run of PatSeedingTool; application is again in HLT when trying to confirm
   several hypotheses in a combined window
 - added some missing comments to PatSeedingTool.cpp and the corresponding
   header file to better document member variables

!========================== PatAlgorithms v3r3 2008-01-28 ====================
! 2008-01-28 - Manuel Schiller
 - added code to PatSeedingTool to perform better without magnetic field
   does not affect performance at all when running with default settings
 - added code to PatSeedingTool to allow better tuning when running with
   a misaligned detector
   does not affect performance at all when running with default settings
 - added code to PatSeedTool to fix a corner case which could produce NaNs
   as track parameters:
   In a few cases, the line fit in y projection could start to oscillate
   wildly. The x coordinates of hits are modified according to the track's
   y, which causes an even more violent shift in y parameters on the next
   iteration - eventually, you'll find NaNs all over the place. The bad thing
   about this is that these hits with NaNs as coordinates may cause the fit
   of other tracks in that event to fail as well.
   To put a stop to this, the fit will now discard tracks which change their
   slope in yz projection by more than 1.0. This improves efficiency and
   decreases ghost rate slightly.

! 2008-01-17 - Olivier Callot
 - Modify again PatMatch to use std::map<int,bool>, which is correct in that order.

! 2008-01-16 - Olivier Callot
 - Modify PatMatch: The std::map<bool,int> was no longer working properly.
   It is replaced by a simple vector of size = max key value.

! 2008-01-10 - Olivier Callot
 - New algorithm PatMakeV0 from Maurince enayoun to build V0 candidates
   Requites PV to be foudn first.
   Resulting V0s in RecVErtexLocation::V) and track pairs in Rec/Tracl/FromKs.

! 2007-12-19 - Olivier Callot
 - Modify PatDownstream to tag TT used hits with the option SeedFilter.
 - Use new enum values to tag TT hits with meaningful names.

!========================== PatAlgorithms v3r2 2007-12-11 ====================
! 2007-12-11 - Stephanie Hansmann-Menzemer
 - switch off use of TT in PatForwardTool per default, to simplify usage in HLT

! 2007-12-05 - Stephanie Hansmann-Menzemer
 - bug fix (screwed up region numbering for IT and OT)

! 2007-12-04 - Stephanie Hansmann-Menzemer
 - write out states in T at 3 z positions 

! 2007-11-29 - Stephanie Hansmann-Menzemer
 - change ZAtT -> ZEndT

! 2007-11-16 - Jose A. Hernando
 - getOrCreate at PatForward

!========================== PatAlgorithms v3r1 2007-11-14 ====================
! 2007-11-19 - Adrian Perieanu
 - add the loops to extract the neural net variables for Tr/NNTools

! 2007-11-14 - Stephanie Hansmann-Menzemer
 - add double -> float conversion in PatForwardTool to remove compiler warning 

! 2007-11-08 - Stephanie Hansmann-Menzemer
 - set default values for parameter arrays in PatFwdTool and PatSeedingTool

! 2007-11-02 - Marco Cattaneo
 - Adapt PatForwardTool to interface change of PatFwdTool, was not compiling...

! 2007-10-30 - Stephanie Hansmann-Menzemer
 - bug fix in PatMatch
 - add switch for z position of output state for PatSeeding and PatForward 
   algorithm

! 2007-10-22 - Olivier Callot
 - Import PatDownstream, an adaptation of PatKShort.
 - Update the history flag with the proper value in PatSeeding and PatMatch

!========================== PatAlgorithms v3r0 2007-10-12 ====================
! 2007-10-09 - Stephanie Hansmann-Menzemer
  - import PatForward to PatAlgorithms  
-----------------------------------------------------------------------
All previous release notes can be found in Tf/PatForward package, package was
ported by the A team
