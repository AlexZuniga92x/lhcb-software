// Track checking on long tracks in the "best" container
// -----------------------------------------------------


CheckPatSeq.Members  += { "TrackAssociator/AssocVeloRZ",
		          "TrackAssociator/AssocVelo",
                          "TrackAssociator/AssocVeloTT",
			  "TrackAssociator/AssocForward",
			  "TrackAssociator/AssocTTrack",
			  "TrackAssociator/AssocMatch",
			  "TrackAssociator/AssocDownstream"};
	 
AssocVeloRZ.TracksInContainer     = "Rec/Track/RZVelo";
AssocVelo.TracksInContainer       = "Rec/Track/Velo";
AssocVeloTT.TracksInContainer     = "Rec/Track/VeloTT";
AssocForward.TracksInContainer    = "Rec/Track/Forward";
AssocTTrack.TracksInContainer     = "Rec/Track/Seed";
AssocMatch.TracksInContainer      = "Rec/Track/Match";
AssocDownstream.TracksInContainer = "Rec/Track/Downstream";

CheckPatSeq.Members  += { "TrackResChecker" };
TrackResChecker.SplitByType = true;
//TrackResChecker.MCSelector.rejectElectrons = true;
//TrackResChecker.MCSelector.rejectInteractions = true;
//TrackResChecker.MCSelector.zInteraction = 9400.;
TrackResChecker.FullDetail = false;
TrackResChecker.HistoPrint = false;

// example of how to use the 
CheckPatSeq.Members  += { "TrackEffChecker/VeloRZ",
		         "TrackEffChecker/Velo",
			 "TrackEffChecker/VeloTT",
			 "TrackEffChecker/Forward",
			 "TrackEffChecker/TTrack",
			 "TrackEffChecker/Match",
			 "TrackEffChecker/Downstream",
			 "TrackEffChecker/BestTracks"};


BestTracks.fullDetail = false;
BestTracks.TracksInContainer = "Rec/Track/Best";
BestTracks.Selector.Selector.rejectElectrons = true;
BestTracks.Selector.Selector.rejectInteractions = true;
BestTracks.Selector.Selector.zInteraction = 9400.;
BestTracks.SelectionCriteria = "ChargedLong";
BestTracks.HistoPrint = false;
BestTracks.StatPrint = false;


VeloRZ.fullDetail = false;
VeloRZ.TracksInContainer = "Rec/Track/RZVelo";
VeloRZ.Selector.Selector.rejectElectrons = true;
VeloRZ.Selector.Selector.rejectInteractions = true;
VeloRZ.Selector.Selector.zInteraction = 9400.;
VeloRZ.SelectionCriteria = "ChargedLong";
VeloRZ.HistoPrint = false;
VeloRZ.StatPrint = false;


Velo.fullDetail = false;
Velo.TracksInContainer = "Rec/Track/Velo";
Velo.Selector.Selector.rejectElectrons = true;
Velo.Selector.Selector.rejectInteractions = true;
Velo.Selector.Selector.zInteraction = 9400.;
Velo.SelectionCriteria = "ChargedLong";
Velo.HistoPrint = false;
Velo.StatPrint = false;

VeloTT.fullDetail = false;
VeloTT.TracksInContainer = "Rec/Track/VeloTT";
VeloTT.Selector.Selector.rejectElectrons = true;
VeloTT.Selector.Selector.rejectInteractions = true;
VeloTT.Selector.Selector.zInteraction = 9400.;
VeloTT.SelectionCriteria = "ChargedLong";
VeloTT.HistoPrint = false;
VeloTT.StatPrint = false;

Forward.fullDetail = false;
Forward.TracksInContainer = "Rec/Track/Forward";
Forward.Selector.Selector.rejectElectrons = true;
Forward.Selector.Selector.rejectInteractions = true;
Forward.Selector.Selector.zInteraction = 9400.;
Forward.SelectionCriteria = "ChargedLong";
Forward.HistoPrint = false;
Forward.StatPrint = false;

TTrack.fullDetail = false;
TTrack.TracksInContainer = "Rec/Track/Seed";
TTrack.Selector.Selector.rejectElectrons = true;
TTrack.Selector.Selector.rejectInteractions = true;
TTrack.Selector.Selector.zInteraction = 9400.;
TTrack.SelectionCriteria = "ChargedLong";
TTrack.HistoPrint = false;
TTrack.StatPrint = false;

Match.fullDetail = false;
Match.TracksInContainer = "Rec/Track/Match";
Match.Selector.Selector.rejectElectrons = true;
Match.Selector.Selector.rejectInteractions = true;
Match.Selector.Selector.zInteraction = 9400.;
Match.SelectionCriteria = "ChargedLong";
Match.HistoPrint = false;
Match.StatPrint = false;

Downstream.fullDetail = false;
Downstream.TracksInContainer = "Rec/Track/Downstream";
Downstream.Selector.Selector.rejectElectrons = true;
Downstream.Selector.Selector.rejectInteractions = true;
Downstream.Selector.Selector.zInteraction = 9400.;
Downstream.SelectionCriteria = "ChargedLong";
Downstream.HistoPrint = false;
Downstream.StatPrint = false;
