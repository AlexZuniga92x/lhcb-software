
// ====================================================================
//  Tracking reconstruction phase
// ====================================================================
Reco.DetectorList += { "Pat", "Tr" };

// --------------------------------------------------------------------
// Load all necessary libraries
// --------------------------------------------------------------------
#include "$PATSYSROOT/options/PatLoad.opts"
#include "$TRACKSYSROOT/options/TrackLoad.opts"

// --------------------------------------------------------------------
// Pattern Recognition and Fitting
// --------------------------------------------------------------------
// Velo and Forward PR
// -------------------
// this is almost equivalent to #include "$PATSYSROOT/options/Hlt.opts"
RecoPatSeq.Members += { "PatInitEvent",
                        "CreateRawEvent",
                        "PatVeloDecodeRaw",
                        "PatVeloRTracking",
                        "PatVeloSpaceTracking",
                        "PatTTCoordFromRaw",
                        "PatTCoordFromRaw",
                        "PatForward"
                      };

RecoPatSeq.context = "HLT";
PatVeloDecodeRaw.MinCharge = 16;
PatForward.OutputName = "/Event/Rec/Track/Forward";
#include "$PATFORWARDROOT/options/PatFwdTool.opts"

RecoPatSeq.Members += { "TrackEventFitter/FitForward" };
FitForward.TracksInContainer  = "Rec/Track/Forward";
FitForward.TracksOutContainer = "Rec/Track/Forward";
FitForward.Fitter.FitUpstream = false;

// Velo-Seed Matching
// ------------------
RecoTrSeq.Members += { "TrackMatchVeloSeed",
                       "TrackEventFitter/FitMatch"
                     };
TrackMatchVeloSeed.InputVeloTracks = "/Event/Hlt/TrackSpaceVelo";
FitMatch.TracksInContainer  = "Rec/Track/Match";
FitMatch.TracksOutContainer = "Rec/Track/Match";

// KShort Finding
// --------------
RecoTrSeq.Members += { "PatKShort",
                       "TrackEventFitter/FitKShort"
                     };
#include "$PATKSHORTROOT/options/PatKShort.opts"
FitKShort.TracksInContainer  = "Rec/Track/KsTrack";
FitKShort.TracksOutContainer = "Rec/Track/KsTrack";
FitForward.Fitter.StateAtBeamLine = false;

// Velo-TT tracking
// ----------------
RecoTrSeq.Members += { "PatVeloTT" };
