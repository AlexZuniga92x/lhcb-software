 
// ====================================================================
//  Tracking reconstruction phase
// ====================================================================

// Start TransportSvc, needed by track fit
ApplicationMgr.ExtSvc += { "TransportSvc" };

// --------------------------------------------------------------------
// Pattern Recognition and Fitting
// --------------------------------------------------------------------

// Velo tracking
RecoVELOSeq.Members += { "PatInitEvent"
                         ,"DecodeVeloRawBuffer"
                         ,"PatVeloLoadClusters"
                         ,"PatVeloRTracking"
                         ,"PatVeloSpaceTracking"
                         ,"PatFilterUsedClusters"
                         ,"PatVeloGeneralTracking" 
};

// Decode also VeloClusters, needed for track fit
RecoVELOSeq.Members += { "DecodeVeloRawBuffer/DecodeVeloClusters" };
DecodeVeloClusters.DecodeToVeloLiteClusters = false;
DecodeVeloClusters.DecodeToVeloClusters     = true;

// TT clusters for pattern recognition and track fit
RecoTTSeq.Members += { "RawBankToSTClusterAlg/CreateTTClusters"
                       ,"RawBankToSTLiteClusterAlg/CreateTTLiteClusters"
                       ,"PatTTCoordFromRaw"
};

// IT clusters for pattern recognition and track fit
RecoITSeq.Members += { "RawBankToSTClusterAlg/CreateITClusters"
                       ,"RawBankToSTLiteClusterAlg/CreateITLiteClusters"
};
CreateITClusters.detType     = "IT";
CreateITLiteClusters.detType = "IT";
#include "$STTOOLSROOT/options/Brunel.opts"

// OTTimes for pattern recognition and track fit
RecoOTSeq.Members += { "OTTimeCreator" };

// Tracking sequence
RecoTrSeq.Members  += { "ProcessPhase/Track" };
Track.DetectorList  = { "ForwardPat", "ForwardPreFit", "ForwardFit"
                      , "SeedPat",    "SeedPreFit",    "SeedFit"
                      , "MatchPat",   "MatchPreFit",   "MatchFit"
                      , "KShortPat",  "KShortPreFit",  "KShortFit"
                      , "VeloTTPat",  "VeloTTPreFit",  "VeloTTFit"
                      , "PostFit",    "VeloPreFit",    "VeloFit"
                      , "AddExtraInfo"
                      };

// Forward pattern
TrackForwardPatSeq.Members += { "PatTCoordFromRaw", "PatForward" };
#include "$PATFORWARDROOT/options/PatFwdTool.opts"

// Forward fit
TrackForwardFitSeq.Members += { "TrackEventFitter/FitForward" };

// Seed pattern
TrackSeedPatSeq.Members += { "TsaOTClusterCreator", "TsaSTClusterCreator", 
                             "TsaInitialization" , "TsaSeed",
                             "TsaSeedTrackCnv" };
TsaSeed.xSearchS0.sector = 0;
TsaSeed.xSearchS1.sector = 1;
TsaSeed.xSearchS2.sector = 2;
TsaSeed.xSearchS3.sector = 3;
TsaSeed.xSearchS4.sector = 4;

TsaSeed.stereoS0.sector = 0;
TsaSeed.stereoS1.sector = 1;
TsaSeed.stereoS2.sector = 2;
TsaSeed.stereoS3.sector = 3;
TsaSeed.stereoS4.sector = 4;

// Seed fit
TrackSeedFitSeq.Members += { "TrackEventFitter/FitTsa" };

// Match pattern
TrackMatchPatSeq.Members +={ "TrackMatchVeloSeed/TrackMatch" };

// Match fit
TrackMatchFitSeq.Members += { "TrackEventFitter/FitMatch" };

// KShort pattern
TrackKShortPatSeq.Members += { "PatKShort" };

// KShort fit
TrackKShortFitSeq.Members += { "TrackEventFitter/FitKsTrack" };

// Velo-TT pattern
TrackVeloTTPatSeq.Members += { "PatVeloTT" };
#include "$PATVELOTTROOT/options/VeloTT.opts"

// Velo-TT fit
TrackVeloTTFitSeq.Members += { "TrackEventFitter/FitVeloTT" }; 

// Clone tracks killer: output is "best" container
TrackPostFitSeq.Members += { "TrackEventCloneKiller" };

// Prepare and fit velo tracks
TrackVeloPreFitSeq.Members += { "TrackPrepareVelo" };
TrackVeloFitSeq.Members    += { "TrackEventFitter/FitVelo" };

// Copy fitted velo tracks to Track/Best container
TrackVeloFitSeq.Members += { "TrackContainerCopy/CopyVelo" };
CopyVelo.inputLocation = "Rec/Track/PreparedVelo";

// Set of standard fitting options
#include "$TRACKSYSROOT/options/Fitting.opts"

// add the likelihood
TrackAddExtraInfoSeq.Members += { "TrackAddLikelihood" };

// Clone finding and flagging
TrackAddExtraInfoSeq.Members += { "GaudiSequencer/TrackClonesSeq" };
TrackClonesSeq.MeasureTime = true;
#include "$TRACKSYSROOT/options/TrackClones.opts"
