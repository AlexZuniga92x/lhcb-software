
// ====================================================================
//  Tracking reconstruction phase
// ====================================================================
Reco.DetectorList += { "VELO",
                       "TT",
                       "IT",
                       "OT",
                       "Tr"
                     };

// --------------------------------------------------------------------
// Load all necessary libraries
// --------------------------------------------------------------------
ApplicationMgr.DLLs += { "PatTools", "PatUtils",
                         "PatVelo", "PatVeloTT", "PatForward" };
ApplicationMgr.DLLs += { "STDAQ", "STAlgorithms" };
#include "$TRACKSYSROOT/options/TrackLoad.opts"

// --------------------------------------------------------------------
// Pattern Recognition and Fitting
// --------------------------------------------------------------------

// Velo tracking
RecoTrSeq.Members += { "PatInitEvent"
                       ,"DecodeVeloRawBuffer"
                       ,"PatVeloLoadClusters"
                       ,"PatVeloRTracking"
                       ,"PatVeloSpaceTracking"
};

// Decode also VeloClusters, needed for track fit
RecoVELOSeq.Members += { "DecodeVeloRawBuffer/DecodeVeloClusters" };
DecodeVeloClusters.DecodeToVeloLiteClusters = false;
DecodeVeloClusters.DecodeToVeloClusters     = true;

// TT clusters for pattern recognition and track fit
RecoTTSeq.Members += { "RawBankToSTClusterAlg/createTTClusters"
                      ,"RawBankToSTLiteClusterAlg/createTTLiteClusters"
                      ,"PatTTCoordFromRaw"
};

// IT clusters for pattern recognition and track fit
RecoITSeq.Members += { "RawBankToSTClusterAlg/createITClusters"
                      ,"RawBankToSTLiteClusterAlg/createITLiteClusters"
};
createITClusters.detType     = "IT";
createITLiteClusters.detType = "IT";

// OTTimes for pattern recognition and track fit
RecoOTSeq.Members += {"OTTimeCreator" };

// Velo-TT
RecoTrSeq.Members += { "PatVeloTT" };

// Forward tracking
RecoTrSeq.Members += {
                      ,"PatTCoordFromRaw"
                      ,"PatForward"
};
#include "$PATFORWARDROOT/options/PatFwdTool.opts"

// Fit Forward
RecoTrSeq.Members += { "TrackEventFitter/FitForward" };
FitForward.TracksInContainer = "Rec/Track/Forward";

// Fit VeloTT
//ER RecoTrSeq.Members += { "TrackEventFitter/FitVeloTT" };
FitVeloTT.TracksInContainer  = "Rec/Track/VeloTT";
FitVeloTT.Fitter.ZPositions={ 990.0, 2165.0 };

// Clone tracks killer: output is "best" container
// -----------------------------------------------
RecoTrSeq.Members += { "TrackEventCloneKiller" };
TrackEventCloneKiller.TracksInContainers  = { "Rec/Track/VeloTT"
                                            , "Rec/Track/Forward"
 };

// Prepare and fit Velo tracks
RecoTrSeq.Members += { "TrackPrepareVelo",
                       "TrackEventFitter/FitVelo" };

FitVelo.TracksInContainer  = "Rec/Track/PreparedVelo";
FitVelo.Fitter.ErrorP = 0.01;
FitVelo.Fitter.Extrapolator.ExtraSelectorName = "TrackSimpleExtraSelector";
FitVelo.Fitter.NodeFitter.Extrapolator.ExtraSelectorName = "TrackSimpleExtraSelector";
TrackSimpleExtraSelector.ExtrapolatorName = "TrackLinearExtrapolator";
FitVelo.Fitter.ZPositions = { 940. };

// Copy fitted Velo tracks to Track/Best container
RecoTrSeq.Members += { "TrackContainerCopy/CopyVelo" };
CopyVelo.inputLocation = "Rec/Track/PreparedVelo";



// ALL THE FOLLOWING DOES NOT EXIST YET! DO NOT COMMENT OUT!
// Seeding
// -------
//ApplicationMgr.DLLs += { "PatSeeding" };
//RecoTrSeq.Members   += { "PatSeedEvent",
//                         "TrackEventFitter/FitSeed" };
//FitSeed.TracksInContainer  = "Rec/Track/Seed";
//FitSeed.Fitter.ZPositions      = { 9450.0, 11900.0 };
//FitSeed.Fitter.StateAtBeamLine = false;

// Velo-Seed Matching
// ------------------
//RecoTrSeq.Members += { "TrackMatchVeloSeed",
//                       "TrackEventFitter/FitMatch"
//                     };
//FitMatch.TracksInContainer  = "Rec/Track/Match";

// KShort finding
// --------------
//RecoTrSeq.Members += { "PatKShort",
//                       "TrackEventFitter/FitKShort"
//                     };
//#include "$PATKSHORTROOT/options/PatKShort.opts"
//FitKShort.TracksInContainer  = "Rec/Track/KsTrack";
//FitForward.Fitter.StateAtBeamLine = false;

