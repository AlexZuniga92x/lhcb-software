<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'>
<gdd>
  <package name = 'TrackFitEvent'>
    <class name = 'VLPhiMeasurement'
           desc = 'Measurement made from a Phi-type VLCluster.'
           author = ''
           defaultconstructor = 'FALSE'
           serializers = 'FALSE'>
      <base name = 'LHCb::VLMeasurement'/>
      <import name = 'Event/VLMeasurement' />
      <import name = 'TrackInterfaces/IVLClusterPosition'/>
      <import name = 'StateVector' soft = 'FORWARDONLY'/>
      <import name = 'Event/VLCluster'/>
      <import name = 'DeVL' namespace = '::' soft = 'FORWARDONLY'/>
      <import name = 'DeVLPhiSensor' namespace = '::' soft = 'FORWARDONLY'/>

      <constructor desc = 'Constructor from VLCluster and refVector'>
        <arg type = 'VLCluster' name = 'cluster' const = 'TRUE'/>
        <arg type = 'DeVL' name = 'det' const = 'TRUE'/>
        <arg type = 'IVLClusterPosition' name = 'clusPosTool' const = 'TRUE'/>
        <arg type = 'LHCb::StateVector' name = 'refVector' const = 'TRUE'/>
      </constructor>

      <constructor desc = 'Constructor from VLCluster without refVector'>
        <arg type = 'VLCluster' name = 'cluster' const = 'TRUE'/>
        <arg type = 'DeVL' name = 'det' const = 'TRUE'/> 
        <arg type = 'IVLClusterPosition' name = 'clusPosTool' const = 'TRUE'/>
      </constructor>

      <attribute type = 'Gaudi::XYZPoint'
                 name = 'origin'
                 desc = 'Origin of the sensor'
                 access = 'PRIVATE'
                 getMeth = 'FALSE'
                 setMeth = 'FALSE'/>

      <method name = 'init'
              desc = 'Initialize the data members'
              access = 'PUBLIC'>
        <arg type = 'DeVL' name = 'det' const = 'TRUE'/>
        <arg type = 'IVLClusterPosition::toolInfo' name = 'clusinfo' const = 'TRUE'/>
      </method>

      <method type = 'double'
              name = 'resolution'
              desc = 'Retrieve the measurement error'
              argList = 'Gaudi::XYZPoint /*point*/, Gaudi::XYZVector /*vec*/'
              const = 'TRUE'>
      </method>

      <method type = 'double'
              name = 'resolution2'
              argList = 'Gaudi::XYZPoint /*point*/, Gaudi::XYZVector /*vec*/'
              desc = 'Retrieve the measurement error squared'
              const = 'TRUE'>
      </method>

      <method type = 'LHCb::VLPhiMeasurement*'
              name = 'clone'
              desc = 'Clone the VLPhiMeasurement'
              const = 'TRUE'>
        <code>
  return new LHCb::VLPhiMeasurement(*this);
        </code>
      </method>

      <method type = 'const DeVLPhiSensor&amp;'
              name = 'sensor'
              desc = 'Retrieve the sensor of the measurement'
              const = 'TRUE'>
      </method>

    </class>
  </package>
</gdd>
