<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'>
<gdd>
  <package name='TrackFitEvent'>

<!-- ============== VeloPhiMeasurement class definition ============== -->

    <class
      name        = 'VeloPhiMeasurement'
      author      = 'Jose Hernando, Eduardo Rodrigues'
      desc        = 'VeloPhiMeasurement is a measurement made from a VeloPhiCluster.'
      serializers = 'FALSE'>

      <base name='LHCb::Measurement' />
      <import name='Event/Measurement' />
      <import name='TrackInterfaces/IVeloClusterPosition'/>
      <import name='StateVector' soft='FORWARDONLY'/>
      <import name='Event/VeloCluster' />
      <import name='DeVelo' namespace='::' soft='FORWARDONLY'/>

      <constructor
        desc = 'Constructor from an VeloPhiCluster and a refVector'>
        <arg type = 'VeloCluster' name = 'cluster' const='TRUE' />
        <arg type = 'DeVelo' name = 'det' const='TRUE' />
        <arg type = 'IVeloClusterPosition' name = 'clusPosTool' const='TRUE' />
        <arg type = 'LHCb::StateVector' name='refVector' const='TRUE'/>
      </constructor>

      <constructor
        desc = 'Constructor from an VeloPhiCluster without a refVector'>
        <arg type = 'VeloCluster' name = 'cluster' const='TRUE' />
        <arg type = 'DeVelo' name = 'det' const='TRUE' />
        <arg type = 'IVeloClusterPosition' name = 'clusPosTool' const='TRUE' />
      </constructor>

      <attribute
        type = 'const LHCb::VeloCluster*'
        name = 'cluster'
        desc = 'Pointer to the VeloPhiCluster'
	getMeth = 'FALSE' />

      <attribute
        type = 'Gaudi::XYZPoint'
        name = 'origin'
        desc = 'Origin of the sensor'
        access = 'PRIVATE'
	getMeth = 'FALSE'
	setMeth = 'FALSE' />

      <method
        name   = 'init'
        desc   = 'Initialize the data members'
        access = 'PUBLIC'>
        <arg type = 'DeVelo' name = 'det' const='TRUE' />
        <arg type = 'IVeloClusterPosition::toolInfo' name = 'clusinfo'
	  const='TRUE' />
      </method>

      <method
        type  = 'const LHCb::VeloCluster*'
        name  = 'cluster'
        desc  = 'Retrieve const  Pointer to the VeloPhiCluster'
        const = 'TRUE'>
        <code>
  return m_cluster;
        </code>
      </method>

      <method
        type    = 'double'
        name    = 'resolution'
        argList = 'Gaudi::XYZPoint /*point*/, Gaudi::XYZVector /*vec*/'
        desc    = 'Retrieve the measurement error'
        const   = 'TRUE'>
      </method>

      <method
        type    = 'double'
        name    = 'resolution2'
        argList = 'Gaudi::XYZPoint /*point*/, Gaudi::XYZVector /*vec*/'
        desc    = 'Retrieve the measurement error squared'
        const   = 'TRUE'>
      </method>

      <method
        type    = 'LHCb::VeloPhiMeasurement*'
        name    = 'clone'
        desc    = 'Clone the VeloPhiMeasurement'
        const   = 'TRUE'>
        <code>
          return new LHCb::VeloPhiMeasurement(*this);
        </code>
      </method>



      <method
        type  = 'double'
        name  = 'totalCharge'
        desc  = 'Retrieve the cluster charge'
        const = 'TRUE'>
        <code>
  return m_cluster-&gt;totalCharge();
        </code>
	</method>


    </class>

  </package>
</gdd>
