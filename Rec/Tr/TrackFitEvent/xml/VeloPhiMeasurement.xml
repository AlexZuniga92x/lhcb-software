<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'>
<gdd>
  <package name='TrackFitEvent'>

<!-- ============== VeloPhiMeasurement class definition ============== -->

    <class
      name        = 'VeloPhiMeasurement'
      author      = 'Jose Hernando, Eduardo Rodrigues'
      desc        = 'VeloPhiMeasurement is a measurement made from a VeloPhiCluster.'
      serializers = 'FALSE'>

      <base name='LHCb::Measurement' />
      <import name='Event/Measurement' />
      <import name='Event/VeloCluster' />
      <import name='VeloDet/DeVelo'/>
      <import name='Kernel/TrackTypes.h'/>

      <constructor
        desc = 'Constructor from an VeloPhiCluster and a refVector'>
        <arg type = 'VeloCluster' name = 'cluster' const='TRUE' />
        <arg type = 'DeVelo' name = 'det' const='TRUE' />
        <arg type = 'Gaudi::TrackVector' name='refVector' const='TRUE'/>
      </constructor>

      <constructor
        desc = 'Constructor from an VeloPhiCluster without a refVector'>
        <arg type = 'VeloCluster' name = 'cluster' const='TRUE' />
        <arg type = 'DeVelo' name = 'det' const='TRUE' />
      </constructor>

     <destructor
        desc = 'Destructor to delete m_trajectory'>
        <code>
  delete m_trajectory;
        </code>
      </destructor>

      <attribute
        type = 'const LHCb::VeloCluster*'
        name = 'cluster'
        desc = 'Pointer to the VeloPhiCluster'
	getMeth = 'FALSE' />

      <method
        name   = 'init'
        desc   = 'Initialize the data members'
        access = 'PRIVATE'>
        <arg type = 'LHCb::VeloCluster' name = 'cluster' const='TRUE' />
        <arg type = 'DeVelo' name = 'det' const='TRUE' />
        <arg type = 'bool' name='refIsSet'/>
      </method>

      <method
        type  = 'const LHCb::VeloCluster*'
        name  = 'cluster'
        desc  = 'Retrieve const  Pointer to the VeloPhiCluster'
        const = 'TRUE'>
        <code>
  return m_cluster;
        </code>
      </method>

      <method
        type    = 'double'
        name    = 'resolution'
        desc    = 'Retrieve the measurement error'
        const   = 'TRUE'>
        <code>
  return sqrt( m_refVector(0)*m_refVector(0) + m_refVector(1)*m_refVector(1) ) * m_errMeasure;
        </code>
      </method>

      <method
        type    = 'double'
        name    = 'resolution2'
        desc    = 'Retrieve the measurement error squared'
        const   = 'TRUE'>
        <code>
  return ( m_refVector(0)*m_refVector(0) + m_refVector(1)*m_refVector(1) ) * m_errMeasure * m_errMeasure;
        </code>
      </method>

      <method
        type    = 'LHCb::VeloPhiMeasurement*'
        name    = 'clone'
        desc    = 'Clone the VeloPhiMeasurement'
        const   = 'TRUE'>
        <code>
  LHCb::VeloPhiMeasurement* me = new LHCb::VeloPhiMeasurement();
  LHCb::Trajectory* traj       = m_trajectory -&gt; clone();
  *me = *this;
  me -&gt; setTrajectory( traj );
  return me;
        </code>
      </method>

    </class>

  </package>
</gdd>
