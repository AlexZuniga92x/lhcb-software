<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'[
<!ENTITY OUTTYPE "STLiteMeasurement">
<!ENTITY INTYPE "STLiteCluster">
<!ENTITY ACCESSOR ".">
<!ENTITY POINTER "">
<!ENTITY STCommon SYSTEM "STMeasurement.ent">
]
>
<gdd>
  <package name='TrackFitEvent'>

<!-- ================ STLiteMeasurement class definition ================ -->

    <class
      name        = 'STLiteMeasurement'
      author      = 'M Needham'
      desc        = 'STLiteMeasurement is a measurement made from a STLite cluster (of TT or IT).'
      defaultconstructor ='FALSE'
      serializers = 'FALSE'>

      <base name='LHCb::Measurement' />
      <import name='Event/Measurement' />
      <import name='Event/STLiteCluster' />
      <import name='StateVector' soft='FORWARDONLY'/>
      <import name='STDet/DeSTDetector.h' />
      <import name='STDet/DeSTSector' />
      <import name='Kernel/ISTClusterPosition' />

 
      <attribute
        type = 'LHCb::STLiteCluster'
        name = 'cluster'
        desc = 'Access to the STLiteCluster'
        getMeth = 'TRUE'
        setMeth = "FALSE" />


        &STCommon;

<method
  type    = 'unsigned int'
  name    = 'size'
  desc    = 'cluster size'
  const   = 'TRUE'>
  <code>
     return m_cluster.pseudoSize();
  </code>
</method>


    </class>

  </package>
</gdd>

