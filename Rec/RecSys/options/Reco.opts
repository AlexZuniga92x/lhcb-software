//--------------------------------------------------------------
// Job options for Brunel Reco Phase
//--------------------------------------------------------------
Reco.DetectorList = { 
                      "VELO", 
                     // "TT",
                     // "IT",
                      "Tr",
                      "RICH",
                      "CALO"
                     // ,"MUON"
                    };

// Velo tracking
ApplicationMgr.DLLs += { "PatTools", "PatUtils", "PatVelo" };
RecoVELOSeq.Members += { "PatInitEvent"
                        ,"DecodeVeloRawBuffer"
                        ,"PatVeloLoadClusters"
                        ,"PatVeloRTracking"
                        ,"PatVeloSpaceTracking"
};
RecoVeloSeq.context = "HLT";

// TT reconstruction (clustering)
ApplicationMgr.DLLs += { "STAlgorithms" };
RecoITSeq.Members   += { "ITClusterCreator", "ITSummaryCreator" };
//#include "$ITALGORITHMSROOT/options/itRec.opts"

// Tracking tools
//ApplicationMgr.DLLs += { "TrFitter", "TrExtrapolator", "STTools" };
ApplicationMgr.ExtSvc += { "TransportSvc" };

// Forward tracking
ApplicationMgr.DLLs += { "PatForward" };
RecoTrSeq.Members += { 
  //"RawBankToSTLiteClusterAlg/createITLiteClusters"
                      ,"PatTCoordFromRaw"
                      ,"PatForward"
};
#include "$PATFORWARDROOT/options/PatFwdTool.opts"
// Next option to be removed when PatVeloTT is migrated and can run before
ToolSvc.PatForwardTool.ValidateInTT = false;

//RecoTrSeq.Members   += { "TrEventTracksFitter/FitFw" };
FitFw.TrackContainer = "Rec/FitTrack/Forward";

// Seeding
//ApplicationMgr.DLLs += { "Seeding" }; 
//RecoTrSeq.Members   += { "TrSeedEvent/seedEvent",
//                         "TrEventTracksFitter/fitSeed" };
//#include "$SEEDINGROOT/options/Brunel.opts"
seedEvent.FilterCluster = true; // Enable filtering of T clusters
ToolSvc.ClusterFilter.Containers = { "Rec/FitTrack/Forward" };

// Velo Matching
//ApplicationMgr.DLLs += { "TrMatching" }; 
//RecoTrSeq.Members   += { "TrMatchVeloSeed/matchVeloSeed",
//                         "TrEventTracksFitter/reFit" };
reFit.TrackContainer = "Rec/FitTrack/Match";

// K Short tracking
//ApplicationMgr.DLLs += { "TrKShort" };
//#include "$TRKSHORTROOT/options/Brunel.opts"
//RecoTrSeq.Members   += { "FindTrKShort"
//                       , "TrEventTracksFitter/KShortFit" };
KShortFit.TrackContainer = "Rec/FitTrack/KsTrack";
KShortFit.Fitter.stateAtBeamLine = false;

// Clone killer
//ApplicationMgr.DLLs += { "TrCleanEx" };
//RecoTrSeq.Members   += { "TrTrackCloneKiller" };

// VeloTT tracking
//ApplicationMgr.DLLs += { "VeloTT" };
//RecoTrSeq.Members   += { "VeloTTFind" };
//#include "$VELOTTROOT/options/BrunelField045.opts"
//RecoTrSeq.Members   += { "TrPrepareVelo" };

// Conversion to TrStoredTrack
//RecoTrSeq.Members += { "TrFit2StoredTrackCnv/StoreBest" };
//#include "$TRCLEANEXROOT/options/Brunel.opts"
TrTrackCloneKiller.flagMode = true;

// Conversion to Track
//ApplicationMgr.DLLs += { "TrackTools", "TrConverters" };
//RecoTrSeq.Members += { "TrFitTrack2TrackCnv/StoreBestTrack" };
StoreBestTrack.InputTracks  = "Rec/FitTrack/Best";
StoreBestTrack.OutputTracks = "Rec/Track/Best";

// Rich, using Track
ApplicationMgr.DLLs += { "TrackExtrapolators" };
ApplicationMgr.DLLs += { "RichTools", "RichRecTools", "RichRecAlgorithms",
                         "RichGlobalPID", "RichLocalPID", "RichPIDMerge" };
#include "$RICHRECSYSOPTS/RecoToolPara.opts"
// Temporary, while waiting for tracks
RecoRICHSeq.Members += { "RichRecInit" };
//#include "$RICHRECSYSOPTS/RecoOfflineAlgs.opts"

// Calorimeter reconstruction
//ApplicationMgr.DLLs += { "CaloReco", "CaloPIDs" };
//#include "$CALORECOOPTS/Brunel.opts"
//#include "$CALORECOOPTS/Reco.opts"
//#include "$CALORECOOPTS/Filters.opts"
//#include "$CALOPIDSOPTS/Brunel.opts"

// Muon coordinate reconstruction, MuonID, cleaning
//ApplicationMgr.DLLs += { "MuonTools", "MuonRec", "MuonID" };
RecoMUONSeq.Members += { "MuonRec", "MuonIDFOI" };
//#include "$MUONIDROOT/options/MuonIDFOI.opts"
