//--------------------------------------------------------------
// Job options for Brunel Reco Phase
//--------------------------------------------------------------
Reco.DetectorList = { 
                      "VELO" 
                     ,"TT"
                     ,"IT"
                     ,"OT"
                     ,"Tr"
                     ,"RICH"
                     ,"CALO"
                     ,"MUON"
                     ,"PROTO"
                    };

// Velo tracking
ApplicationMgr.DLLs += { "PatTools", "PatUtils", "PatVelo" };
RecoVELOSeq.Members += { "PatInitEvent"
                        ,"DecodeVeloRawBuffer"
                        ,"PatVeloLoadClusters"
                        ,"PatVeloRTracking"
                        ,"PatVeloSpaceTracking"
};

// Decode also VeloClusters, needed for track fit
RecoVELOSeq.Members += { "DecodeVeloRawBuffer/DecodeVeloClusters" };
DecodeVeloClusters.DecodeToVeloLiteClusters = false;
DecodeVeloClusters.DecodeToVeloClusters = true;

ApplicationMgr.DLLs += { "STAlgorithms", "PatVeloTT" };

// TT clusters for pattern recognition and track fit
RecoTTSeq.Members += { "RawBankToSTClusterAlg/createTTClusters"
                      ,"RawBankToSTLiteClusterAlg/createTTLiteClusters"
                      ,"PatTTCoordFromRaw"
};

// IT clusters for pattern recognition and track fit
RecoITSeq.Members += { "RawBankToSTClusterAlg/createITClusters"
                      ,"RawBankToSTLiteClusterAlg/createITLiteClusters"
};
createITClusters.detType     = "IT";
createITLiteClusters.detType = "IT";

// OTTimes for pattern recognition and track fit
RecoOTSeq.Members += {"OTTimeCreator" };

//-------------------------------------------------------------------------
// Tracking pattern recognition
//-------------------------------------------------------------------------

// Velo-TT 
RecoTrSeq.Members += { "PatVeloTT" };

// Forward tracking
ApplicationMgr.DLLs += { "PatForward" };
RecoTrSeq.Members += { 
                      ,"PatTCoordFromRaw"
                      ,"PatForward"
};
#include "$PATFORWARDROOT/options/PatFwdTool.opts"

// Next option to be removed when PatForward is adapted to use TT decoding
ToolSvc.PatForwardTool.ValidateInTT = false;


//-------------------------------------------------------------------------
// Track fit
//-------------------------------------------------------------------------
ApplicationMgr.DLLs += { "TrackExtrapolators",
                         "TrackProjectors",
                         "VeloTools",
                         "STTools",
                         "TrackTools",
                         "TrackFitter"
                       };
ApplicationMgr.ExtSvc += { "TransportSvc" };
// Options for IT instance of STClusterPositionTool, needed by track fit
#include "$STTOOLSROOT/options/Brunel.opts"

// Fit Forward
RecoTrSeq.Members += { "TrackEventFitter/FitForward" };
FitForward.TracksInContainer  = "Rec/Track/Forward"; 

// Temporary, to reduce fit failure rate
FitForward.Fitter.ErrorX2 = 1.0;
FitForward.Fitter.ErrorY2 = 10.0;
FitForward.Fitter.ErrorTX2 = 1.0e-5;
FitForward.Fitter.ErrorTY2 = 1.0e-3;
FitForward.Fitter.ErrorP = 0.02;

// Fit VeloTT
RecoTrSeq.Members += { "TrackEventFitter/FitVeloTT" }; 
FitVeloTT.TracksInContainer  = "Rec/Track/VeloTT"; 
FitVeloTT.Fitter.ZPositions={ 990.0, 2165.0 };

// Clone tracks killer: output is "best" container 
// -----------------------------------------------
ApplicationMgr.DLLs += { "TrackUtils" }; 
RecoTrSeq.Members += { "TrackEventCloneKiller" }; 
TrackEventCloneKiller.TracksInContainers  = { 
                                             "Rec/Track/VeloTT"
                                           , "Rec/Track/Forward"};

// prepare and fit velo tracks
RecoTrSeq.Members += { "TrackPrepareVelo",
                       "TrackEventFitter/FitVelo", 
                       "TrackContainerCopy" };

TrackContainerCopy.inputLocation = "Rec/Track/PreparedVelo";
FitVelo.TracksInContainer  = "Rec/Track/PreparedVelo";
FitVelo.Fitter.ErrorP = 0.01;
FitVelo.Fitter.Extrapolator.ExtraSelectorName = "TrackSimpleExtraSelector";
FitVelo.Fitter.NodeFitter.Extrapolator.ExtraSelectorName = "TrackSimpleExtraSelector";
TrackSimpleExtraSelector.ExtrapolatorName = "TrackLinearExtrapolator";
FitVelo.Fitter.ZPositions = {940.};


// Primary vertex
ApplicationMgr.DLLs += { "PatPV" };
RecoTrSeq.Members   += { "PatPVOffline" };
// Temporary specification of input tracks
PatPVOffline.InputTracks = {"Rec/Track/Forward","Rec/Track/Velo"};



// Rich
ApplicationMgr.DLLs += { "RichTools", "RichRecTools", "RichRecAlgorithms",
                         "RichGlobalPID", "RichLocalPID", "RichPIDMerge" };
#include "$RICHRECSYSOPTS/RecoToolPara.opts"
#include "$RICHRECSYSOPTS/RecoOfflineAlgs.opts"

// Calorimeter reconstruction
ApplicationMgr.DLLs += { "CaloReco", "CaloPIDs" };
#include "$CALORECOOPTS/Brunel.opts"
#include "$CALORECOOPTS/PhotonPDF.opts"

// Muon ID
ApplicationMgr.DLLs += { "MuonRec", "MuonID" };
RecoMUONSeq.Members += { "MuonRec" };
RecoMUONSeq.Members += { "MuonID" };
#include "$MUONIDROOT/options/MuonID.opts"

// Global Reco (ProtoParticles)
ApplicationMgr.DLLs += { "GlobalReco" };
#include "$GLOBALRECOOPTS/Reco.opts"
