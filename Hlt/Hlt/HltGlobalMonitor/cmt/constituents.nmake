
!include $(CMTROOT)/src/NMakefile.core

!if defined (tag)
CMTEXTRATAGS = $(tag)
!else
tag       = $(CMTCONFIG)
!endif

tags      = $(tag),$(CMTEXTRATAGS)

HltCommon_tag = $(tag)

!if [echo (constituents.nmake) Rebuilding $(HltCommon_tag).nmake] == 0
!endif

!if [cmt -quiet build tag_makefile -tag_add=$(tags) >$(HltCommon_tag).nmake] == 0
!endif

!include $(HltCommon_tag).nmake

all ::

#--------------------------------------------------------

cmt_lock_setup = lock$(cmt_lock_pid).nmake
cmt_setup_pid  = $(bin)setup.nmake

config ::  ##$(HltCommon_tag).nmake

env.nmake ::
	@set >env.nmake.tmp; $(cmtexe) -quiet check files env.nmake.tmp env.nmake

all ::

javadirs ::
	@if not exist $(javabin) mkdir $(javabin)

srcdirs ::
	@if not exist $(src) mkdir $(src)

dirs ::
	@if not exist requirements echo "No requirements file"
	@echo (constituents.nmake) Rebuilding setup.nmake
	@if not exist $(bin) mkdir $(bin)
	@$(cmtexe) -quiet -tag=$(tags) show setup   >$(cmt_setup_pid)
	@echo setup.nmake ok

.DEFAULT :
        @echo "???"


all_groups :: all

all :: $(all_constituents)
	@echo " all ok."

clean :: allclean

allclean ::  $(all_constituentsclean)
	@echo $(all_constituentsclean)
	@echo " allclean ok."

allclean :: makefilesclean


all_groups :: cmt_actions

cmt_actions :: $(cmt_actions_constituents)
	@echo " cmt_actions ok."

clean :: allclean

cmt_actionsclean ::  $(cmt_actions_constituentsclean)
	@echo $(cmt_actions_constituentsclean)
	@echo " cmt_actionsclean ok."

cmt_actionsclean :: makefilesclean

#-- start of constituent ------

cmt_HltCommon_has_no_target_tag = 1

#--------------------------------------------------------

!if defined (cmt_HltCommon_has_target_tag)

cmt_local_tagfile_HltCommon = $(HltCommon_tag)_HltCommon.nmake
cmt_final_setup_HltCommon = $(bin)HltCommon_HltCommon_setup.nmake
cmt_local_HltCommon_makefile = $(bin)HltCommon.nmake

HltCommon_extratags = -tag_add=target_HltCommon

!if [if not exist $(bin) mkdir $(bin)] == 0
!endif

!if [cmt -quiet -tag=$(tags) $(HltCommon_extratags) build tag_makefile >$(cmt_local_tagfile_HltCommon)] == 0
!endif

!if [$(cmtexe) -quiet -tag=$(tags) $(HltCommon_extratags) show setup >$(cmt_final_setup_HltCommon)] == 0
!endif

!else

cmt_local_tagfile_HltCommon = $(HltCommon_tag).nmake
cmt_final_setup_HltCommon = $(bin)HltCommon_setup.nmake
cmt_local_HltCommon_makefile = $(bin)HltCommon.nmake

!endif

$(cmt_local_HltCommon_makefile) :: $(HltCommon_dependencies) $(cmt_local_tagfile_HltCommon) dirs
	@echo (constituents.nmake) Building HltCommon.nmake
	@set include=$(include)
	@set lib=$(lib)
	@$(cmtexe) -quiet -tag=$(tags) $(HltCommon_extratags) build -nmake constituent_makefile HltCommon
	@move HltCommon.nmake $(bin)
	@echo (constituents.nmake) HltCommon.nmake done

HltCommon :: $(HltCommon_dependencies) $(cmt_local_HltCommon_makefile)
	@echo (constituents.nmake) Starting HltCommon
	@set include=$(include)
	@set lib=$(lib)
	@$(MAKE) /nologo /f $(cmt_local_HltCommon_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles HltCommon tag=$(tag)
	@echo (constituents.nmake) HltCommon done

clean :: HltCommonclean

HltCommonclean :: $(HltCommonclean_dependencies) ##$(cmt_local_HltCommon_makefile)
	@echo (constituents.nmake) Starting HltCommonclean
	@set include=$(include)
	@set lib=$(lib)
	@-if exist $(cmt_local_HltCommon_makefile) $(MAKE) /nologo /f $(cmt_local_HltCommon_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles HltCommonclean tag=$(tag)
	@echo (constituents.nmake) HltCommonclean done

install :: HltCommoninstall

HltCommoninstall :: $(HltCommon_dependencies) $(cmt_local_HltCommon_makefile)
	@echo (constituents.nmake) Starting install HltCommon
	@set include=$(include)
	@set lib=$(lib)
	@-$(MAKE) /nologo /f $(cmt_local_HltCommon_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles install tag=$(tag)
	@echo (constituents.nmake) install HltCommon done

uninstall :: HltCommonuninstall

HltCommonuninstall :: $(cmt_local_HltCommon_makefile)
	@echo (constituents.nmake) Starting uninstall HltCommon"
	@set include=$(include)
	@set lib=$(lib)
	@-$(MAKE) /nologo /f $(cmt_local_HltCommon_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles uninstall tag=$(tag)
	@echo (constituents.nmake) uninstall HltCommon done

#-- end of constituent ------
#-- start of constituent ------

cmt_HltCommonRootMap_has_no_target_tag = 1

#--------------------------------------------------------

!if defined (cmt_HltCommonRootMap_has_target_tag)

cmt_local_tagfile_HltCommonRootMap = $(HltCommon_tag)_HltCommonRootMap.nmake
cmt_final_setup_HltCommonRootMap = $(bin)HltCommon_HltCommonRootMap_setup.nmake
cmt_local_HltCommonRootMap_makefile = $(bin)HltCommonRootMap.nmake

HltCommonRootMap_extratags = -tag_add=target_HltCommonRootMap

!if [if not exist $(bin) mkdir $(bin)] == 0
!endif

!if [cmt -quiet -tag=$(tags) $(HltCommonRootMap_extratags) build tag_makefile >$(cmt_local_tagfile_HltCommonRootMap)] == 0
!endif

!if [$(cmtexe) -quiet -tag=$(tags) $(HltCommonRootMap_extratags) show setup >$(cmt_final_setup_HltCommonRootMap)] == 0
!endif

!else

cmt_local_tagfile_HltCommonRootMap = $(HltCommon_tag).nmake
cmt_final_setup_HltCommonRootMap = $(bin)HltCommon_setup.nmake
cmt_local_HltCommonRootMap_makefile = $(bin)HltCommonRootMap.nmake

!endif

$(cmt_local_HltCommonRootMap_makefile) :: $(HltCommonRootMap_dependencies) $(cmt_local_tagfile_HltCommonRootMap) dirs
	@echo (constituents.nmake) Building HltCommonRootMap.nmake
	@set include=$(include)
	@set lib=$(lib)
	@$(cmtexe) -quiet -tag=$(tags) $(HltCommonRootMap_extratags) build -nmake constituent_makefile HltCommonRootMap
	@move HltCommonRootMap.nmake $(bin)
	@echo (constituents.nmake) HltCommonRootMap.nmake done

HltCommonRootMap :: $(HltCommonRootMap_dependencies) $(cmt_local_HltCommonRootMap_makefile)
	@echo (constituents.nmake) Starting HltCommonRootMap
	@set include=$(include)
	@set lib=$(lib)
	@$(MAKE) /nologo /f $(cmt_local_HltCommonRootMap_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles HltCommonRootMap tag=$(tag)
	@echo (constituents.nmake) HltCommonRootMap done

clean :: HltCommonRootMapclean

HltCommonRootMapclean :: $(HltCommonRootMapclean_dependencies) ##$(cmt_local_HltCommonRootMap_makefile)
	@echo (constituents.nmake) Starting HltCommonRootMapclean
	@set include=$(include)
	@set lib=$(lib)
	@-if exist $(cmt_local_HltCommonRootMap_makefile) $(MAKE) /nologo /f $(cmt_local_HltCommonRootMap_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles HltCommonRootMapclean tag=$(tag)
	@echo (constituents.nmake) HltCommonRootMapclean done

install :: HltCommonRootMapinstall

HltCommonRootMapinstall :: $(HltCommonRootMap_dependencies) $(cmt_local_HltCommonRootMap_makefile)
	@echo (constituents.nmake) Starting install HltCommonRootMap
	@set include=$(include)
	@set lib=$(lib)
	@-$(MAKE) /nologo /f $(cmt_local_HltCommonRootMap_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles install tag=$(tag)
	@echo (constituents.nmake) install HltCommonRootMap done

uninstall :: HltCommonRootMapuninstall

HltCommonRootMapuninstall :: $(cmt_local_HltCommonRootMap_makefile)
	@echo (constituents.nmake) Starting uninstall HltCommonRootMap"
	@set include=$(include)
	@set lib=$(lib)
	@-$(MAKE) /nologo /f $(cmt_local_HltCommonRootMap_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles uninstall tag=$(tag)
	@echo (constituents.nmake) uninstall HltCommonRootMap done

#-- end of constituent ------
#-- start of constituent ------

cmt_make_has_target_tag = 1

#--------------------------------------------------------

!if defined (cmt_make_has_target_tag)

cmt_local_tagfile_make = $(HltCommon_tag)_make.nmake
cmt_final_setup_make = $(bin)HltCommon_make_setup.nmake
cmt_local_make_makefile = $(bin)make.nmake

make_extratags = -tag_add=target_make

!if [if not exist $(bin) mkdir $(bin)] == 0
!endif

!if [cmt -quiet -tag=$(tags) $(make_extratags) build tag_makefile >$(cmt_local_tagfile_make)] == 0
!endif

!if [$(cmtexe) -quiet -tag=$(tags) $(make_extratags) show setup >$(cmt_final_setup_make)] == 0
!endif

!else

cmt_local_tagfile_make = $(HltCommon_tag).nmake
cmt_final_setup_make = $(bin)HltCommon_setup.nmake
cmt_local_make_makefile = $(bin)make.nmake

!endif

$(cmt_local_make_makefile) :: $(make_dependencies) $(cmt_local_tagfile_make) dirs
	@echo (constituents.nmake) Building make.nmake
	@set include=$(include)
	@set lib=$(lib)
	@$(cmtexe) -quiet -tag=$(tags) $(make_extratags) build -nmake constituent_makefile make
	@move make.nmake $(bin)
	@echo (constituents.nmake) make.nmake done

make :: $(make_dependencies) $(cmt_local_make_makefile)
	@echo (constituents.nmake) Starting make
	@set include=$(include)
	@set lib=$(lib)
	@$(MAKE) /nologo /f $(cmt_local_make_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles make tag=$(tag)
	@echo (constituents.nmake) make done

clean :: makeclean

makeclean :: $(makeclean_dependencies) ##$(cmt_local_make_makefile)
	@echo (constituents.nmake) Starting makeclean
	@set include=$(include)
	@set lib=$(lib)
	@-if exist $(cmt_local_make_makefile) $(MAKE) /nologo /f $(cmt_local_make_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles makeclean tag=$(tag)
	@echo (constituents.nmake) makeclean done

install :: makeinstall

makeinstall :: $(make_dependencies) $(cmt_local_make_makefile)
	@echo (constituents.nmake) Starting install make
	@set include=$(include)
	@set lib=$(lib)
	@-$(MAKE) /nologo /f $(cmt_local_make_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles install tag=$(tag)
	@echo (constituents.nmake) install make done

uninstall :: makeuninstall

makeuninstall :: $(cmt_local_make_makefile)
	@echo (constituents.nmake) Starting uninstall make"
	@set include=$(include)
	@set lib=$(lib)
	@-$(MAKE) /nologo /f $(cmt_local_make_makefile) $(MAKEFLAGS) build_strategy=keep_makefiles uninstall tag=$(tag)
	@echo (constituents.nmake) uninstall make done

#-- end of constituent ------

clean :: remove_library_links

remove_library_links ::
	@echo "Removing library links"
	@$(remove_library_links)

makefilesclean ::
	@if exist *.make.* del *.make*

###	@if exist checkuses del checkuses

clean :: makefilesclean

binclean :: clean
	@del /Q $(bin)\*

