# bless some old v12r5 TCK for v12r8...



bless = [ ( 'Calibration_VeloMicroBias', [ '3336d097506f653777f904586b585191'
                                          , '82c17e438a7ae8ef75886a96516689ef'
                                          , 'c4ace4aa078bec1fe5988d5a55b60c21'
                                          , '8c928c174ee9c414f373002c6e143427'
                                          , 'e49b7c6d8ee929d2b021f7b978746139'
                                          , '00ec5561c0843f555cfc5335a880052e'
                                          ] )
        , ( 'PassThrough' , [ 'd7729757255943112dbfd53aca01c899'
                             , '90f307c12f9b3380d345c60fbb95780a'
                             , '4cf62439888c8abbef180bcfcafc9a18'
                             ] )
        ]

x = createAccessSvcSingleton( cas = ConfigTarFileAccessSvc(Mode='ReadWrite'))
for (tp, ids) in bless :
    for id in ids :
        print tp,id
        c = x.resolveConfigTreeNode(id)
        t = topLevelAlias('MOORE_v12r8',tp,c)
        x.writeConfigTreeNodeAlias(t) 
        print 'wrote %s' % t



# kill LowMultPhoton


def prescale_lowmultphoton(id,label,tck) :
	cas = ConfigTarFileAccessSvc(Mode='ReadWrite')
    patch = { 'id' : id
            , 'updates' : { 'Hlt2LowMultPhotonPreScaler' : { 'AcceptFraction'  : '0.001' } }
            , 'label' : '%s, Hlt2LowMultPhoton=0.001' % (label)
            , 'cas'   : cas }
	ids = { tck:  updateProperties( **patch ) }
	createTCKEntries( ids, cas =  cas )


prescale_lowmultphoton('3b738af40a733157ae40d6f20b670400','Default',0x00760037) 


# fix bit 77: remove Hlt2Lumi from it...
def fix77(id,label,tck) :
	cas = ConfigTarFileAccessSvc(Mode='ReadWrite')
    rb = getProperty(id,'HltRoutingBitsWriter','RoutingBits',cas)
    rb = eval(rb)
    rb[77] = "HLT_PASS_RE('Hlt2(?!Forward)(?!DebugEvent)(?!Express)(?!Transparent)(?!Lumi)(?!PassThrough).*Decision')"
    rb[66] = "HLT_PASS_RE('Hlt2(?!Transparent)(?!Lumi).*Decision')"
    m = getProperty(0x00770037,'HltGlobalMonitor','DecToGroupHlt2',cas)
    m = eval(m)
    m['Lumi'] = [ 'Hlt2LumiDecision' ]
    m['Other'] = [ x for x in m['Other'] if x != 'Hlt2LumiDecision' ]
    patch = { 'id' : id
            , 'updates' : { 'HltRoutingBitsWriter' : { 'RoutingBits'  : rb.__str__() }
                          , 'HltGlobalMonitor' : { 'DecToGroupHlt2' : m.__str__() }
                          }
            , 'label' : label
            , 'cas'   : cas }
	ids = { tck:  updateProperties( **patch ) }
	createTCKEntries( ids, cas =  cas )


fix77( 'c285a9cf68cda6b951bd86ef00f484b4','Default', 0x00780037)
