/** @file TrueDstar.opts
 *  
 *  Options for running HLT2 only on truth
 *
 *  @author P. Koppenburg
 *  @date 2007-07-20
 */
//--------------------------------------------------------------
//
// Truth filter for D* -> D0(hh)pi
//
//SeqHlt2TruthFilter.Members += { "PrintMCTree"};
PrintMCTree.ParticleNames = { "D*(2010)+", "D*(2010)-" } ;
SeqHlt2TruthFilter.Members += { "FilterDesktop/SelectTrueDecay"};
SelectTrueDecay.PhysDesktop.InputLocations = { "Phys/HltNoPIDsKaons", "Phys/HltNoPIDsPions" } ;
SelectTrueDecay.Filter.Selections =  { "K+ : TrueMCFilterCriterion/Dstar",
                                       "pi+ : TrueMCFilterCriterion/Dstar"} ;

SelectTrueDecay.Filter.Dstar.MCDecayFinder.Decay = "{[D*(2010)+ -> (D0 -> ^K- ^pi+ {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc, [D*(2010)+ -> (D0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc, [D*(2010)+ -> (D0 -> ^pi+ ^pi- {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc, [D*(2010)+ -> (D0 -> ^K+ ^K- {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc}" ;
SelectTrueDecay.Filter.Dstar.ExpectSignal = true ;

//
// Dummy MakeResonances to check that all tracks are there
//
SeqHlt2TruthFilter.Members += { "MakeResonances/AllTrueDstar"};
AllTrueDstar.PhysDesktop.InputLocations = {"Phys/SelectTrueDecay"};
AllTrueDstar.DecayDescriptor = "[D*(2010)+ -> pi+ pi- pi+]cc" ; // all particles need to be there
Hlt2SelectionsCorrs.Algorithms += { "AllTrueDstar" };

/*
 *  Now for tracks
 */
SeqTrueSignalTracks.Members = { "FilterTrueTracks" };

FilterTrueTracks.MCDecayFinder.Decay =  "{[D*(2010)+ -> (D0 -> ^K- ^pi+ {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc, [D*(2010)+ -> (D0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc, [D*(2010)+ -> (D0 -> ^pi+ ^pi- {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc, [D*(2010)+ -> (D0 -> ^K+ ^K- {,gamma}{,gamma}{,gamma}) ^pi+  {,gamma}{,gamma}]cc}" ;
FilterTrueTracks.TracksPath = { "Hlt/Track/ForwardCLEANED" } ;
FilterTrueTracks.OutputPath = "Hlt/Track/Signal" ;
FilterTrueTracks.OutputLevel = 3 ;
