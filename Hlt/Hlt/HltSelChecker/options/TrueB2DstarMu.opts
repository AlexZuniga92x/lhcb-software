/** @file TrueB2DstarMu.opts
 *  
 *  Options for running exclusive HLT only on truth
 *
 *  @author P. Koppenburg
 *  @date 2007-07-20
 */
//--------------------------------------------------------------
//
// Truth filter for Bd -> D0K*
//
//SeqHlt2TruthFilter.Members += { "PrintMCTree"};
PrintMCTree.ParticleNames = {"B0", "B~0" } ;
SeqHlt2TruthFilter.Members += { "FilterDesktop/SelectTrueDecay"};
SelectTrueDecay.PhysDesktop.InputLocations = { "Phys/HltNoPIDsKaons", "Phys/HltNoPIDsPions", 
                                                   "Phys/HltMuons" } ;
SelectTrueDecay.Filter.Selections =  { "K+ : TrueMCFilterCriterion/B2DstarMu",
                                          "pi+ : TrueMCFilterCriterion/B2DstarMu",
                                           "mu+ : TrueMCFilterCriterion/B2DstarMu"} ;
// this one see,s to work
SelectTrueDecay.Filter.B2DstarMu.MCDecayFinder.Decay = "{[[B0]nos -> nu_mu ^mu+ {,gamma}{,gamma} (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B~0]os -> nu_mu ^mu+ {,gamma}{,gamma} (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B0]nos -> nu_tau {,gamma} (tau+ -> ^mu+ nu_mu nu_tau~ {,gamma}{,gamma}) (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B~0]os -> nu_tau {,gamma} (tau+ -> ^mu+ nu_mu nu_tau~ {,gamma}{,gamma}) (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc}" ;
SelectTrueDecay.Filter.B2DstarMu.ExpectSignal = true ;

//
// Dummy MakeResonances to check that all tracks are there
//
SeqHlt2TruthFilter.Members += { "MakeResonances/AllTrueB2DstarMu"};
AllTrueB2DstarMu.PhysDesktop.InputLocations = {"Phys/SelectTrueDecay"};
AllTrueB2DstarMu.DecayDescriptor = "[B0 -> mu+ pi- pi- K+]cc" ; // all particles need to be there
HltSelectionsCorrs.Algorithms += { "AllTrueB2DstarMu" };

/*
 *  Now for tracks
 */
SeqTrueSignalTracks.Members = { "FilterTrueTracks" };

FilterTrueTracks.MCDecayFinder.Decay =  "{[[B0]nos -> nu_mu ^mu+ {,gamma}{,gamma} (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B~0]os -> nu_mu ^mu+ {,gamma}{,gamma} (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B0]nos -> nu_tau {,gamma} (tau+ -> ^mu+ nu_mu nu_tau~ {,gamma}{,gamma}) (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B~0]os -> nu_tau {,gamma} (tau+ -> ^mu+ nu_mu nu_tau~ {,gamma}{,gamma}) (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc}" ;
FilterTrueTracks.TracksPath = { "Hlt/Track/ForwardCLEANED" } ;
FilterTrueTracks.OutputPath = "Hlt/Track/Signal" ;
FilterTrueTracks.OutputLevel = 3 ;
/*
 *  Now for muons tracks
 */
SeqTrueSignalMuons.Members = {  "FilterTrueTracks/FilterTrueMuons" };

FilterTrueMuons.MCDecayFinder.Decay =  "{[[B0]nos -> nu_mu ^mu+ {,gamma}{,gamma} (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B~0]os -> nu_mu ^mu+ {,gamma}{,gamma} (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B0]nos -> nu_tau {,gamma} (tau+ -> ^mu+ nu_mu nu_tau~ {,gamma}{,gamma}) (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc, [[B~0]os -> nu_tau {,gamma} (tau+ -> ^mu+ nu_mu nu_tau~ {,gamma}{,gamma}) (D*(2010)- -> ^pi- {,gamma}{,gamma} (D~0 -> ^K+ ^pi- {,gamma}{,gamma}{,gamma})) ...]cc}" ;
FilterTrueMuons.TracksPath = { "Hlt/Track/MuonsFromAlley" } ;
FilterTrueMuons.OutputPath = "Hlt/Track/SignalMuons" ;
FilterTrueMuons.OutputLevel = 3 ;
