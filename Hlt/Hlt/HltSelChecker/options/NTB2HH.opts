//==============================================================================
// Checking B -> H H
//==============================================================================
// Author: Luis Fernandez, 10/12/2004

// The offline selection (note that the PreLoadParticles/Combined must be added before)
#include "$B2HHROOT/options/DoTDRselB2HH.opts"
TDRselBd2PiPi.deltaMassCut = 50.0*MeV; // 600 MeV/c2
TDRselBd2KPi.deltaMassCut  = 50.0*MeV; // 600 MeV/c2
TDRselBs2PiK.deltaMassCut  = 50.0*MeV; // 600 MeV/c2
TDRselBs2KK.deltaMassCut   = 50.0*MeV; // 1200 MeV/c2

ApplicationMgr.TopAlg += {"GaudiSequencer/CheckHLTB2HH"};

CheckHLTB2HH.IgnoreFilterPassed = false ; // Act as Sequencer
CheckHLTB2HH.MeasureTime = false;

CheckHLTB2HH.Members ={ "TrgL0Filter", "PrintHeader/PassedL0",
                        "TrgL1Filter", "PrintHeader/PassedL1",
                        "HltFilter/HltGenericFilter", "PrintHeader/PassedHltGeneric",
                        "CheckSelResult/MergeOffB2HH",
                        "DecayChainNTuple/OffB2HHTree",
                        "CheckSelResult/MergeHLTB2HH",
                        "ResetOnOffline/HLTB2HHTreeSetOnline",
                        "DecayChainNTuple/HLTB2HHTree"};
 
PassedL0.OutputLevel = 3;
PassedL1.OutputLevel = 3;
PassedHltGeneric.OutputLevel = 3;
HltGenericFilter.RequireHLT = false;
HltGenericFilter.RequireGeneric = true; 

MergeOffB2HH.Algorithms = {"TDRselBd2PiPi", "TDRselBd2KPi", "TDRselBs2KK", "TDRselBs2PiK"};
MergeOffB2HH.ANDmode = false;
MergeOffB2HH.AvoidSelResult = false;
MergeHLTB2HH.Algorithms = { "HLTFilterB2HH"};

MergeOffB2HH.OutputLevel = 4;
MergeHLTB2HH.OutputLevel = 4;

// Important !!!
HLTB2HHTreeSetOnline.ResetToOnline = true;

//------------------------------------------------------------------------------
// Write Tree for Off selection
OffB2HHTree.PhysDesktop.InputLocations = {"Phys/TDRselBd2PiPi", "Phys/TDRselBd2KPi", "Phys/TDRselBs2KK", "Phys/TDRselBs2PiK"};

OffB2HHTree.CompositeParticle2MCLinks.skipResonances = true;
// OffB2HHTree.InputComposite = {"Phys/TDRselBd2PiPi/Particles", "Phys/TDRselBd2KPi/Particles", "Phys/TDRselBs2KK/Particles", "Phys/TDRselBs2PiK/Particles"};

OffB2HHTree.LinkAsct.Location      = "Phys/Relations/Particle2MCLinksOffB2HH";
OffB2HHTree.LinkAsct.AlgorithmType = "Particle2MCLinks";
OffB2HHTree.LinkAsct.AlgorithmName = "Particle2MCLinksOffB2HH";
OffB2HHTree.LinkAsct.OutputLevel = 3;

Particle2MCLinksOffB2HH.InputData  = {"Phys/Combined/Particles"};
Particle2MCLinksOffB2HH.OutputLevel = 3;

// WARNING: The offline does not create B~0 (B_s~0) but always B0 (B_s0)
OffB2HHTree.Decay = "{B0 -> ^pi+ ^pi-, B0 -> ^K+ ^pi-, B~0 -> ^K- ^pi+, B_s0 -> ^K+ ^K-, B_s0 -> ^pi+ ^K-, B_s0 -> ^pi- ^K+}";
OffB2HHTree.MCDecay = "{B0 -> ^pi+ ^pi-, B~0 -> ^pi+ ^pi-, B0 -> ^K+ ^pi-, B0 -> ^K- ^pi+, B~0 -> ^K- ^pi+, B~0 -> ^K+ ^pi-
, B_s0 -> ^K+ ^K-, B_s~0 -> ^K+ ^K-, B_s0 -> ^pi+ ^K-, B_s0 -> ^pi- ^K+, B_s~0 -> ^pi- ^K+, B_s~0 -> ^pi+ ^K-}";
OffB2HHTree.NtupleName = "FILE1/OffB2HH";
OffB2HHTree.FillMCDecay = true;
OffB2HHTree.RequireTrigger = true;
OffB2HHTree.OutputLevel = 3;
//------------------------------------------------------------------------------

// Warning : check that you run the Trg Rich options when setting UseRichOnlinePID = true;

//------------------------------------------------------------------------------
// Write Tree for HLT selection
HLTB2HHTree.PhysDesktop.InputLocations = {"Phys/HLTFilterB2HH"};

HLTB2HHTree.CompositeParticle2MCLinks.skipResonances = true;
// HLTB2HHTree.InputComposite = {"Phys/HLTFilterB2HH/Particles"};
HLTB2HHTree.CompositeParticle2MCLinks.IgnorePID = true; // since we always select B0 -> pi+ pi-

HLTB2HHTree.LinkAsct.Location      = "Phys/Relations/Particle2MCLinksHLTB2HH";
HLTB2HHTree.LinkAsct.AlgorithmType = "Particle2MCLinks";
HLTB2HHTree.LinkAsct.AlgorithmName = "Particle2MCLinksHLTB2HH";
HLTB2HHTree.LinkAsct.OutputLevel = 3;

Particle2MCLinksHLTB2HH.InputData  = {"Phys/HLTPions/Particles", "Phys/HLTKaons/Particles", "Phys/HLTPreselPions/Particles", "Phys/HLTPreselKaons/Particles"};
Particle2MCLinksHLTB2HH.OutputLevel = 3;

// In the HLT we always form B0 -> pi+ pi-
HLTB2HHTree.Decay = "B0 -> ^pi+ ^pi-";
HLTB2HHTree.MCDecay = "{B0 -> ^pi+ ^pi-, B~0 -> ^pi+ ^pi-, B0 -> ^K+ ^pi-, B0 -> ^K- ^pi+, B~0 -> ^K- ^pi+, B~0 -> ^K+ ^pi-
, B_s0 -> ^K+ ^K-, B_s~0 -> ^K+ ^K-, B_s0 -> ^pi+ ^K-, B_s0 -> ^pi- ^K+, B_s~0 -> ^pi- ^K+, B_s~0 -> ^pi+ ^K-}";
HLTB2HHTree.NtupleName = "FILE1/HLTB2HH";
HLTB2HHTree.FillMCDecay = true;
HLTB2HHTree.RequireTrigger = true;
HLTB2HHTree.UseRichOnlinePID = false;
HLTB2HHTree.OutputLevel = 3;
//------------------------------------------------------------------------------
