//==============================================================================
// B_s0 -> (D_s- -> K+ K- pi-) {pi+, K+} and cc
//==============================================================================
// Author: Luis Fernandez, 10/12/2004

// The exclusive offline selection
#include "$BS2DSHROOT/options/DoTDRselBs2DsH.opts" // exclusive 
TDRselBs2DsK.massWindowBs = 50.*MeV; // 500 MeV
TDRselBs2DsPi.massWindowBs = 50.*MeV; // 500 MeV

ApplicationMgr.TopAlg += {"GaudiSequencer/CheckHLTBs2DsH"};

CheckHLTBs2DsH.IgnoreFilterPassed = false ; // Act as Sequencer
CheckHLTBs2DsH.MeasureTime = false;

CheckHLTBs2DsH.Members ={ "TrgL0Filter", "PrintHeader/PassedL0",
                          "TrgL1Filter", "PrintHeader/PassedL1",
                          "HltFilter/HltGenericFilter", "PrintHeader/PassedHltGeneric",
                          "CheckSelResult/MergeOffBs2DsH", "PrintHeader/PassedOffBs2DsH",
                          "DecayChainNTuple/OffBs2DsHTree", "PrintHeader/PassedOffBs2DsHTree",
                          "CheckSelResult/MergeHLTBs2DsH", "PrintHeader/PassedHLTBs2DsH",
                          "DecayChainNTuple/HLTBs2DsHTree", "PrintHeader/PassedHLTBs2DsHTree"};

PassedL0.OutputLevel = 3;
PassedL1.OutputLevel = 3;
PassedHltGeneric.OutputLevel = 3;
HltGenericFilter.RequireHLT = false;
HltGenericFilter.RequireGeneric = true;  

PassedOffBs2DsH.OutputLevel = 3;
PassedOffBs2DsHTree.OutputLevel = 3;
PassedHLTBs2DsH.OutputLevel = 3;
PassedHLTBs2DsHTree.OutputLevel = 3;

MergeOffBs2DsH.Algorithms = {"TDRselBs2DsPi", "TDRselBs2DsK"};
MergeOffBs2DsH.ANDmode = false;
MergeOffBs2DsH.AvoidSelResult = false;
MergeHLTBs2DsH.Algorithms = {"HLTFilterBs2DsH"};

MergeOffBs2DsH.OutputLevel = 4;
MergeHLTBs2DsH.OutputLevel = 4;

//------------------------------------------------------------------------------
// Write Tree for Off selection
OffBs2DsHTree.PhysDesktop.InputLocations = {"Phys/TDRselBs2DsPi", "Phys/TDRselBs2DsK"};

OffBs2DsHTree.CompositeParticle2MCLinks.skipResonances = true;
// OffBs2DsHTree.InputComposite = {"Phys/TDRselBs2DsPi/Particles", "Phys/TDRselBs2DsK/Particles"};

OffBs2DsHTree.LinkAsct.Location      = "Phys/Relations/Particle2MCLinksOffBs2DsH";
OffBs2DsHTree.LinkAsct.AlgorithmType = "Particle2MCLinks";
OffBs2DsHTree.LinkAsct.AlgorithmName = "Particle2MCLinksOffBs2DsH";
OffBs2DsHTree.LinkAsct.OutputLevel = 3;

Particle2MCLinksOffBs2DsH.InputData  = {"Phys/CombinedForBs2DsH/Particles"};
Particle2MCLinksOffBs2DsH.OutputLevel = 3;

// WARNING: The offline does not create B_s~0 but always B_s0
OffBs2DsHTree.Decay = "{B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^pi+, B_s0 -> (^D_s+ => ^K- ^K+ ^pi+) ^pi-, B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^K+, B_s0 -> (^D_s+ => ^K- ^K+ ^pi+) ^K-}";
OffBs2DsHTree.MCDecay = "{B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^pi+, B_s0 -> (^D_s+ => ^K- ^K+ ^pi+) ^pi-, B_s~0 -> (^D_s+ => ^K- ^K+ ^pi+) ^pi-, B_s~0 -> (^D_s- => ^K+ ^K- ^pi-) ^pi+
,B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^K+, B_s0 -> (^D_s+ => ^K- ^K+ ^pi+) ^K-, B_s~0 -> (^D_s+ => ^K- ^K+ ^pi+) ^K-, B_s~0 -> (^D_s- => ^K+ ^K- ^pi-) ^K+}";
OffBs2DsHTree.NtupleName = "FILE1/OffBs2DsH";
OffBs2DsHTree.FillMCDecay = true;
OffBs2DsHTree.RequireTrigger = true;
OffBs2DsHTree.OutputLevel = 3;
//------------------------------------------------------------------------------

// Warning : check that you run the Trg Rich options when setting UseRichOnlinePID = true;

//------------------------------------------------------------------------------
// Write Tree for HLT selection
HLTBs2DsHTree.PhysDesktop.InputLocations = {"Phys/HLTFilterBs2DsH"};

HLTBs2DsHTree.CompositeParticle2MCLinks.skipResonances = true;
// HLTBs2DsHTree.InputComposite = {"Phys/HLTFilterBs2DsH/Particles"};
// HLTBs2DsHTree.CompositeParticle2MCLinks.IgnorePID = true; // since we always select B_s0 -> D_s- pi+, the bachelor is always a pi

HLTBs2DsHTree.LinkAsct.Location      = "Phys/Relations/Particle2MCLinksHLTBs2DsH";
HLTBs2DsHTree.LinkAsct.AlgorithmType = "Particle2MCLinks";
HLTBs2DsHTree.LinkAsct.AlgorithmName = "Particle2MCLinksHLTBs2DsH";
HLTBs2DsHTree.LinkAsct.OutputLevel = 3;

Particle2MCLinksHLTBs2DsH.InputData  = {"Phys/HLTPions/Particles", "Phys/HLTKaons/Particles",  "Phys/HLTPreselPions/Particles", "Phys/HLTPreselKaons/Particles"};
Particle2MCLinksHLTBs2DsH.OutputLevel = 3;

HLTBs2DsHTree.Decay = "{B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^pi+, B_s~0 -> (^D_s+ => ^K- ^K+ ^pi+) ^pi-, B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^K+, B_s~0 -> (^D_s+ => ^K- ^K+ ^pi+) ^K-}";
HLTBs2DsHTree.MCDecay = "{B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^pi+, B_s0 -> (^D_s+ => ^K- ^K+ ^pi+) ^pi-, B_s~0 -> (^D_s+ => ^K- ^K+ ^pi+) ^pi-, B_s~0 -> (^D_s- => ^K+ ^K- ^pi-) ^pi+
,B_s0 -> (^D_s- => ^K+ ^K- ^pi-) ^K+, B_s0 -> (^D_s+ => ^K- ^K+ ^pi+) ^K-, B_s~0 -> (^D_s+ => ^K- ^K+ ^pi+) ^K-, B_s~0 -> (^D_s- => ^K+ ^K- ^pi-) ^K+}";
HLTBs2DsHTree.NtupleName = "FILE1/HLTBs2DsH";
HLTBs2DsHTree.FillMCDecay = true;
HLTBs2DsHTree.RequireTrigger = true;
HLTBs2DsHTree.UseRichOnlinePID = false;
HLTBs2DsHTree.OutputLevel = 3;
//------------------------------------------------------------------------------
HLTBs2DsHTree.Context = "HLT" ;
