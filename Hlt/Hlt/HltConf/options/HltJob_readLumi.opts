/** @file 
 * 
 *  Example file to run a HLT job.
 *  This file defines, sequences and configures the algorithms 
 *  to be executed
 *
 */

//
// read Lumi sequences
//

// init is needed for ANNSvc
#include "$HLTSYSROOT/options/HltLumiInit.opts"

ApplicationMgr.TopAlg += {"GaudiSequencer/readLumiSequence"};

// readLumi sequence
readLumiSequence.Members = {
  // raw dump
  "RawEventDump/RawEventDump",
  // filter on Odin trigger types
  "OdinTypesFilter/OdinTypesFilter",
  // reading back the bank 
  "HltLumiSummaryDecoder/HltLumiSummaryDecoder",
  // sequences depending on Odin BX types
  "GaudiSequencer/Hlt1LumiBXTypesSequence",

  // histos
  // "LumiHistoCollector/LumiHistoCollector",
};

// *************************************************
// container sequence (just to make sure it doesn't block)
Hlt1LumiBXTypesSequence.Members = {
  // sequences depending on Odin BX types
  "GaudiSequencer/Hlt1LumiBeamCrossingSequence",
  "GaudiSequencer/Hlt1LumiNoBeamSequence",
  "DummyLumiAlley/HltDummyBXType"
};

// *************************************************
// place for histograms with NoBeam condition
Hlt1LumiNoBeamSequence.Members = {
  "OdinTypesFilter/FilterNoBeam",
  "HltLumiOdinReader/OdinReaderNoBeam",
  "LumiHistoMaker/NoBeam"  // place for histograms with NoBeam condition  
};

// place for histograms with BeamCrossing condition
Hlt1LumiBeamCrossingSequence.Members = {
  "OdinTypesFilter/FilterBeamCrossing",
  "HltLumiOdinReader/OdinReaderBeamCrossing",
  "LumiHistoMaker/BeamCrossing"  // place for histograms with BeamCrossing condition  
};


//-------------------------------------------------------------------------
//  Lumi options
//-------------------------------------------------------------------------
readLumiSequence.MeasureTime = true;
readLumiSequence.OutputLevel=3;


HltLumiSummaryDecoder.OutputLevel=4;

RawEventDump.DumpData=false;
RawEventDump.OutputLevel=4;


Hlt1LumiBXTypesSequence.ModeOr = true;         // should always pass
Hlt1LumiBXTypesSequence.ShortCircuit = false;  // execute the last always
Hlt1LumiBXTypesSequence.MeasureTime = true;
Hlt1LumiBXTypesSequence.OutputLevel=3;

FilterNoBeam.BXTypes={"NoBeam"};
OdinReaderNoBeam.OutputLevel=4;
Hlt1LumiNoBeamSequence.MeasureTime = true;
Hlt1LumiNoBeamSequence.OutputLevel=4;

FilterBeamCrossing.BXTypes={"BeamCrossing"};
OdinReaderBeamCrossing.OutputLevel=4;
Hlt1LumiBeamCrossingSequence.MeasureTime = true;
Hlt1LumiBeamCrossingSequence.OutputLevel=4;

NoBeam.OutputLevel=4;
BeamCrossing.OutputLevel=4;
LumiHistoCollector.OutputLevel=4;


//
//  Message level
//
MessageSvc.OutputLevel                  = 3;
ToolSvc.OutputLevel                     = 3;
XmlParserSvc.OutputLevel                = 4;

MessageSvc.Format = "% F%40W%S%7W%R%T %0W%M";

