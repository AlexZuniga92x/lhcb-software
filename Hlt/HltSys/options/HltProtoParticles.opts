/** @file 
 *
 *  Hlt exclusive selections particle making
 *
 *  @author P. Koppenburg
 *  @date 2006-02-01
 */
//---------------------------------------------------------------------
// Charged ProtoParticles
//---------------------------------------------------------------------
HltSelections.Members += { "GaudiSequencer/SeqHltProtoParticles" } ;
SeqHltProtoParticles.MeasureTime = true ;
SeqHltProtoParticles.IgnoreFilterPassed = true ; // do all
SeqHltProtoParticles.Members += { "GaudiSequencer/SeqHltCharged" } ;
SeqHltCharged.MeasureTime = true ;
SeqHltCharged.IgnoreFilterPassed = false ;
/**
 * @todo TEMPORARY clone killer - waiting to understand duplicated tracks
 */
SeqHltCharged.Members += {
  "TrackEventCloneKiller/HltFullRecoTEMPORARYCloneKiller"} ;
HltFullRecoTEMPORARYCloneKiller.TracksInContainers = { "Hlt/Track/Forward_Alleys" };
HltFullRecoTEMPORARYCloneKiller.TracksOutContainer = "Hlt/Track/ForwardCLEANED" ;
HltFullRecoTEMPORARYCloneKiller.SkipSameContainerTracks = false ;
HltFullRecoTEMPORARYCloneKiller.CloneFinderTool.CompareAtLHCbIDsLevel = true ;
/**
 * @todo TEMPORARY kill huge events
 */
SeqHltCharged.Members += { "NumberOfTracksFilter" };
NumberOfTracksFilter.TrackLocations = { "Hlt/Track/ForwardCLEANED" };
NumberOfTracksFilter.MaxTracks = 1000 ;
/*
 * MC truth associated tracks
 */
SeqHltCharged.Members += { "GaudiSequencer/SeqTrueSignalTracks" }; // debug
/*
 * Hacking of errors
 */
SeqHltCharged.Members += { "HltInsertTrackErrParam"} ;
HltInsertTrackErrParam.InputLocation = "Hlt/Track/ForwardCLEANED" ;

//---------------------------------------------------------------------
// MuonID
//---------------------------------------------------------------------
SeqHltProtoParticles.Members += { "GaudiSequencer/HltMuonIDSeq"} ;
HltMuonIDSeq.Members += { "MuonRec", "MuonID/HltMuonID" };
#include "$HLTSYSROOT/options/HltMuonID.opts"
HltMuonID.TrackLocation = "Hlt/Track/ForwardCLEANED" ;
HltMuonID.MuonIDLocation = "Hlt/Muon/MuonPID" ;
HltMuonID.MuonTrackLocation = "Hlt/Track/Muon";

//----------------------------------------------------------------------------------------------------
// C.Jones : RICH options
// Disabled by default. To enable uncomment the lines below
//----------------------------------------------------------------------------------------------------

// Global algorithm, using all three radiators
//#include "$RICHHLTSYSOPTS/GlobalPID_AllRads.opts"

// Global algorithm, using only the gas radiators (faster, but no low P PID)
//#include "$RICHHLTSYSOPTS/GlobalPID_GasRads.opts"

// Local algorithm (fastest)
#include "$RICHHLTSYSOPTS/LocalPID.opts"

// temporary, to use the cleaned forward tracks
ToolSvc.HLT.RichTrackCreator.TracksLocation = "Hlt/Track/ForwardCLEANED";

// Explicitly run the RICH reco sequence
//SeqHltCharged.Members += { "GaudiSequencer/HltRICHReco" };
// ... or on-demand only when really needed
//DataOnDemandSvc.Algorithms += {"DATA='/Event/Rec/Rich/HltPIDs' TYPE='GaudiSequencer/HltRICHReco'"};
//----------------------------------------------------------------------------------------------------

//---------------------------------------------------------------------
// ChargedProtoPAlg
//---------------------------------------------------------------------
SeqHltProtoParticles.Members += { "ChargedProtoPAlg/HltChargedProtoPAlg" } ;
HltChargedProtoPAlg.InputTrackLocation = "Hlt/Track/ForwardCLEANED" ; // Correct this
// HltChargedProtoPAlg.InputTrackLocation = "Hlt/Track/Forward" ; // Correct this
HltChargedProtoPAlg.OutputProtoParticleLocation = "Hlt/ProtoP/Charged" ;
SeqHltProtoParticles.Members += { "ChargedProtoCombineDLLsAlg/HltChargedProtoCombDLL" };
HltChargedProtoCombDLL.ProtoParticleLocation = "Hlt/ProtoP/Charged" ;

//---------------------------------------------------------------------
// ProtoParticles
//---------------------------------------------------------------------
//HltChargedProtoPAlg.InputRichPIDLocation = "Rec/Rich/HltPIDs";
HltChargedProtoPAlg.InputMuonPIDLocation = "Hlt/Muon/MuonPID";
// no calo yet
HltChargedProtoPAlg.UseCaloSpdPID = false ;
HltChargedProtoPAlg.UseCaloPrsPID = false ;
HltChargedProtoPAlg.UseCaloEcalPID = false ;
HltChargedProtoPAlg.UseCaloHcalPID = false ;
HltChargedProtoPAlg.UseCaloBremPID = false ;
//HltChargedProtoPAlg.UseRichPID = false ; // Protos will NOT have any RICH information - HltRichPIDsKaons will not work
HltChargedProtoPAlg.UseRichPID = true ;    // Use this to add RICH info to the HLT protos, needed for HltRichPIDsKaons
HltChargedProtoPAlg.UseMuonPID = true ;
HltChargedProtoPAlg.UseVeloPID = false ;

//---------------------------------------------------------------------
// Charged Particles - Here make all to Pi and K
//---------------------------------------------------------------------
SeqHltProtoParticles.Members += { "PreLoadParticles/HltNoPIDsPions",
	                         "PreLoadParticles/HltNoPIDsKaons" }; 

HltNoPIDsPions.PhysDesktop.ParticleMakerType = "NoPIDsParticleMaker" ;
HltNoPIDsPions.PhysDesktop.NoPIDsParticleMaker.Inputs =  {"Hlt/ProtoP/Charged"} ;
HltNoPIDsPions.PhysDesktop.NoPIDsParticleMaker.Particle =  "pion" ;
HltNoPIDsPions.DecayDescriptor = "Pion" ;

HltNoPIDsKaons.PhysDesktop.ParticleMakerType = "NoPIDsParticleMaker" ;
HltNoPIDsKaons.PhysDesktop.NoPIDsParticleMaker.Inputs =  {"Hlt/ProtoP/Charged"} ;
HltNoPIDsKaons.PhysDesktop.NoPIDsParticleMaker.Particle =  "kaon" ;
HltNoPIDsKaons.DecayDescriptor = "Kaon" ;

// CRJ : Hack to make the 'NoPIDs' kaons use the RICH - Easy way to get everything downstream using the RICH
/*
HltNoPIDsKaons.PhysDesktop.ParticleMakerType = "CombinedParticleMaker" ;
HltNoPIDsKaons.PhysDesktop.CombinedParticleMaker.ExclusiveSelection = false ;
HltNoPIDsKaons.PhysDesktop.CombinedParticleMaker.InputProtoParticles = "Hlt/ProtoP/Charged";
HltNoPIDsKaons.PhysDesktop.CombinedParticleMaker.Particles = {"kaon"} ;
HltNoPIDsKaons.PhysDesktop.CombinedParticleMaker.TrackSelector.TrackTypes = {"Long"};
HltNoPIDsKaons.PhysDesktop.CombinedParticleMaker.Kaon.Selection = {"RequiresDet='RICH' CombDLL(k-pi)>'-5.0'"} ;
HltNoPIDsKaons.DecayDescriptor = "Kaon" ;
*/

//---------------------------------------------------------------------
// Kaons using RICH HLT reco results
//---------------------------------------------------------------------
SeqHltProtoParticles.Members += { "PreLoadParticles/HltRichPIDsKaons" }; 

HltRichPIDsKaons.PhysDesktop.ParticleMakerType = "CombinedParticleMaker" ;
HltRichPIDsKaons.PhysDesktop.CombinedParticleMaker.ExclusiveSelection = false ;
HltRichPIDsKaons.PhysDesktop.CombinedParticleMaker.InputProtoParticles = "Hlt/ProtoP/Charged";
HltRichPIDsKaons.PhysDesktop.CombinedParticleMaker.Particles = {"kaon"} ;
HltRichPIDsKaons.PhysDesktop.CombinedParticleMaker.TrackSelector.TrackTypes = {"Long"};
HltRichPIDsKaons.PhysDesktop.CombinedParticleMaker.Kaon.Selection = {"RequiresDet='RICH' CombDLL(k-pi)>'-5.0'"} ;
HltRichPIDsKaons.DecayDescriptor = "Kaon" ;

//---------------------------------------------------------------------
// Muons sequence
//---------------------------------------------------------------------
SeqHltProtoParticles.Members += { "GaudiSequencer/SeqHltMuons" } ;
SeqHltMuons.IgnoreFilterPassed = true ;
//---------------------------------------------------------------------
// Muons from Long tracks
//---------------------------------------------------------------------
SeqHltMuons.Members += { "PreLoadParticles/HltForwardMuons" }; 
HltForwardMuons.PhysDesktop.ParticleMakerType = "CombinedParticleMaker" ;
HltForwardMuons.PhysDesktop.CombinedParticleMaker.ExclusiveSelection = false ;
HltForwardMuons.PhysDesktop.CombinedParticleMaker.Particles = {"muon"} ;
HltForwardMuons.PhysDesktop.CombinedParticleMaker.Muon.Selection = {"RequiresDet='MUON'" } ;
HltForwardMuons.PhysDesktop.CombinedParticleMaker.TrackSelector.TrackTypes = {"Long"};
HltForwardMuons.PhysDesktop.CombinedParticleMaker.InputProtoParticles =  "/Event/Hlt/ProtoP/Charged" ;
HltForwardMuons.DecayDescriptor = "Muon" ;
//---------------------------------------------------------------------
// Special case for muons from L0
//---------------------------------------------------------------------
SeqHltMuons.Members += { "HltMuonForTES"} ;
//HltMuonForTES.InputSingleLocation ="Hlt/Track/MuonsForwardSingle";
//HltMuonForTES.InputDimuonLocation ="Hlt/Track/DiMuonsForward";
HltMuonForTES.InputSingleLocation ="Hlt/Selection/Track/MuonAndTVelo";
HltMuonForTES.InputDimuonLocation ="Hlt/Selection/Track/DiMuonAndTVelo";

HltMuonForTES.OutputMuonLocation ="Hlt/Track/MuonsFromAlley";
HltMuonForTES.OutputLevel =3;
// ToolSvc.CloneFinderTool.CompareAtLHCbIDsLevel=true;
HltMuonForTES.CloneFinderTool.CompareAtLHCbIDsLevel=true;

// Hacking of errors
SeqHltMuons.Members += { "HltInsertTrackErrParam/HltInsertTrackErrParamMuons"} ;
HltInsertTrackErrParamMuons.InputLocation = "Hlt/Track/MuonsFromAlley" ;

SeqHltMuons.Members += { "GaudiSequencer/SeqTrueSignalMuons" } ; // debug

SeqHltMuons.Members += { "ChargedProtoPAlg/HltMuonPAlg" } ;
//HltMuonPAlg.InputTrackLocation = "Hlt/Track/ForwardMuonRefined" ; 
//HltMuonPAlg.InputTrackLocation = "Hlt/Track/MuonsForward" ; 
HltMuonPAlg.InputTrackLocation = "Hlt/Track/MuonsFromAlley";
HltMuonPAlg.OutputProtoParticleLocation = "Hlt/ProtoP/Muons" ;
HltMuonPAlg.OutputLevel=3;
HltMuonPAlg.UseCaloSpdPID = false ;
HltMuonPAlg.UseCaloPrsPID = false ;
HltMuonPAlg.UseCaloEcalPID = false ;
HltMuonPAlg.UseCaloHcalPID = false ;
HltMuonPAlg.UseCaloBremPID = false ;
HltMuonPAlg.UseRichPID = false ;
HltMuonPAlg.UseMuonPID = false ; // not needed
HltMuonPAlg.UseVeloPID = false ;

SeqHltMuons.Members += { "PreLoadParticles/HltAlleyMuons" };
HltAlleyMuons.PhysDesktop.ParticleMakerType = "NoPIDsParticleMaker" ;
HltAlleyMuons.PhysDesktop.NoPIDsParticleMaker.Inputs =  { "Hlt/ProtoP/Muons"} ;
HltAlleyMuons.PhysDesktop.NoPIDsParticleMaker.Particle =  "muon" ;
HltAlleyMuons.DecayDescriptor = "Muon" ;

//---------------------------------------------------------------------
/// Now merge muons    @todo : kill clones
//---------------------------------------------------------------------
SeqHltMuons.Members += { "FilterDesktop/HltMuons"};
HltMuons.PhysDesktop.InputLocations = { "Phys/HltAlleyMuons", "Phys/HltForwardMuons" };

//---------------------------------------------------------------------
// Special case for electrons - NO ELECTRON ID YET
//---------------------------------------------------------------------
//SeqHltProtoParticles.Members += { "PreLoadParticles/HltElectrons"};
HltElectrons.PhysDesktop.ParticleMakerType = "NoPIDsParticleMaker" ;
HltElectrons.PhysDesktop.NoPIDsParticleMaker.Inputs =  {"Hlt/ProtoP/Charged"} ;
HltElectrons.PhysDesktop.NoPIDsParticleMaker.Particle =  "electron" ;
HltElectrons.DecayDescriptor = "Electron" ;

//---------------------------------------------------------------------
// Special case for photons - NO PHOTONS YET
//---------------------------------------------------------------------
