//---------------------------
// HLT Reconstruction
//--------------------------

// in Had Alley #include "$HLTSYSROOT/options/HltRecoSequence.opts"

//---------------------------
// HLT Pho Alley
//--------------------------
HltSummaryWriter.Save += {"L0PhotonDecision",
                          "Hlt1PhotonDiTrackDecision"
};

Hlt1Global.InputSelections += {"Hlt1PhotonDiTrackDecision"};

Hlt1PhoAlleySequence.Members = {
  "GaudiSequencer/PrepareL0PhotonDecisionSeq",
  "HltTrackFilter/Hlt1PhoTFPhoton",
  "GaudiSequencer/Hlt1RecoRZVeloSequence",
  "HltTrackFilter/Hlt1PhoTFRZVelo",
  "HltTrackUpgrade/Hlt1PhoTUVelo",
  "HltTrackFilter/Hlt1PhoTFVelo",
  "GaudiSequencer/HltDecodeT",
  "GaudiSequencer/HltDecodeTT",
  "HltTrackUpgrade/Hlt1PhoTUForward",
  "HltTrackFilter/Hlt1PhoTFForward",
  "HltVertexMaker1/Hlt1PhoVMDiTrack",
  "HltVertexFilter/Hlt1PhoVFDiTrack",
  "HltAddPhotonToVertex/Hlt1PhotonDiTrackDecision"
};
Hlt1PhoAlleySequence.MeasureTime = true;

//-------------------------------------------------------------------------
// HLT PhoAlley options (CaloAlleySequence cuts)
//-------------------------------------------------------------------------


Hlt1PhoTFPhoton.InputSelection = "L0PhotonDecision";
Hlt1PhoTFPhoton.FilterDescriptor = {"IsPhoton,>,0.5"};

Hlt1PhoTFRZVelo.InputSelection     = "RZVelo";
Hlt1PhoTFRZVelo.FilterDescriptor = {"rIP_PV2D,||[],0.10,3.0"};
Hlt1PhoTFRZVelo.HistogramUpdatePeriod = 0;
Hlt1PhoTFRZVelo.HistoDescriptor = { "rIP" : ("rIP",-1.,3.,400), "rIPBest" : ("rIPBest",-1.,3.,400)};
Hlt1PhoTFRZVelo.OutputLevel = 3;

//  Velo Reco
Hlt1PhoTUVelo.InputSelection = "Hlt1PhoTFRZVelo";
Hlt1PhoTUVelo.RecoName = "Velo";

//    3D IP selection
Hlt1PhoTFVelo.InputSelection     = "Hlt1PhoTUVelo";
Hlt1PhoTFVelo.FilterDescriptor = {"IP_PV2D,||[],0.15,3.0"};
Hlt1PhoTFVelo.HistogramUpdatePeriod = 0;
Hlt1PhoTFVelo.HistoDescriptor = { "IP" : ("IP",-1.,3.,400), "IPBest" : ("IPBest",-1.,3.,400) };
Hlt1PhoTFVelo.OutputLevel = 3;

//  upgrade to Forward 
Hlt1PhoTUForward.InputSelection = "Hlt1PhoTFVelo";
Hlt1PhoTUForward.RecoName = "Forward";

//  Pt cut (call it pretrigger sice couldn't implement veloTT)
Hlt1PhoTFForward.InputSelection     = "Hlt1PhoTUForward";
Hlt1PhoTFForward.FilterDescriptor = {"PT,>,650."};
Hlt1PhoTFForward.HistogramUpdatePeriod = 0;
Hlt1PhoTFForward.HistoDescriptor =  { "PT"     : ("PT",0.,8000.,100), "PTBest" : ("PTBest",0.,8000.,100) };
Hlt1PhoTFForward.OutputLevel = 3;

// two track vertex: DOCA
Hlt1PhoVMDiTrack.InputSelection    = "Hlt1PhoTFForward";
Hlt1PhoVMDiTrack.FilterDescriptor = { "DOCA,<,0.2"};
Hlt1PhoVMDiTrack.HistoDescriptor = { "DOCA":("DOCA",0.,3.,100), "DOCABest":("DOCABest",0.,3.,100) };

// two track vertex: DZ
Hlt1PhoVFDiTrack.InputSelection = "Hlt1PhoVMDiTrack";
Hlt1PhoVFDiTrack.FilterDescriptor = { "VertexDz_PV2D,>,0."};
Hlt1PhoVFDiTrack.HistoDescriptor = { "VertexDz_PV2D":("VertexDz_PV2D",-3.,3.,100), "VertexDz_PV2DBest":("VertexDz_PV2D",-3.,3.,100) };

// add photon track to ditrack vertex to save all objects into summary
Hlt1PhotonDiTrackDecision.InputSelection1 = "Hlt1PhoVFDiTrack";
Hlt1PhotonDiTrackDecision.InputSelection2 = "Hlt1PhoTFPhoton";
