//---------------------------
// HLT Reconstruction
//--------------------------

// in Had Alley #include "$HLTSYSROOT/options/HltRecoSequence.opts"

//---------------------------
// HLT Pho Alley
//--------------------------
HltSummaryWriter.Save += {"PhoL0Entry",
                          "PhoPreTrigger",
                          "PhoTriggerPhoTrk"
};

HltAlleys.InputSelections += {"PhoTriggerPhoTrk"};

HltPhoAlleySequence.Members = {
  "L0Entry/PhoL0Entry",
  "HltL0CaloPrepare/PhoTightL0Calos",
  "GaudiSequencer/HltRecoVeloRZSeq",
  "HltTrackFilter/HltPho2DIPSelection",
  "HltTrackUpgrade/HltPhoRecoIPVelo",
  "HltTrackFilter/HltPho3DIPSelection",
  "GaudiSequencer/HltDecodeT",
  "GaudiSequencer/HltDecodeTT",
  "HltTrackUpgrade/HltPhoRecoIPForward",
  "HltTrackFilter/PhoPreTrigger",
  "HltVertexMaker/PhoTriggerPhoTrk"
};
HltPhoAlleySequence.MeasureTime = true;




//-------------------------------------------------------------------------
// HLT PhoAlley options (CaloAlleySequence cuts)
//-------------------------------------------------------------------------

//
// Enter if there is a L0 photon
//
PhoL0Entry.L0ChannelsName = {"Photon"};
PhoL0Entry.OutputLevel = 3;


PhoTightL0Calos.InputSelection   = "L0TriggerPhoton";
PhoTightL0Calos.CaloType = 1;  // photon !
PhoTightL0Calos.MinEt = 2890.0;   // this trigger threshold; tighter than L0 threshold
PhoTightL0Calos.OutputLevel = 3;


//    2D IP selection


HltPho2DIPSelection.InputSelection     = "RZVelo";
//  fake dependence (no matching)
HltPho2DIPSelection.FilterDescriptor = {"rIP_PV2D,||[],0.10,3.0"};
HltPho2DIPSelection.HistogramUpdatePeriod = 0;
HltPho2DIPSelection.HistoDescriptor = {
  "rIP" : ("rIP",-1.,3.,400),
  "rIPBest" : ("rIPBest",-1.,3.,400)};
HltPho2DIPSelection.OutputLevel = 3;

//  Velo Reco

HltPhoRecoIPVelo.InputSelection = "HltPho2DIPSelection";
HltPhoRecoIPVelo.RecoName = "Velo";

//    3D IP selection


HltPho3DIPSelection.InputSelection     = "HltPhoRecoIPVelo";
HltPho3DIPSelection.FilterDescriptor = {"IP_PV2D,||[],0.15,3.0"};
HltPho3DIPSelection.HistogramUpdatePeriod = 0;
HltPho3DIPSelection.HistoDescriptor = {
  "IP" : ("IP",-1.,3.,400),
  "IPBest" : ("IPBest",-1.,3.,400)
};
HltPho3DIPSelection.OutputLevel = 3;

//  Forward 

HltPhoRecoIPForward.InputSelection = "HltPho3DIPSelection";
HltPhoRecoIPForward.RecoName = "Forward";
//  Pt cut (call it pretrigger sice couldn't implement veloTT)

PhoPreTrigger.InputSelection     = "HltPhoRecoIPForward";
PhoPreTrigger.FilterDescriptor = {"PT,>,1274."};
PhoPreTrigger.HistogramUpdatePeriod = 0;
PhoPreTrigger.HistoDescriptor =  { 
  "PT"     : ("PT",0.,8000.,100),
  "PTBest" : ("PTBest",0.,8000.,100)
};
PhoPreTrigger.OutputLevel = 3;


// PhoTriggerPhoTrk:  Fake PhoPreTrigger-L0Pho vertices (there is no matching here!)

PhoTriggerPhoTrk.InputSelection    = "PhoPreTrigger";
PhoTriggerPhoTrk.InputSelection2   = "PhoTightL0Calos";
PhoTriggerPhoTrk.OutputLevel = 3;


