//---------------------------
// HLT Reconstruction
//--------------------------

#include "$HLTSYSROOT/options/HltRecoSequence.opts"


//---------------------------
// HLT MuHad Alley
//--------------------------
HltSummaryWriter.Save += {"PV2D",
                          "L0TriggerMuon",
                          "Hlt1MuTrack"
};

HltAlleys.InputSelections += {"Hlt1MuTrack"};

HltMuHadAlleySequence.Members = {
  "L0Entry/MuonEntry",
  "HltSelectionFilter/MuHadEntry",
  "HltTrackFilter/MuHadMuonTF",
  // NEED TO CHANGE TO MAKEVERTICES TO HAVE A GOOD CONFIRMATION LOGICS
  "HltTrackUpgrade/Hlt1RecoVelo",
  "HltTrackFilter/MuHadCompanionTFVelo",
  "GaudiSequencer/HltDecodeT",
  "HltTrackUpgrade/MuHadCompanionTRForward",
  "HltTrackFilter/MuHadCompanionTFForward",
  "HltVertexMaker/MuHadVMaker",
  "HltVertexFilter/Hlt1MuTrack"
};
HltMuHadAlleySequence.MeasureTime = true;

//-------------------------------------------------------------------------
// HLT MuHadAlley options
//-------------------------------------------------------------------------


// L0 entry: single muon
MuonEntry.L0ChannelsName = {"Muon" ,"MuonNoGlob"};
MuonEntry.OutputLevel=3;

// HLT entry: some L0 confirmed muon;
MuHadEntry.InputSelections = {"MuonAndTVelo"};

// Select Muons with IP and pT
//MuHadMuonTF.InputSelection  = "MuonsForwardSingle";
MuHadMuonTF.InputSelection  = "MuonAndTVelo";
MuHadMuonTF.HistogramUpdatePeriod = 0;
MuHadMuonTF.FilterDescriptor = {"PT,>,1000.",
                                "IP_PV2D,||[],0.1,3."
};
MuHadMuonTF.HistoDescriptor = {
  "PT"     : ( "PT",0.,6000.,400),
  "PTBest" : ( "PTBest",0.,6000.,400),
  "IP"     : ( "IP",-1.,3.,400),
  "IPBest" : ( "IPBest",-1.,3.,400) 
};
MuHadMuonTF.OutputLevel = 3;


// Select Velo tracks with an IP and good DOCA to Muon
MuHadCompanionTFVelo.InputSelection  = "Velo";
MuHadCompanionTFVelo.HistogramUpdatePeriod = 0;
MuHadCompanionTFVelo.FilterDescriptor = {"IP_PV2D,||[],0.1,3.",
                                         "DOCA_MuHadMuonTF,<,0.2"
};
MuHadCompanionTFVelo.HistoDescriptor = { 
  "IP"         : ( "IP",-1.,3.,400),
  "IPBest"     : ( "IPBest",-1.,3.,400),
  "DOCA"       : ( "DOCA",0.,1.,400),
  "DOCABest"   : ( "DOCABest",0.,1.,400)
};
MuHadCompanionTFVelo.OutputLevel = 3;


// Make forward the selected velo tracks
MuHadCompanionTRForward.InputSelection  = "MuHadCompanionTFVelo";
MuHadCompanionTRForward.RecoName = "Forward";
MuHadCompanionTRForward.OutputLevel = 3;

// Select forward track with a given Pt
MuHadCompanionTFForward.InputSelection  = "MuHadCompanionTRForward";
MuHadCompanionTFForward.FilterDescriptor = {"PT,>,500."};
MuHadCompanionTFForward.HistogramUpdatePeriod = 0;
MuHadCompanionTFForward.HistoDescriptor = {  
  "PT" : ("PT",0.,6000.,100),
  "PTBest" : ("PTBest",0.,6000.,100)
};
MuHadPreTriggerSingle.OutputLevel = 3;


// Make vertices with the forward companion tracks 
MuHadVMaker.InputSelection    = "MuHadMuonTF";
MuHadVMaker.InputSelection2   = "MuHadCompanionTFForward";
MuHadVMaker.OutputLevel = 3;
MuHadVMaker.FilterDescriptor = {"DOCA,<,0.2"
};
MuHadTVMaker.HistogramUpdatePeriod = 0;
MuHadTVMaker.HistoDescriptor = {  
  "DOCA" : ("DOCA",100,0.,1.),
  "DOCABest" : ( "DOCABest",100,0.,0.5)
};

// select vertices if Pt, poiting, and distance
Hlt1MuTrack.InputSelection   = "MuHadVMaker";
Hlt1MuTrack.OutputLevel = 3;
Hlt1MuTrack.FilterDescriptor = {"VertexPointing_PV2D,<,0.4",
                                 "VertexDz_PV2D,>,2."
};
Hlt1MuTrack.HistogramUpdatePeriod = 0;
Hlt1MuTrack.HistoDescriptor = {
  "VertexPointing"     : ( "VertexPointing",0.,1.,100),
  "VertexPointingBest" : ( "VertexPointingBest",0.,1.,100),
  "VertexDz"           : ( "VertexDz",-10.,50.,100),
  "VertexDzBest"       : ( "VertexDzBest",-10.,50.,100)
};


