//---------------------------
// HLT Reconstruction
//--------------------------

//#include "$HLTSYSROOT/options/HltRecoSequence.opts"


//---------------------------
// HLT MuTrack Alley
//--------------------------
HltSummaryWriter.Save += {"PV2D",
                          "L0MuonDecision",
                          "Hlt1MuTrackMuonTF", //filtered muons
                          "Hlt1MuTrackDecision" //filtered vertices

};
HltAlleys.InputSelections += {"Hlt1MuTrackDecision"};


HltMuHadAlleySequence.Members = {
  "GaudiSequencer/PrepareL0MuonORMuonNoGlobSeq",
  "HltSelectionFilter/Hlt1MuTrackSFEntry",  //L0 + muon confirmation 
  "HltTrackFilter/Hlt1MuTrackMuonTF",     //IP and pT muon track filter
  "HltTrackUpgrade/Hlt1RecoVelo",      // Velo reco  
  "HltTrackFilter/Hlt1MuTrackVeloCompanionTF",  //IP and DOCA filter for velo tracks
  "HltVertexMaker/Hlt1MuTrackVeloVM",           //make vertices from muon forward + velo track (+DOCA filter again?)
  "HltVertexFilter/Hlt1MuTrackVeloVF",       //DZ vertex filter    
  "GaudiSequencer/HltDecodeT",         // T stations reco  
  "HltVertexUpgrade/Hlt1MuTrackCompanionVUForward", // companion track => forward
  "HltVertexFilter/Hlt1MuTrackDecision"             // final trigger: companion track pT and vertex pointing
};
HltMuTrack.MeasureTime = true;

//-------------------------------------------------------------------------
// HLT MuTrack Alley options
//-------------------------------------------------------------------------


// HLT entry: some L0 confirmed muon, from single muon alley;
Hlt1MuTrackSFEntry.InputSelections = {"Hlt1MuonSingleTMVeloT"};

// Select Muons with IP and pT
Hlt1MuTrackMuonTF.InputSelection  = "Hlt1MuonSingleTMVeloT";
Hlt1MuTrackMuonTF.HistogramUpdatePeriod = 0;
Hlt1MuTrackMuonTF.FilterDescriptor = {"PT,>,1000.",
                                  "IP_PV2D,||[],0.025,99999999."
};
Hlt1MuTrackMuonTF.HistoDescriptor = {
  "PT"     : ( "PT",0.,6000.,400),
  "PTBest" : ( "PTBest",0.,6000.,400),
  "IP"     : ( "IP",-1.,3.,400),
  "IPBest" : ( "IPBest",-1.,3.,400) 
};
Hlt1MuTrackMuonTF.OutputLevel = 3;

// Select Velo tracks with an IP and DOCA

Hlt1MuTrackVeloCompanionTF.InputSelection  = "Velo";
Hlt1MuTrackVeloCompanionTF.HistogramUpdatePeriod = 0;
Hlt1MuTrackVeloCompanionTF.FilterDescriptor = {"IP_PV2D,||[],0.1,99999999.",
                                           "DOCA_Hlt1MuTrackMuonTF,<,0.3"

//Hlt1MuTrackVeloCompanionTF.FilterDescriptor = {"IP_PV2D,||[],0.,99999999.",
//                                           "DOCA_Hlt1MuTrackMuonTF,<,99999999."
};
Hlt1MuTrackVeloCompanionTF.HistoDescriptor = { 
  "IP"         : ( "IP",-1.,3.,400),
  "IPBest"     : ( "IPBest",-1.,3.,400)
};
Hlt1MuTrackVeloCompanionTF.OutputLevel = 3;


// Make vertices with the velo companion tracks and filter with DOCA and DZ 
Hlt1MuTrackVeloVM.InputSelection    = "Hlt1MuTrackMuonTF";
Hlt1MuTrackVeloVM.InputSelection2   = "Hlt1MuTrackVeloCompanionTF";
Hlt1MuTrackVeloVM.FilterDescriptor = {"DOCA,<,0.3"
};
Hlt1MuTrackVeloVM.HistogramUpdatePeriod = 0;
//Hlt1MuTrackVeloVM.HistoDescriptor = {  
//  "DOCA" : ("DOCA",100,0.,1.),
//  "DOCABest" : ( "DOCABest",100,0.,0.5)
//};
Hlt1MuTrackVeloVM.OutputLevel = 3;


Hlt1MuTrackVeloVF.InputSelection  = "Hlt1MuTrackVeloVM";
Hlt1MuTrackVeloVF.HistogramUpdatePeriod = 0;
Hlt1MuTrackVeloVF.FilterDescriptor = {"VertexDz_PV2D,>,1.5"
//Hlt1MuTrackVeloVF.FilterDescriptor = {"VertexDz_PV2D,>,-99999999."
};
Hlt1MuTrackVeloVF.HistoDescriptor = {
  "VertexDz_PV2D":("VertexDz_PV2D",-10.,50.,100),
  "VertexDz_PV2DBest":("VertexDz_PV2D",-10.,50.,100)
};
Hlt1MuTrackVeloVF.OutputLevel = 3;

Hlt1MuTrackCompanionVUForward.InputSelection = "Hlt1MuTrackVeloVF";
Hlt1MuTrackCompanionVUForward.RecoName = "Forward";


// select vertices if Pt and poiting
Hlt1MuTrackDecision.InputSelection   = "Hlt1MuTrackCompanionVUForward";
Hlt1MuTrackDecision.OutputLevel = 3;
Hlt1MuTrackDecision.FilterDescriptor = {"VertexMinPT,>,600.",
                                   //"VertexMinPT,>,0.",
                                   "VertexPointing_PV2D,<,1."
};
Hlt1MuTrackDecision.HistogramUpdatePeriod = 0;
Hlt1MuTrackDecision.HistoDescriptor = {
  "VertexMinPT" : ("VertexMinPT",0.,6000.,100),
  "VertexMinPTBest" : ("VertexMinPTBest",0.,6000.,100),
  "VertexPointing"     : ( "VertexPointing",0.,1.,100),
  "VertexPointingBest" : ( "VertexPointingBest",0.,1.,100)
};


