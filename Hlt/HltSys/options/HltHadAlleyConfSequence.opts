//---------------------------
// HLT Had Alley
//--------------------------
HltSummaryWriter.Save += {
  "PV2D",
  "L0TriggerHadron",
  "HadTriggerSingle",
  "HadTriggerDiHadron"
};

// to declare as input for the OR of the muon alley
HltAlleys.InputSelections += {
  "HadTriggerSingle",
  "HadTriggerDiHadron"
};

HltHadAlleySequence.MeasureTime = true;
HltHadAlleySequence.Members = {
  "GaudiSequencer/HadSingleSequence",
  "GaudiSequencer/HadDiHadronSequence",
  "HltSelectionFilter/HadTriggerAlleys"
};
HltHadAlleySequence.ModeOr = true;
HltHadAlleySequence.ShortCircuit = false;
HltHadAlleySequence.MeasureTime = true;

HadTriggerAlleys.InputSelections = {
  "HadTriggerSingle",
  "HadTriggerDiHadron"
};

//--------------------------
// Single Hadron
//---------------------------

HadSingleSequence.MeasureTime = true;
HadSingleSequence.Members = {
  "GaudiSequencer/PrepareL0TriggerHadronSeq",
  "GaudiSequencer/HadPrepareMainHadron",
  "HltTrackFilter/HadTriggerSingle"
};

HadPrepareMainHadron.MeasureTime = true;
HadPrepareMainHadron.Members = {
  "GaudiSequencer/HltRecoVeloRZSeq" ,
  "HltTrackFilter/HadSingleTFRZVelo",
  "HltTrackUpgrade/HadSingleTRVelo",
  "HltTrackFilter/HadSingleTFVelo",
  "HltTrackMatch/HadSingleTMVeloCalo",
  "GaudiSequencer/HltDecodeT",
  "GaudiSequencer/HltDecodeTT",
  "HltTrackUpgrade/HadSingleTRForward"
  //  "HltTrackUpgrade/HadSingleTGuidedForward"
};


//--------------------------
// DiHadron
//---------------------------

HadDiHadronSequence.MeasureTime = true;
HadDiHadronSequence.Members = {
  "GaudiSequencer/PrepareL0TriggerHadronSeq",
  "GaudiSequencer/HadPrepareMainHadron",
  "GaudiSequencer/HadPrepareDiHadron",
  "HltVertexFilter/HadTriggerDiHadron"
};

HadPrepareDiHadron.MeasureTime = true;
HadPrepareDiHadron.Members = {
  "HltTrackFilter/HadMainTFForward",
  "HltTrackUpgrade/HltRecoVelo",
  "HltTrackFilter/HadCompanionTFVelo",
  "HltVertexMaker/HadDiHadronVelo",
  "HltVertexFilter/HadDiHadronFVelo",
  "HltVertexUpgrade/HadDiHadronForward"
};

//-------------------------------------------
// Single Trigger options
//-------------------------------------------

HadTriggerSingle.InputSelection  = "HadSingleTRForward";
HadTriggerSingle.FilterDescriptor = {"PT,>,5000."};
HadTriggerSingle.HistogramUpdatePeriod = 1;
HadTriggerSingle.HistoDescriptor = {
  "PT":("PT",0.,6000.,100),
  "PTBest":("PTBest",0.,6000.,100)
};


HadTriggerDiHadron.InputSelection = "HadDiHadronForward";
HadTriggerDiHadron.FilterDescriptor = {
  "VertexMinPT,>,1000.",
  "VertexPointing_PV2D,<,0.4"
};
HadTriggerDiHadron.HistogramUpdatePeriod = 1;
HadTriggerDiHadron.HistoDescriptor = {
  "VertexMinPT":("VertexMinPT",0.,6000.,100),
  "VertexMinPTBest":("VertexMinPTBest",0.,6000.,100),
  "VertexPointing_PV2D":("VertexPointing_PV2D",0.,1.,100),
  "VertexPointing_PV2DBest":("VertexPointing_PV2DBest",0.,1.,100)
};

//-------------------------------------------------------------------------
// HLT HadAlley options
//-------------------------------------------------------------------------


HadSingleTFRZVelo.InputSelection = "RZVelo";
HadSingleTFRZVelo.FilterDescriptor = {"Calo2DChi2_L0TriggerHadron,<,4"};
HadSingleTFRZVelo.HistogramUpdatePeriod = 1;
HadSingleTFRZVelo.HistoDescriptor = {
  "Calo2DChi2_L0TriggerHadron":("Calo2DChi2_L0TriggerHadron",0.,100.,20),
  "Calo2DChi2_L0TriggerHadronBest":("Calo2DChi2_L0TriggerHadronBest",0.,100.,20)
};

HadSingleTRVelo.InputSelection = "HadSingleTFRZVelo";
HadSingleTRVelo.RecoName = "Velo";
HadSingleTRVelo.HistogramUpdatePeriod = 1;

HadSingleTFVelo.InputSelection = "HadSingleTRVelo";
HadSingleTFVelo.FilterDescriptor = {
  "IP_PV2D,||>,0.1",
  "Calo3DChi2_L0TriggerHadron,<,4"
};
HadSingleTFVelo.HistogramUpdatePeriod = 1;
HadSingleTFRZVelo.HistoDescriptor = {
  "IP_PV2D":("IP_PV2D",-0.1,3.,100),
  "IP_PV2DBest":("IP_PV2DBest",-0.1,3.,100),
  "Calo3DChi2_L0TriggerHadron":("Calo3DChi2_L0TriggerHadron",-0.1,50.,100),
  "Calo3DChi2_L0TriggerHadronBest":("Calo3DChi2_L0TriggerHadronBest",-0.1,50.,100)
};

HadSingleTMVeloCalo.InputSelection = "HadSingleTRVelo";
HadSingleTMVeloCalo.InputSelection2 = "L0TriggerHadron";
HadSingleTMVeloCalo.MatchName = "VeloCalo";
HadSingleTMVeloCalo.MaxQuality = 4.;
HadSingleTMVeloCalo.HistogramUpdatePeriod = 1;
// HadSingleTMVeloCalo.HistoDescriptor = {
//   "VeloCalo3DChi2":("VeloCalo3DChi2",0.,100.,100),
//   "RedoVeloCalo2DChi2":("VeloCalo2DChi2",0.,100.,100)
// }

HadSingleTGuidedForward.InputSelection = "HadSingleTMVeloCalo";
HadSingleTGuidedForward.RecoName = "GuidedForward";
HadSingleTGuidedForward.HistogramUpdatePeriod = 1;

HadSingleTRForward.InputSelection  = "HadSingleTFVelo";
HadSingleTRForward.RecoName = "Forward";
HadSingleTRForward.HistogramUpdatePeriod = 1;

//-------------------------------------------
// DiHadron Trigger
//-------------------------------------------


HadMainTFForward.InputSelection  = "HadSingleTRForward";
HadMainTFForward.FilterDescriptor = {"PT,>,2500."};
HadMainTFForward.HistogramUpdatePeriod = 1;
HadMainTFForward.HistoDescriptor = {
  "PT":("PT",0.,6000.,100),
  "PTBest":("PTBest",0.,6000.,100)
};



HadCompanionTFVelo.InputSelection = "Velo";
HadCompanionTFVelo.FilterDescriptor = {
  "IP_PV2D,||>,0.1",
  "MatchIDsFraction_HadMainTFForward,<,0.9"
};
// HadCompanionTFVelo.OutputLevel = 3;
HadCompanionTFVelo.HistogramUpdatePeriod = 1;
HadCompanionTFVelo.HistoDescriptor = {
  "IP_PV2D":("IP_PV2D",0.,3.,100),
  "IP_PV2DBest":("IP_PV2DBest",0.,3.,100)
};


HadDiHadronVelo.InputSelection = "HadMainTFForward";
HadDiHadronVelo.InputSelection2 = "HadCompanionTFVelo";
HadDiHadronVelo.FilterDescriptor = { "DOCA,<,0.2"};
HadDiHadronVelo.HistoDescriptor = { 
  "DOCA":("DOCA",0.,3.,100),
  "DOCABest":("DOCABest",0.,3.,100)
};

HadDiHadronFVelo.InputSelection = "HadDiHadronVelo";
HadDiHadronFVelo.FilterDescriptor = { "VertexDz_PV2D,>,0."};
HadDiHadronFVelo.HistoDescriptor = {
  "VertexDz_PV2D":("VertexDz_PV2D",-3.,3.,100),
  "VertexDz_PV2DBest":("VertexDz_PV2D",-3.,3.,100)
};

HadDiHadronForward.InputSelection = "HadDiHadronFVelo";
HadDiHadronForward.RecoName = "Forward";







