//------------------------------
// Definition of the reconstruction
//-----------------------------

HltRecoSequence.Members = {
  "GaudiSequencer/HltRecoVeloRZSeq",
  "HltTrackUpgrade/HltRecoVelo",
  //  "PatPV3D/PatHltPV3D",
  // "GaudiSequencer/HltDecodeTT",
  // "HltTrackUpgrade/HltRecoVeloTT",
  "GaudiSequencer/HltDecodeT",
  "HltTrackUpgrade/HltRecoForward"
};



HltRecoVelo.OutputTracksName = "Hlt/Track/Velo";
HltRecoVelo.RecoName = "Velo";
HltRecoVelo.HistogramUpdatePeriod = 0;
HltRecoVelo.OutputLevel = 3;

PatHltPV3D.InputTracksName = "Hlt/Track/Velo" ;
// TODO: PatHltPV3D.OutputVerticesName = "Hlt/Vertex/PV3D" ;

//HltRecoVeloTT.InputTracksName = "Hlt/Track/Velo";
HltRecoVeloTT.OutputTracksName = "Hlt/Track/VeloTT";
HltRecoVeloTT.RecoName = "VeloTT";
HltRecoVeloTT.HistogramUpdatePeriod = 0;
HltRecoVeloTT.OutputLevel = 3;

PatHltRecoVeloTT.removeUsedTracks = false;
PatHltRecoVeloTT.fitTracks = false;
PatHltRecoVeloTT.maxChi2 = 256.;
PatHltRecoVeloTT.PatVeloTTTool.minMomentum = 2000.;
PatHltRecoVeloTT.PatVeloTTTool.DxGroupFactor = 0.0;
PatHltRecoVeloTT.PatVeloTTTool.maxPseudoChi2 = 256.;
PatHltRecoVeloTT.PatVeloTTTool.maxSolutionsPerTrack = 1;
PatHltRecoVeloTT.OutputLevel = 3;

HltRecoForward.InputTracksName = "Hlt/Track/Velo";
HltRecoForward.OutputTracksName = "Hlt/Track/Forward";
HltRecoForward.RecoName = "Forward";
HltRecoForward.HistogramUpdatePeriod = 0;
HltRecoForward.OutputLevel = 3;
PatHltRecoForward.DoCleanUp = false;


//-----------------------------
// HLT Common reconstruction
//-----------------------------

// TODO: If unique decoding REC/HLT use same algo name
//       or both REC/HLT use DecodeOnDemand
HltRecoVeloRZSeq.Members += { "DecodeVeloRawBuffer", 
                              "Tf::PatVeloRTracking/PatHltVeloRTracking",
                              "PatPV2D/PatHltPV2D",
                              "HltPrepareTracks/HltPrepareRZVelo",
                              "HltPrepareVertices/HltPreparePrimaryVertices"
};

PatHltVeloRTracking.OutputTracksName = "Hlt/Track/RZVelo";
PatHltVeloRTracking.OutputLevel = 3;

PatHltPV2D.InputTracksName = "Hlt/Track/RZVelo";
PatHltPV2D.OutputVerticesName = "Hlt/Vertex/PV2D";
PatHltPV2D.OutputLevel = 3;

HltPrepareRZVelo.TESInputTracksName   = "Hlt/Track/RZVelo";
HltPrepareRZVelo.OutputTracksName     = "Hlt/Track/RZVelo";
HltPrepareRZVelo.OutputLevel = 3;

HltPreparePrimaryVertices.SelectionName = "PV2D";
HltPreparePrimaryVertices.TESInputVerticesName = "Hlt/Vertex/PV2D";
HltPreparePrimaryVertices.OutputVerticesName   = "Hlt/Vertex/PV2D";
HltPrepareRZVelo.OutputLevel = 3;

// 3D Velo tracking and PV
//------------------------
HltRecoVeloSeq.Members += { "HltTrackUpgrade/HltRecoVelo",
                            "PatPV3D"
};
PatPV3D.InputTracksName = "Hlt/Track/Velo";
//PatPV3D.OutputVerticesName = "Hlt/Vertex/PV3D";

// Decode TT
//-------------
HltDecodeTT.Members += { "RawBankToSTLiteClusterAlg/createTTLiteClusters"
};

// Decode T
//--------------
HltDecodeT.Members += { "RawBankToSTLiteClusterAlg/createITLiteClusters"
};
createITLiteClusters.detType = "IT";

// VeloTT
//----------------

//TODO: should be this be here or in the sequencer?

// Forward
//----------------
#include "$PATALGORITHMSROOT/options/PatFwdTool.opts"
ToolSvc.PatForwardTool.OutputLevel = 3;
ToolSvc.PatForwardTool.MinMomentum = 1000. ;  
ToolSvc.PatForwardTool.MinPt       = 80. ;   
ToolSvc.PatForwardTool.AddTTClusterName = "";


// Tsa
//--------------------------------------
#include "$HLTSYSROOT/options/TsaTool.opts"
