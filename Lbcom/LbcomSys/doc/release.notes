<PRE>
!-----------------------------------------------------------------------------
! Package     : LbcomSys
! Responsible : Marco Cattaneo
! Purpose     : Package describing contents of Lbcom project. Packages in this
!             : project contain components used by all applications except Gauss
!-----------------------------------------------------------------------------

</PRE><H1><A NAME=v10r4>2011-06-16 LbcomSys v10r4</A></H1><PRE>
This version uses Gaudi v22r2 and LHCb v32r4

- Production release for 2011 data, devlopments for 2011 MC

- Packages updated: HltDAQ v2r10, L0DU v10r15, L0Muon v9r5, RichTools v2r35,
    VeloAlgorithms v5r4, VeloDAQ v6r3, VeloSimulation v3r10

- In HltDAQ v2r10
  . Fix a bug in xml/HltSelRepRBHits.xml which was corrupting exactly one lhcbid
    per event, for odd number of hit sequences saved.
    Change bank version number to 1 in HltSelReportsWriter.
    Make HltSelReportsDecoder omit corrupted hit for bank version 0.
  . Make HltDecReportsDecoder return StatusCode::FAILURE from execute in case
    it encounters trouble while decoding...
  . Make HltSelReportsDecoder forward compatible for the case of adding
    additional data words (i.e. new data is a pure superset of old data).
  . Fix windows compile error in ConfigZipFileAccessSvc
  . Make bzip2 conditional on 'not being on windows' in ConfigZipFileAccessSvc

- In L0DU v10r15
  . L0DUFromRawTool : new interfaced method datas() returns <string,value> 
                      data map
  . Add default L0TCK for 2011 data (0x0032)
  . Change default TCK when DataType is not supplied
  . Remove default TCK for DC06 data type

- In L0Muon v9r5 
  . L0MuonAlg.cpp : fix sprintf statements to please Coverity
  . L0MuonFromRawTrans : fix (?) bug found by coverity (use too much stack space)
  . L0MuonOutput : Fix an other bug found by Coverity (affecting only debug
                   output)
  . L0MuonOutput : Try to fix "bugs" found by Coverity (local variable exceed
    allowed stack space). Faulty variables are now using pointers so that the 
    used memory is taken from the heap.

- In RichTools v2r35
  . Some improvements to the HPD occupancy tool. Remove possibility of some
    problem with the occupancy data causing an exception to be thrown and the
    processing aborted. Instead, empty entries are created on the fly in the
    occupancy map.

- In VeloAlgorithms v5r4
  . fixed uninitialized fields signalled by the coverity tool

- In VeloDAQ v6r3
  . fix of the problems reported by the coverity tool

- In VeloSimulation v3r10
  . Added a variable response verse radius to match data and later to
    simulate radiation damage
  . Will give warnings until new db released

</PRE><H1><A NAME=v10r3>2011-04-29 LbcomSys v10r3</A></H1><PRE>
This version uses Gaudi v22r2 and LHCb v32r3

- Development release for 2011 data

- Packages updated: HltDAQ v2r9, L0Calo v11r3, L0DU v10r14, L0Muon v9r4,
    L0MuonMonitor v2r2, RichMCTools v3r16, RichTools v2r34, VeloSimulation v3r9

- In HltDAQ v2r9
  . Disable ICC warnings (see also Savannah task 20188)
  . Funnel all file access in ConfigTarFileAccessSvc through a single member
    function in order to prepare for closing/opening the file 'on demand'
  . Add ConfigZipFileAccessSvc
  . Silence coverity warnings in ConfigDBAccessSvc and PropertyConfigSvc
    (neither of which is an actual bug)

- In L0Calo v11r3
  . Change definition of L0Photon and L0Electron in the L0Calo trigger,
    is set by option for the moment (UseNewElectron, false by default)

- In L0DU v10r14
  . Remove obsolete files ETC.opts, ETCSeq.opts, ReadETC.opts, WriteETC.opts

- In L0MuonMonitor v2r2
  . L0MuonMonitorInput : allow to mask some channels in the comparison with
                         muon data

- In RichMCTools v3r16, RichTools v2r34
  . Remove some DC06 specific hacks

- In RichTools v2r34
  . Clean up the mirror segment finder tool.
  . Add calls to the UpdateManager unregister method as needed.
  . Add some call backs to make sure cached data is updated on condition changes.

- In L0Calo v11r3, L0DU v10r14, L0Muon v9r4, L0MuonMonitor v2r2,
     VeloSimulation v3r9
  . Fix UNINIT_CTOR warnings from coverity

</PRE><H1><A NAME=v10r2>2011-04-06 LbcomSys v10r2</A></H1><PRE>
This version uses Gaudi v22r1 and LHCb v32r2

- Production release for 2011 data

- Packages updated: HltDAQ v2r8, L0DU v10r13, L0Muon v9r3, RichDAQ v3r32,
    RichTools v2r33, STMonitors v3r5, VeloPixDAQ v1r4

- In HltDAQ v2r8
  . HltVertexReportsDecoder:
    o speed up decoding by not copying the rawbank into a temporary vector
    o only ask for ANN once we're about to decode something...
    o speed up mapping ID to name
  . HltDecReportsDecoder: speed up mapping ID to name
  . HltSelReportsDecoder: speed up mapping ID to name
  . ConfigTarFileAccessSvc: switch default for CompressOnWrite to true
  . Fix a potential out_of_range exception if filename is less than 3 characters

- In L0DU v10r13
  . L0Conf : follow the change in the L0Muon emulator which now takes the
             FOI specified in the TCK (see L0/L0Muon).

- In L0Muon v9r3
  . L0Muon emulator (L0MuonAlg) : FOI are taken from the TCK (using L0DUConfig).
    The TCK
    o can be specified via the property TCK (default behaviour), or
    o can be picked up from the data (if UseTCKFromData is set to True).
    This is now the only way to set up the FOI which means that it is mandatory
    to importOptions("$L0TCK/L0DUConfig.opts") when using the L0Muon emulator.
    L0Conf configurable in L0/L0DU is modified to account for this change.
  . L0MuonAlg : fix a bug which prevented running the emulator from the l0muon
    data when relying on the data on demand service to perfom L0Muon decoding.

- In RichDAQ v3r32
  . Add new data integrity check to decoding tool. Now checks to see if the L1
    hardware ID each L0ID is found in in the data, agrees with the value in the
    Conditions database. If not, no hits are decoded for that HPD.

- In RichTools v2r33
  . Adapt to changes in RichSmartID class

- In STMonitors v3r5
  . Fixed typo in bunch id plot.
  . Added map of cluster size in each sector

- In VeloPixDAQ v1r4
  . Bug fix for VeloPixRawBankToLiteCluster.cpp

</PRE><H1><A NAME=v10r1p1>2011-02-28 LbcomSys v10r1p1</A></H1><PRE>
This version uses Gaudi v22r1 and LHCb v32r1p1

- Production candidate for 2011 data-taking

This patch takes in only one required package to fix the major version of L0TCK.

- L0/L0DU v10r12p1

</PRE><H1><A NAME=v10r1>2011-02-28 LbcomSys v10r1</A></H1><PRE>
This version uses Gaudi v22r1 and LHCb v32r1

- Production candidate for 2011 data-taking

- Packages updated: DAQMonitors v1r3, HltDAQ v2r7, L0DU v10r12, 
    RichAlgorithms v1r3, RichDAQ v3r31, RichMCMonitors v1r8, RichMCTools v3r15,
    RichTools v2r32, STMonitors v3r4, STTools v4r7, VeloDAQ v6r2

- Functionality changes:
  . Add transparent on-the-fly compression when writing through
    ConfigTarFileAccessSvc (HltDAQ v2r7)
  . Adapt to change in L0Event (new data DiMuonProd) (L0DU v10r12)
  . Add option IgnoreErrorBanks to velol decoder, makes using the TAE scan
    in VETRA more convenient (VeloDAQ v6r2)
  . Rewrite of PrepareVeloFullRawBuffer to cope with the nzs data that are sent
    together with the VeloError banks (VeloDAQ v6r2)

- Monitoring changes
  . Modified binning of some histograms in STClusterMonitor to make more
    understandable in the online monitoring (STMonitors v3r4)
  . Added STBadChannelFinder algorithm to look for bad/open channels.
    (STMonitors v3r4)

- Bug fixes:
  . Bug fix in CMS noise tool (STTools v4r7)
  . Fix coverity defects and icc warnings and remarks (DAQMonitors v1r3,
    HltDAQ v2r7, RichAlgorithms v1r3, RichDAQ v3r31, RichMCMonitors v1r8,
    RichMCTools v3r15, RichTools v2r32

</PRE><H1><A NAME=v10r0>2011-02-02 LbcomSys v10r0</A></H1><PRE>
This version uses Gaudi v22r0 and LHCb v32r0

- Development release for 2011 data-taking

- Changes in supported platforms:
  . slc4_ia32_gcc34(_dbg), slc4_amd64_gcc34(_dbg), win32_vc71_dbg removed
  . i686-slc5-gcc43-{opt,dbg}, x86_64-icc11-{opt,dbg}, i686-winxp-vc9-dbg added

- Packages updated: CaloTools v6r1, HltDAQ v2r6, L0DU v10r11, RichDAQ v3r30,
    STTools v4r6, VeloDAQ v6r1

- Functionality changes:
  . change default for HltRoutingBitsWriter().GetStartOfRunFromCondDB from 
    false to true (HltDAQ v2r6)
  . Update RichRawBufferToSmartIDsTool to implement methods to obtain the number
    of hits in RICH1 and RICH2 separately (RichDAQ v3r30)
  . Remove earlyData tuning (earlyData settings are now the default) and add
    special option for running on MC with APE=0 (STTools v4r6)
  . PrepareVeloRawBuffer: default bank version set to v3 (VeloDAQ v6r1)

- Monitoring changes:
  . Remove check on L1 bank sizes being less than 2 32bit words (RichDAQ v3r30)
  . Suppress Warning "Ingress/ODIN Event ID checks are disabled" in the
    RawDataFormatTool as this is now the default. Instead, warn when it is
    enabled (Check is not 100% reliable) (RichDAQ v3r30)

- Packaging changes:
  . replace use HltTCK from v1r* to v* (HltDAQ v2r6)

- Bug fixes:
  . Fix Calo2MCTool initialization (CaloTools v6r1)
  . Fix icc warnings and remarks (CaloTools v6r1, L0DU v10r11)
  . Fix vc9 compilation error (HltDAQ v6r1)

</PRE><H1><A NAME=v9r9>2010-12-16 LbcomSys v9r9</A></H1><PRE>
This version uses Gaudi v21r11 and LHCb v31r8

- Development release for MC 2010 simulation

- Packages updated: HltDAQ v2r5, VeloTools v4r0

- In Hlt/HltDAQ v2r5
  . PropertyConfigSvc: add possibility to apply transformations on properties
                       just before pushing them into the JobOptionsSvc
   . Add ANNSvc, removed from HltInterfaces

- In Velo/VeloTools v4r0
  . Move VeloClusterPosition tool moved to Rec project, Tr/TrackTools package
    as it is no longer needed in Boole, all the monitoring related to it has also
    been moved to the Rec project (VeloRecMonitors package)
  . Clean up dependencies in requirements as result of above move.

</PRE><H1><A NAME=v9r8>2010-12-06 LbcomSys v9r8</A></H1><PRE>
This version uses Gaudi v21r11 and LHCb v31r7

- Production release for MC 2010 simulation

- Packages updated: RichMCTools v3r14, STDAQ v3r26, VeloAlgorithms v5r3,
    VeloSimulation v3r8

- In Rich/RichMCTools v3r14
  . Added methods to access easily the MC info on scintillation.

- In ST/STDAQ v3r26
  . Added code to STRawBankMonitor to account for the double links to some TT and
    IT TELL1 boards.

- In Velo/VeloAlgorithms v5r3
  . Substantial code change in VeloSimTell1Algorithm and VeloSimTell1ClusterMaker
    algorithms to facilitate using SIMCOND data base.
  . m_dbConfig set by default to VeloTELL1::DYNAMIC
  . Parameters m_hitSigmas and m_incSigmas have been changed accordingly
    to follow the values used to calculate thresholds in the pit
  . Add ThresholdMaker predicate class used in hit and inclusion thresholds
    calculation   

- In Velo/VeloSimulation v3r8
  . MC 2010 tuning: now the default BiasVoltage is set to 150 V

</PRE><H1><A NAME=v9r7p1>2010-10-25 LbcomSys v9r7p1</A></H1><PRE>
This version uses Gaudi v21r11 and LHCb v31r6p1

- Minor updates for the winter 2010 reprocessing

- Packages updated:
    Calo/CaloTools v6r0, Hlt/HltDAQ v2r4, L0/L0DU v10r10, L0/L0Muon v9r2,
    L0/L0MuonMonitor v2r1p1, Rich/RichTools v2r31, ST/STAlgorithms v4r4,
    ST/STDAQ v3r25, ST/STMonitors v3r3, ST/STTools v4r5, Velo/VeloDAQ v6r0p1

- In Calo/CaloTools v6r0:
  . change parameters to const references in CaloHypo2Calo
  . new tool : CaloHypoEstimator
  . Minor update to other tools

- In Hlt/HltDAQ v2r4:
  . fix ANNSvc for compilation error with boost 1.44
  . try int-decision name mapping from DecReports if ANNSvc fails in HltSelReportsDecoder

- In L0/L0DU v10r10:
  . Add the decoding of the full list of L0Muon candidates to the data on demand service
    needed for L0 TisTossing
  . reduced verbosity


- In L0/L0Muon v9r2:
  . Better use of rootInTes - needed for MicroDSTs

- In L0/L0MuonMonitor v2r1p1:
  . Handle optical links forced to 1; needed for online monitoring.
  . Fix reporting of tell1 errors
  . Check muon readout saturation in comparison with l0muon + fixes

- In Rich/RichTools v2r31:
  . Remove private methods in Snells law and refractive index tools, instead use new method from RichDet.
  . Removing the caching of the threshold momentum values in the particle properties too
  . Add a new method to allow the threshold momentum to be calculated
  . More updates to only load radiator detector elements when needed
  . Update the Snells Law refraction tool to load detector elements on demand

- In ST/STAlgorithms v4r4:
  . Really add STClusterContainerCopy.cpp

- In ST/STDAQ v3r25:
  . Fixed minor bug and added new histogram
  . Added code to account for double links to some TT and IT TELL1s
  . Bug fix in STRawBankMonitor
  . Make raw location an option.
  . Add possibility to copy the pcn from the summary block to the raw bank in the encoding

- In ST/STMonitors v3r3:
  . update to use new interface of ISTNoiseCalculationTool

- In ST/STTools v4r5:
  . Fix vc compilation error+warnings
  . Add series of changes to implement new methods in noise st noise calculation tools plus bug fixes.

- In Velo/VeloDAQ v6r0p1:
  . Default is now no ERROR messages from the decoding (can override in options)


</PRE><H1><A NAME=v9r7>2010-08-26 LbcomSys v9r7</A></H1><PRE>
This version uses Gaudi v21r11 and LHCb v31r6

- Modified packages:
  Calo/CaloTools v5r17, Hlt/HltDAQ v2r3, L0/L0DU v10r9, L0/L0MuonMonitor v2r1,
  Rich/RichDAQ v3r29, ST/STDAQ v3r24, VeloPix/VeloPixDAQ v1r3

- In Calo/CaloTools v5r17:
  . New tool CaloHypoEstimator + update CaloHypo2Calo

- In Hlt/HltDAQ v2r3:
  . Fix unchecked StatusCodes in ANNDispatchSvc and HltDecReportsDecoder

- In L0/L0DU v10r9:
  . L0CondDBProvider : reduced verbosity

- In L0/L0MuonMonitor v2r1:
  . L0MuonMonitorInput :
    o check if muon read out is saturated before processing events
    o add hit maps of bad channels (if FullDetail is enabled)
    o write out list list of bad channels at the end of the job (if Offline
      and FullDetail are enabled)
  . L0MuonMuonComp :
    o check if muon read out is saturated before processing events
  . L0MuonMonitorData :
    o protect FAILURE in case of missing container
  . L0MuonMoniError :
    o don't fill histo per quarter for PU bcid errors
    o report tell1 errors (type J2 and K2) in the summary plot.

- In Rich/RichDAQ v3r29:
  . Suppress unneccessary warning message during initialisation of the
    decoding tool

- In ST/STDAQ v3r24:
  . Fix warnings from the INTEL compiler
  . Add writeMappingToXML to ISTReadoutTool interface

- In VeloPix/VeloPixDAQ v1r3
  . Replace hardcoded container location by proper location definition

</PRE><H1><A NAME=v9r6>2010-08-26 LbcomSys v9r6</A></H1><PRE>
This version uses Gaudi v21r10p1 and LHCb v31r5

- Modified packages:
	Hlt/HltDAQ v2r2, Rich/RichDAQ v3r28, ST/STAlgorithms v4r3,
  ST/STCheckers v3r2, ST/STTools v4r4, Velo/VeloDAQ v6r0

- In Hlt/HltDAQ v2r2:
  . ANNDispatchSvc: fix bug that disallowed setting of properties
  . a bug fix for non-standard RawEvent location
  . Allow the use (disabled by default) of the conditions DB to find
    the time of the start of run used for the trend plots of the various rates
  . fix fillStream declaration in xml so that const_cast can be removed
  . fix compiler warning in HltRoutingBitsWriter.cpp

- In Rich/RichDAQ v3r28:
  . Add new methods to RawBufferToSmartIDsTool to return
    the total number of hits in the current event.

- In ST/STAlgorithms v4r3:
  . Add STClusterContainerCopy algorithm

- In ST/STCheckers v3r2:
  . Add some histograms to STClusterResolution

- In ST/STTools v4r4:
  . Add tool to select STChannelIDs on tracks

- In Velo/VeloDAQ v6r0:
  . Added a ProcStatus when the bank has a header bit error and is not decoded
  . Change in the nzs data stream decoder to cope with corrupted banks
    (related with error banks)



</PRE><H1><A NAME=v9r5p1>2010-07-28 LbcomSys v9r5p1</A></H1><PRE>
This version uses Gaudi v21r10p1 and LHCb v31r4

- It was discovered that LCG_58d has major problems with Oracle, Pyroot and Xerces.
  Gaudi v21r10p1 will pick up the patched LCGCMT.

- There are no ther changes in Lbcom

</PRE><H1><A NAME=v9r5>2010-07-21 LbcomSys v9r5</A></H1><PRE>
This version uses Gaudi v21r10 and LHCb v31r3

- Packages modified: RichTools v2r30, STAlgorithms v4r2, STCheckers v3r1,
    STTools v4r3, SiTools v1r8, VeloDAQ v5r3

- In RichTools v2r30
  . Add to RichDetParameters a new method to return the S.D. of the n-1
    distribution for observable photons.
  . Remove from RichTabulatedRefractiveIndex the private hard coded n-1 S.D.
    values.
  . Update refractiveIndexRMS() to return the RMS and not the S.D.
  . Add new method refractiveIndexSD() to return the standard deviation.

- In STAlgorithms v4r2, STCheckers v3r1, STTools v4r3
  . Changed include location of ISTClusterPosition (now in Tr/TrackInterfaces).

- In STCheckers v3r1
  . Add histograms normalizing to MIP to STClusterChecker

- In STTools v4r3
  . Follow changes in ISTClusterPosition interface.
  . Updated tune for eta correction + new hit error estimates.
  . Add STBeetleStateTransition and STRndmBeetleStateTransition

- In SiTools v1r8
  . Remove obsolete file SiTools_dll.cpp
  . SiDepositedCharge now uses SiLandauFun.h/cpp

- In VeloDAQ v5r3
  . Changed how ProcStatus is used as per Savannah task #16278. Now still set
    ProcStatus for any problem, but also set ProcStatus->setAborted(true)
    when all clusters are removed due to high multiplicity
  . Removed setFilterPass options as it was unused.
  . Add a missing use statement for Event/RecEvent in cmt/requirements

</PRE><H1><A NAME=v9r4>2010-06-23 LbcomSys v9r4</A></H1><PRE>
This version uses Gaudi v21r9 and LHCb v31r2

- Packages modified: CaloAssociators v6r10p1, CaloTools v5r16p1, HltDAQ v2r0p2,
    L0Calo v11r2p1, L0DU v10r8, L0Muon v9r1p1, L0MuonMonitor v2r0p1,
    STAlgorithms v4r1, STMonitors v3r2, STTools v4r2, VeloPixDAQ v1r2p1

- In HltDAQ v2r0p1
  . Fix memory leak, see https://savannah.cern.ch/bugs/index.php?68285

- In L0DU v10r8
  . L0Filter : fix doxygen documentation
  . L0DURawBankMonitor : BXID-decision monitoring in detail
                         (positive bcid per channel/trigger).

- In STAlgorithms v4r1
  . STClusterKiller prints out fraction of clusters killed

- In STMonitors v3r2
  . Some bug fixes in the NZS monitoring algorithm
  . More robust calculation of MPV in cluster monitoring
  . STNoiseCalculation changed to GaudiAlgorithm and not STBaseAlg as it doesn't
    care about the detector type.
  . Add options for monitoring TAE NZS events
  . Use new noise tool interface to only update NZS plots for TELL1s which have
    sent NZS data.  Hopefully fixes issues running on round robin data.
  . Added an event counting histogram, plus fraction errors/port/tell1
    STErrorMonitor.
  . Added extra histograms to STClusterMonitor.
  . Plus some extra bug fixes.

- In STTools v4r2
  . New tuning of eta correction (for new charge sharing tune) and new hit error
    estimates for MC.
  . Changed the calculation of the effect of the Lorentz angle.
  . Add new selector tool STRndmEffSelector
    (used by default by cluster selector from channel)
  . Implementation of new methods in noise calculation tools

- In CaloAssociators v6r10p1, CaloTools v5r16p1, HltDAQ v2r0p1, L0Calo v11r2p1,
     L0Muon v9r1p1, L0MuonMonitor v2r0p1, STTools v4r2, VeloPixDAQ v1r2p1
  . Fix Windows compilation warnings. Now there are no such warnings left in
    Lbcom project

</PRE><H1><A NAME=v9r3>2010-05-25 LbcomSys v9r3</A></H1><PRE>
This version uses Gaudi v21r9 and LHCb v31r1

- Packages modified: HltDAQ v2r0, L0Calo v11r2, L0DU v10r7, RichDAQ v3r27,
    RichTools v2r29p4, STTools v4r1, VeloDAQ v5r2, VeloPixTools v1r0p1

- In HltDAQ v2r0
  . move HLT configuration implementation from HltCommon to here so it can
    be used during readback without having a runtime dependency on the HLT
    project

- In L0Calo v11r2
  . src/L0CaloCompare.cpp/.h: add monitoring histograms to count error rates

- In L0DU v10r7
  . ReplayL0DU : new property added to L0Conf to allow the rerunning of the
    L0DU alone starting from the L0DU banks (with for example a new L0TCK).

- In RichDAQ v3r27
  . Turn back on the Event ID cross checks within the RICH data (but not with
    the ODIN which does not work).
  . Turn back on the BXID check between the RICH and the ODIN.

- In RichTools v2r29p4
  . Add missing HLT mode flag to refractiveIndex call in
    Rich::TabulatedRefractiveIndex and Rich::SnellsLawRefraction

- In STTools v4r1
  . Added STOffline Conf, which replaces the files Brunel.opts and
    Brunel_EarlyData.opts

- In VeloDAQ v5r2
  . Make lite decoding check full bank length, remove lite and full clusters
    from the containers for corrupted TELL1 banks then continue normally
  . Review warnings/errors

- In VeloPixTools v1r0p1
  . In requirements, replace HEAD by v* in use statements

</PRE><H1><A NAME=v9r2p1>2010-04-29 LbcomSys v9r2p1</A></H1><PRE>
This version uses Gaudi v21r9 and LHCb v31r0p1

Identical to v9r2 but using LHCB v31r0p1

</PRE><H1><A NAME=v9r2>2010-04-26 LbcomSys v9r2</A></H1><PRE>
This version uses Gaudi v21r9 and LHCb v31r0

- Packages added   : VeloPix/VeloPixTools : Tools to deal with pixel position and errors
- Packages modified: L0DU v10r6, RichTools v2r29p3, STDAQ v3r22, STMonitors v3r1,
    VeloDAQ v5r1, VeloPixDAQ v1r2, VeloPixTools v1r0

- In L0DU v10r6
  . L0Conf:
    o Fix bug (wrong algorithm name for L0CaloDecoding) affecting
      L0Conf().DecodeL0=True,  introduced in version v10r2
    o Add default TCK for 2009 (0x1309) and 2010 (0x1810) data types
    o Add property to enable/disable the use of condDB for the L0Muon
      by default : now use the condDB (was not used by default up to this change)
    o Add the on demand decoding of the L0MuonProcData bank

- In RichTools v2r29p3
  . Fix untested status code in HighOccHPDSuppressionTool
  . Downgrade HPD occupancy update messages to debug
  . Turn on summary printout of suppressed high occunpancy HPDs

- In STDAQ v3r22
  . Add protection to STFullDecoding so that it doesn't give an exception when
    the RawEvent is missing.  It now returns a warning which is ignored.
  . Add options files (.opts and .py) to run the full decoding in TAE mode.

- In STMonitors v3r1
  . Changes in STDQSummaryAlg (bug fix in date printing, easier switch IT/TT)
  . Bug fix in setting reset rate for counters in STClusterMonitor
  . Add protections against missing ODIN bank.
  . Add protections against missing data from TELL1 boards in STPulseMonitor
  . Add detType to histogram titles in STErrorMonitor and STNZSMonitor
  . Use cluster channel ID rather than first channel in STClusterMonitor
  . Bug fix when filling MPV histogram in STClusterMonitor
  . Bug fix in STPulseMonitor when running over NZS data

- In VeloDAQ v5r1
  . Added the ProcStatus object if the VELO decoding fails for any reason
  . Added an option to setFilterPass(fail) (default to off) for HLT

- In VeloPixDAQ v1r2
  . Add in VeloPixRawBankToPartialCluster some checks in case of duplicated
    channelID (probably comes from an earlier bug, temporary solution)

</PRE><H1><A NAME=v9r1>2010-04-14 LbcomSys v9r1</A></H1><PRE>
This version uses Gaudi v21r8 and LHCb v30r1

- Packages modified: HltDAQ v1r7, L0DU v10r5, RichTools v2r29p2,
    STAlgorithms v4r0, STCheckers v3r0, STMonitors v3r0, STTools v4r0,
    VeloDAQ v5r0, VeloTools v3r5

- In HltDAQ v1r7
  . HltDecReportsDecoder: try alternative standard RawEventLocations
    (::Copied, ::Default)  if  rawEvent not found in the user-defined location

- In L0DU v10r5
  . L0DUFromRawTool : try alternative standard RawEventLocations
    (::Copied, ::Default)  if  rawEvent not found in the user-defined location
  . L0DURawBankMonitor : implement filterPassed to filter out problematic event
    (according to a mask set via options)

- In RichTools v2r29p2
  . Minor update to Rich::TabulatedRefractiveIndex to correctly use the HLT
    or Offline refractive indices from RichDet depending on if the tool is
    in an HLT or Offline context.

- In STTools v4r0, STMonitors v3r0, STCheckers v3r0, STAlgorithms v4r0
  . Remove STSignalToNoiseTool

- In STAlgorithms v4r0
  . Allow use of cuts from conditions in STClusterCreator
  . Make threshold integer + cut >= (was >)

- In STCheckers v3r0
  . add cluster size versus angle plots to STClusterResolution

- In STMonitors v3r0
  . Additional Protection in STClusterMonitor
  . Added possibility to cut on maximum number of clusters in STClusterMonitor.
  . Finalize STDumpADCs with STTupleAlgBase::finalize.
  . Added algorithm (STDumpClusters) to dump all clusters in an event to an ntuple

- In VeloDAQ v5r0
  . When more than 10k VeloClusters are to be decoded, decoding is aborted, an
    Error is printed and empty containers are provided instead (both lite and
    full). Protects against excessive reconstruction time and memory
  . Made a corrupted bank length in the full cluster decoding an Abort event
    incident and caused the algorthm processing of that event to cease.
  . DecodePileUpData : changed info() messages to Info() for non existing PU
    banks

- In VeloTools v3r5
  . Fix in cluster position tool - the tool now follows the Tell1 way completely

</PRE><H1><A NAME=v9r0>2010-03-25 LbcomSys v9r0</A></H1><PRE>
This version uses Gaudi v21r8 and LHCb v30r0

- Packages modified: CaloTools v5r16, DAQMonitors v1r2, HltDAQ v1r4,
    L0Calo v11r1, L0DU v10r4, L0Muon v9r1, L0MuonMonitor v2r0, PuVeto v7r7p1,
    MuonAssociators v3r3, RichDAQ v3r26p1, RichTools v2r29p1, STMonitors v2r6,
    STTools v3r18, VeloAlgorithms v5r2, VeloDAQ v4r13, VeloSimulation v3r7,
    VeloPixDAQ v1r1

- In LbcomSys v9r0
  . Added tests to instantiate configurables

- In CaloTools v5r16
	. CaloHypoToCalo: Implement new virtual method _setProperty

- In DAQMonitors v1r2
  . RawBankReadoutStatusMonitor : fix missing bin for last status item ('Unknown')

- In HltDAQ v1r4
  . Add check of RawBank magic pattern in HltDec/Sel/VertexReportsDecoder,
    HltRawBankMonitor

- In L0Calo v11r1
  . L0CaloCandidatesFromRaw.cpp: protect against missing magic pattern in
    RAW banks. In this case, do not decode the bank.

- In L0DU v10r4
  . L0ProcessorDecoder/L0DUEmulatorTool : no longer return Failure when processor
    data is missing. Process anyway with NULL-input (+lot of warnings)
  . L0Filter : improve L0Filtering (TCK-dependent orChannels)

- In L0Muon v9r1
  . Change in CondDB (L0MuonAlg), use new condition (SoftFOI)
  . Add implementation of L0MuonOverflowTool, L0MuonOLErrorTool, L0MuonInputTool
  . Better handling of TAE event (L0MuonCandidatesFromRaw & L0MuonAlg)
  . L0MuonOutputs : add protection against wrong magic pattern in RAW banks.

- In L0MuonMonitor v2r0
  . Remove obsolete file L0MuonMonitor_dll.cpp
  . Add dependency to L0/L0Muon (requirements)
  . Add new algorithms : L0MuonMonitorProcessing, L0MuonMonitorInput,
    L0MuonMonitorError, L0MuonMonitorData, L0MuonMonitorCandidates
  . L0MuonOnlineMonitor : improvements + bug fixe (get odin info only for
    central time slice)
  . L0MuonMuonComp : new output format, imporve handling of pdm
  . L0MuonAlgComparison : implement a light mode if Online property is set
  . L0MuonMonitorBase :
	  o new helper functions : getL0MuonPads, olsErrorSummary, activeTS
    o new properties : Prescale & Online

- In PuVeto v7r7p1
  . PuVetoAlg: bug fix for backward compatibility (no bank-size check on
    older bank version 1) + magic number check

- In MuonAssociators v3r3
  . changes in MuonPad2MCTool

- In RichDAQ v3r26p1
  . Add check on Rawbank magic pattern to detect general data corruption issues

- In RichTools v2r29p1
  . Add support "Below Threshold" Particle ID type.

- In STMonitors v2r6
  . Added new 2d histogram to normalise MPV map as profile2d is not supported by
    the MonitorSvc yet.
  . Changed MPV map histogram to 2D profile.
  . add algorithm to dump ADCs to an ntuple.
  . Improved STDQSummaryAlg's text output and added column for RunDate

- In STTools v3r18
  . Tuning of measurement uncertainties

- In VeloAlgorithms v5r2
  . Change electrons per ADC to 601 (was 442) to match VeloSim changes
  . Reduce Warning/Error messages to debug if there is a sensor with no
    MCVeloFEs, does happen now with VeloSim optimisation

- In VeloDAQ v4r13
  . ZS banks are no longer decoded when the TELL1 has set the error flag
  . Add protection against corrupted banks in Velo decoders

- In VeloSimulation v3r7
  . Changed simulation to match 2009 collision data and TELL1 style cluster
    maker, gain is lower 601 ADC per electron instead of 442 and smaller noise
  . Added an optimisation to only make isolated MCVeloFEs if they could start a
    cluster, still use inclusion threshold for FEs next to an FE with signal
  . Change timing curve to match data from tests on the cold detector
  . Fix simulation of NZS data to generate gaussian noise not gaussian tail
    noise

- In VeloPixDAQ v1r1
  . Add VeloPixRawBankToPartialCluster to have partial decoding of the
    VeloPixCluster: get central ChannelID + LiteCluster.
	. Add sorting of the FastClusterContainer in VeloPixRawBankToLiteCluster

</PRE><H1><A NAME=v8r3>2010-02-25 LbcomSys v8r3</A></H1><PRE>
This version uses Gaudi v21r7p1 and LHCb v29r2

- Packages modified: L0DU v10r3, PuVeto v7r7, RichTools v2r29, STMonitors v2r5

- In L0DU v10r3
  - L0DURawBankMonitor :
    . check L0Processor banks exist
    . report MuonBX misalignement only when L0Muon data is valid +
      mask BXID = 3562->3563 (L0Muon reset)
    . emulator check : compare preDecision instead of decision to avoid fake
      monitored error due to downscaling effect
  - L0DUEmulatorTool : fix abusive protection against multiple emulations per
    event (was preventing L0DUMultiTrends, L0ConfigMonitor.opt to run correctly)
  - L0DUMultiConfigProvider : fix verbose messaging when RootInTES != 'T0'
  - bug found in L0DU firmware for 'pathological' condition setting :
    -> PVSS exported TCK options may not match the actual board configuration
       when there are several conditions on the same data and 'data>0' condition
       is not set first ('data > 0' corresponds to an empty register)
    -> adapt L0CUDonfigProvider : no longer special treatment for ordering the
       'data>0' condition
       => match the actual PGA configuration not the buggy PVSS export !
    -> no impact on existing L0TCK (except maybe 0x1409 used for FEST)

- In PuVeto v7r7
  . PuVetoAlg fixed to avoid infinite loop on real data: events with a wrong
    L0PU bank size are skipped and warning is issued (fix for bug # 63402)

- In RichTools v2r29
  . Fix crash when running average is turn on in Rich::HPDOccupancyTool due to
    and infinite recursive call. Also protect against invalid HPD IDs in the
    data (L1 suppressed HPDs etc.).

- In STMonitors v2r5
  . Add first full version of STDQSummaryAlg (and STDQCounters)

</PRE><H1><A NAME=v8r2>2010-02-16 LbcomSys v8r2</A></H1><PRE>
This version uses Gaudi v21r7p1 and LHCb v29r1

- Packages modified: CaloTools v5r15, L0DU v10r2, L0Muon v9r0,
    RichMCMonitors v1r7p2, RichTools v2r28p1, STMonitors v2r4, STTools v3r16,
    VeloAssociators v2r4

- In CaloTools v5r15
	. Track2Calo : switch HeraBExtrapolator to RungeKutta

- In L0DU v10r2
  . Add new module (L0Algs) to allow to access the various algorithms used
    by L0Conf with their proper name
  . L0ConfigProvider  :
    o hardware-like automatic ordering of ElementaryCondition indices
      (can be disabled via options for backward-compatibility)
    o implement the condition reportSummary mask (from TCK configuration)
    o check each configuration against hardware limitations
      (short notice by default - detailed output can be activated by options)
    o use default naming for  predefined-data as defined in L0Event/L0DUBase.h
      (also in L0DUEmulatorTool and L0DUFromRawTool)
    o Detailed check for all configurations can be activated via
      context() = "CHECK"
  . L0DUElementaryData.xml :
    add new data type in enum (specific for 'RamBCID' data)
  . L0DUEmulatorTool :
    o report only registered condition
    o protect the decisisons downscaling against multi emulation/event
     (based on BeginEvent incident)
    o make L0DUEmulatorTool a public tool in L0DUAlg, L0DUFromRawTool,
      L0DUMultiTrends, L0Pattern, L0DURawBankMonitor
  . requirements : use L0TCK v3*
    (backward-compatible ordering of condition for already  simulated data)

- In L0Muon v9r0
  . fix bug when filling L0MuonError for L0MuonCtrlCand Bank
  . Fix compilation warning on Windows (L0MuonOutputs, L0MuonFromRawTrans)
  . L0MuonAlg :
    o set proper protection against missing condition in CondDB
    o define CondDB conditions and parameters names as algorithm properties
  . Trigger parameters and CondDB :
    o access the FOI values and the procVersion from CondDB
    o new property : IgnoreCondDB to disable the previous feature if needed
      (set to true by default until conditions are in default CondDB tags)
    o remove useless IgnoreM2 property
    o set new default for procVersion = 3
  . Clean up :
    o remove calls to ChronoStatSvc (L0MuonAlg + L0MuonCandidatesFromRaw)
    o split the fillOlsFromDigits method into parts:
      + get the hits from the relevants location
      + fill the ol registers
    o L0MuonOutputTool :
      + use locations defined in L0Event for BCSU candidates
      + remove the check using exists<>(location) to avoi conflict with the
        data on demand svc.

- In RichMCMonitors v1r7p2
  . Adapt to changes in histogram base classes.

- In RichTools v2r28p1
  . Fix untested StatusCode in HPD hot pixel finder.

- In STMonitors v2r4
  . Changes to STClusterMonitor:
    o Added some counters to STClusterMonitor.
    o Added histogram with MPV for each sector.
    o Added possibility to cut on cluster charge and total number of clusters.
    o Use newest version of ITDetectorPlot.
    o Changed binning of some histograms to more realistic range.
  . Changes to STErrorMonitor:
    o Calculate fraction of errors banks set correctly for TT.
    o Added labels to 2D histograms
    o Added new histogram of error type versus TELL1.
  . Fixed some indentation in STTAEClusterMonitor.

- In STTools v3r16
  . Changed to STCMSNoiseCalculationTool to read pedestal from new database
    structure.

- In VeloAssociators v2r4
  . Remove obsolete file VeloAssociators_dll.cpp
  . Better associate clusters to MCParticles with MCHits from delta rays
  . Prevent the creation of debug messages if the message level is too high

</PRE><H1><A NAME=v8r1>2010-02-04 LbcomSys v8r1</A></H1><PRE>
This version uses Gaudi v21r7 and LHCb v29r0

- Packages modified: DAQMonitors v1r1, L0Calo v11r0, L0DU v10r1, PuVeto v7r6,
    OTMonitor v3r2p1, STTools v3r15

- In DAQMonitors v1r1
  . New monitoring algo : TriggerTypeCounter provides event counter per
    TriggerType/BXType/CalibrationType

- In L0Calo v11r0
  . L0CaloAlg.h/.cpp: use condition database to decide if we use ECAL in
    the Hadron trigger, and PS/SPD in the ECAL triggers
    (available starting from tags *-20100202*, SQLDDDB v5r19)
  . L0CaloCheckCalibCte.cpp: move from int to unsigned long

- In L0DU v10r1
  . cmt/requirements: link to L0TCK v2*
  . update FastL0DUFilter.cpp (for bank version=2)
  . L0DUFromRawTool : fix problem in decoding n+/n- consecutive events
                      affects only data taken with recent f/w &  bank v2
  . L0TCKFilter : inherit from L0AlgBase + add counters
  . L0DUAlg,L0DUFromRawTool: allow to set the type of the IL0DUConfigProver tool
  . L0DUConfigProvider: o Also allow 'L0DUConfig' as name of the template
                        o Reconfigures itself when 'on the fly' updates of its
                          properties are performed
  . L0Filter : o update with decision type and subTriggers filtering
               o inherits from L0AlgBase (L0Context-dependent location)
               o protect against missing L0 + add counters
  . new algo L0DUMultiTrends.cpp provides comparison of various TCK + trending
  . L0Conf :
    o remove the imports of opts files (translated in python).
    o add new properties :
      + EnableL0DecodingOnDemand : setup the data on demand service
                                   to decode the L0 on demand
      + FastL0DUDecoding  : activate fast L0 decoding for HLT
      + FullL0MuonDecoding : activate L0Muon full decoding
      + L0DecodingContext : string appended to the location of the
                            containers with the decoding results
	    + L0EmulatorContext : string appended to the location of the
	                          containers with the emulation results
  . L0EmulatorSeq.opts : fix typo
  . Few updates in L0DUConfigMonitor.opts

- In PuVeto v7r6
  . PuVetoFillRawBuffer bug fixed: o m_PUcontainer inizialized per event
                                   o swap in the LUT found and corrected
  . bit_order.h bug fixed: words with 32nd bit on are now correctly reversed

- In OTMonitor v3r2p1
  . Remove obsolete OTTimeCreator from Boole.opts (see task 12764)

- In STTools v3r15
  . Add STSelectBySN tool

</PRE><H1><A NAME=v8r0>2010-01-22 LbcomSys v8r0</A></H1><PRE>
This version uses Gaudi v21r7 and LHCb v29r0

- Packages added in SVN: DAQ/DAQMonitors    : Monitors for DAQ event objects

- Packages added in CVS: VeloPix/VeloPixDAQ : Prepare and decode VeloPix RawBank

- Packages modified: L0Calo v10r3, L0DU v10r0, L0Muon v8r6, PuVeto v7r5,
                     OTMonitor v3r2, STDAQ v3r21, VeloAlgorithms v5r1

- In L0Calo v10r3
  . L0CaloCompare.cpp: add print out of candidate type to ease debugging

- In L0DU v10r0
  . L0DUFromRawTool : fix problem with Calo address encoding for ProcessorData.
  . Adapt options for L0Muon change
  . Adapt to Lumi Trigger decisions
    o adapt to changes in L0Event
    o new RawBank format (version v2) - default for simulation in L0DUAlg
    o adapt decoding
    o adapt monitoring (both L0DUReport and L0DUBank monitoring)
  . Add 'template' configuration in L0DUMultiConfigProvider needed by HLT for
    fast run change: L0DUConfig.Template tool available at initialization time
  . L0DUFromRawAlg :
    o inherits from L0Base/L0FromRawBase
    o adapt TES I/O to L0 convention
    o Warning : writeProcData now is set false by default (was true)
  . L0DUAlg, L0DUReportMonitor :
    o inherits from L0Base/L0AlgBase
    o adapt TES I/O to L0 convention
  . Handling TAE events in L0DU(Multi)ConfigProvider (L0DUConfig is TAE slot
    dependent)
    o L0DUFromRawTool : load config according to RootInTES
                        now private tool of L0DUFromRawAlg to propagate RootInTES
  . Monitoring : review and update histogram production
  . Adapt and complete L0Pattern.cpp and related options (for firmware checks)
  . New L0ConfigMonitor.opts for monitoring the performance of a given TCK
  . Update FastDecoding.opts
    o L0DUFromRawTool : FillDataMap property default is now TRUE
      to be used for fast minimal decoding of L0DU bank (factor 4 in speed)

- In L0Muon v8r6
  . Add dependency on new base package L0/L0Base
  . L0MuonAlg, L0MuonCandidatesFromRaw : use new structure (common options
    amongst all L0 packages, defined in L0Base)

- In PuVeto v7r5
  . Temporary removed all PuVetoAlg histos not needed for the trigger itself
  . Put a safe check in PuVetoAlg no to (even) create any histo by default

- In OTMonitor v3r2
  . Update OTTimeChecker and OTTimeClassification to use OTLiteTime's

- In STDAQ v3r21
  . Add dependency on DAQUtils, new location of BankWriter.h helper

- In VeloAlgorithms v5r1
  . Change signatures of two methods from:
      StatusCode VeloSimTell1ClusterMaker::fillAndWriteRawEvent()
      StatusCode VeloTell1DataProcessor::writeForSenors()
    to
      void VeloSimTell1ClusterMaker::fillAndWriteRawEvent()
      void VeloTell1DataProcessor::writeForSenors()
  . Implement two new methods for adding ZS processing engines
      void addEngineInStaticMode(unsigned int tell1, const DeVeloSensor* sens)
      void addEngineInDynamicMode(unsigned int tell1)
  . Add extra layer of protection against missing NZS data streams

</PRE><H1><A NAME=v7r11>2009-12-15 LbcomSys v7r11</A></H1><PRE>
This version uses Gaudi v21r6 and LHCb v28r5

- Added package VeloPix/VeloPixDAQ

- Packages modified: PuVeto v7r4, OTAssociators v4r4, STMonitors v2r3

- In PuVeto v7r4
  . PuVetoAlg "decoding part" re-written, to deal with the current PU bank
    (LHCb::RawBank::L0PU) format

- In OTAssociators v4r4
  . Change property AcceptTime in OTMCDepositLinker to 9 ns (3 sigma).

- In STMonitors v2r3
  . STPulseMonitor, STClusterMonitor, STTAEClusterMonitor:
    Made the selection of a bunchID a list of bunchIDs.
  . Added cut on ADC values of clusters when filling sampling plots.
  . STNZSMonitor: add possibility to include time/date in noise histogram titles
  . STTAEClusterMonitor: fix the y range of the profile histograms to match that
                         of the 2D histograms
  . STErrorMonitor: changed number of bins in fraction ports histogram
  . STPulseMonitor: Added possibility to loop over NZS data.

</PRE><H1><A NAME=v7r10>2009-11-27 LbcomSys v7r10</A></H1><PRE>
This version uses Gaudi v21r6 and LHCb v28r4

- Packages modified: CaloTools v5r14, HltDAQ v1r2, L0Calo v10r2, L0Muon v8r5p3,
    OTMonitor v3r1, STMonitors v2r2, STTools v3r14, VeloDAQ v4r12

- In CaloTools v5r14
  . Calo2MCTool :
    o new methods isCalo(particle), isPureNeutralCalo(particle)
                  findMCOrBest(string/ParticleID,threshold)
    o complete the code (still not fully completed)

- In HltDAQ v1r2
  . HltVertexReportsWriter,Decoder: save covariance matrix in HltVertexReports
    (bank version=1, previous was=0). Old Decoder will not be compatibile with
    the new content.
  . HltSelReportsDecoder: decode Particle2Vertex info in HltObjectSummary of
    selection. Old Decoder will give warnings about new content (if present),
    but will work OK (bank format not changed).

- In L0Calo v10r2
  . L0CaloCompare.cpp: fix name of histograms
  . Add new algorithm: L0CaloCheckCalibCte.cpp to check L0 calibration constants

- In L0Muon v8r5p3
  . Fix to decode bank v3

- In OTMonitor v3r1
  . Remove obsolete "occupancy in T1 layer 1 versus x coordinate" histogram from
    OTTimeMonitor (was crashing anyway...)
  . Remove unused variables in OTTimeMonitor following previous changes
  . Remove obsolete file OTMonitor_dll.cpp

- In STMonitors v2r2
  . Add histogram in to look at the fraction of beetle ports which sent error
    banks to STErrorMonitor algorithm
  . Add class STNoiseCalculation which uses the noise calculation tool to
    calculate noise!

- In STTools v3r14
  . Add tool to select ladders 1 and 7 in IT for alignment
  . Add implementations of ISTNoiseCalculationTool:
    o re-implementation of Nicola Chiapolini's methods from STNZSMonitors
    o STNoiseCalculationToolBase: base class to provide common data accessors.
    o STNoiseCalculcationTool: calculates noise from using ADCs from input
      container.
    o STCMSNoiseCalculationTool: calculates noise after CMS using different
      techniques for CMS.

- In VeloDAQ v4r12
  . Fixed memory leak in SmartVeloErrorDecoder
  . Lowered message severity in PU decoding

</PRE><H1><A NAME=v7r9>2009-11-23 LbcomSys v7r9</A></H1><PRE>
This version uses Gaudi v21r6 and LHCb v28r3

- Packages modified: L0Calo v10r1, OTMonitor v3r0, STMonitors v2r1, VeloDAQ v4r11

- In L0Calo v10r1
  . L0CaloCompare.cpp: fix the comparison of SpdMult and SumEt

- In OTMonitor v3r0
  . Modified OTTimeMonitor to work with LiteTimes

- In STMonitors v2r1
  . Fix an even more stupid bug in STErrorMonitor which was introduced as plot2D,
    book2D, AIDA and root all have the number of bins at a different places in
    their interfaces.

- In VeloDAQ v4r11
  . Modify PrepareVeloFullRawBuffer algorithm to handle round-robin data
  . Add protection in SmartVeloErrorDecoder against corrupted data

</PRE><H1><A NAME=v7r8>2009-11-16 LbcomSys v7r8</A></H1><PRE>
This version uses Gaudi v21r6 and LHCb v28r2

- Packages modified: CaloAssociators v6r10, CaloTools v5r13, HltDAQ v1r1p1,
    L0Calo v10r0, L0DU v9r0, STAlgorithms v3r10, STDAQ v3r20, STMonitors v2r0,
    STTools v3r13, VeloAlgorithms v5r0, VeloDAQ v4r10

- In CaloAssociators v6r10
  . MCTruthOnDemand.py :
	  o add explicitely the caloDigit creation in CaloDigit2MC sequence
    o fix typo
  . CaloAssociatorConf: new configurable to access/build MCTruth for Calo objects
  . Re-organize CaloAssociators.opts

- In CaloTools v5r13
  . L0Calo2CaloTool :
    o bugfix - make storage of all created clusters on TES the only supported
      behaviour (therefore remove the 'DuplicateClustersOnTES' property)
    o use CaloFunctors::neighbours() instead of look_neig()

- In HltDAQ v1r1p1
  . In HltRoutingBitsWriter, publish counters

- In L0Calo v10r0
  . requirements: use new base package L0/L0Base
  . L0CaloAlg, L0CaloCandidatesFromRaw: use new structure (common
    options amongst all L0 packages, defined in L0Base)
  . L0CaloCandidatesFromRawBank: do not write candidates in TES in the tool
    but move it outside
  . L0CaloCompare: do not compare during the IDLEs
  . L0Candidate: add creation from L0CaloCandidate

- In L0DU v9r0
  . Fix options to use new syntax of L0Calo options:
	  o options/Boole.opts
    o options/L0EmulatorSeq.opts
    o options/L0Sequence.opts
    o options/ReplaceL0DUBanksSeq.opts

- In STAlgorithms v3r10
  . Add algorithm that checks which strips are alive
  . Add algorithm to write noise conditions

- In STDAQ v3r20
  . Minimize messages about lost banks
  . Added method to get source ID from TELL1 number to readout tool.
  . RawBankToSTClusterAlg: Adopt changes in STKernel, STTell1Board::ADCToOffline.
    Also, the requirement on whether the interstrip fraction was rounded up to
    one, now depends on the interstrip stored in the raw buffer, and on a loose
    requirement on the re-calculated interstrip fraction.

- In STMonitors v2r0
  . STNZSMonitor :
    o Now uses ISTNoiseCalculationTool to calculate noise
    o Add plots of pedestals
    o Fix stupid bug with uninitalised variable
  . Fix binning of 2d histograms for ADCs vs TELL1
  . Add flags to only makes noise plots for certain TELL
  . Book histograms in STErrorMonitor for online monitoring.
  . Change noise plots to profile histograms; better for the history mode in the
    online monitoring.
  . Add algorithm (STNoiseCalculation) to calculate noise in Tool.
  . Modified the binning of some histograms in the STTAEClusterMonitor
  . Add new algorithm STPulseMonitor. It monitors the pulse shape as a function
    of the spill, using NZS+TAE data.

- In STTools v3r13
  . Add tool to select ladders 1 and 7 in IT for alignment
  . Add implementations of ISTNoiseCalculationTool:
    o Re-implementation of Nicola Chiapolini's methods that were in STNZSMonitors
    o STNoiseCalculationToolBase: base class to provide common data accessors.
    o STNoiseCalculcationTool:
      calculates noise from using ADCs from input container.
    o STCMSNoiseCalculationTool:
      calculates noise after CMS using different techniques for CMS.

- In VeloAlgorithms v5r0
  . VeloTell1DataProcessor: add new methods to reorder strips
  . Add helper method to search for sector shift - useful during strip reordering

- In VeloDAQ v4r10
  . DecodeVeloRawBuffer.cpp: Stop printing by default warnings when duplicate
    cluster has been found. This is a known problem with Velo Tell1 firmware
  . DecodePileUpData:
    o bug fix: switched to unsigned int
    o bug fix: there were some StatusCode FAILURE resulting in a crash when the
      Event was not retreived from the right location
    o Added a property to disable the NZS banks decoding


</PRE><H1><A NAME=v7r7>2009-10-21 LbcomSys v7r7</A></H1><PRE>
This version uses Gaudi v21r5 and LHCb v28r1

- Packages modified: CaloTools v5r12, HltDAQ v1r1, L0Calo v9r22, L0DU v8r19,
    L0Muon v8r5p2, RichAlgorithms v1r2, RichDAQ v3r26, RichTools v2r28,
    VeloAlgorithms v4r10, VeloDAQ v4r9, VeloTools v3r4

- In CaloTools v5r12
  . Adapt to changes in CaloDAQ
  . New tool : Calo2MCTool.{cpp,h} : handle Calo object->MC relation
    (interface CaloInterfaces/ICalo2MCTool.h). Not yet complete but usable
  . Calo2Calo.cpp :
    o make use of CaloAlgUtils.h to define context-dependent TES I/O
    o caloGetterTool : public -> private tool
    o use caloGetterTool in isLocMax(id) method
  . CaloGetterTool.cpp : make use of CaloAlgUtils.h to define context-dependent
                         TES I/O
  . L0Calo2CaloTool.cpp: decrease error level for invalid ur/dr/ul cells
  . use Relations in requirements

- In HltDAQ v1r1
  . Add HltRoutingBitsFilter

- In L0Calo v9r22
  . L0Candidate.h/.cpp: add separate file to contain class declarations
    which were previously in L0CaloAlg.h/.cpp
  . L0CaloCandidatesFromRaw.cpp: clean code
  . L0CaloCandidatesFromRawBank.h/.cpp: clean code
  . L0CaloAlg.h/.cpp: clean code
  . L0CaloCompare.cpp: allows to do full monitoring on Hadron candidates

- In L0DU v8r19
  . L0DUConfigProvider.cpp : remove protection against empty configuration.
    Simple TCK registration is enough to run w/o crash.
  . *.cpp/h : replace endreq by endmsg
  . Fix bug in L0Conf:
    import of L0Sequence.opts was missing when using DecodeL0DU flag

- In L0Muon v8r5p2
  . Remove calls to ChronoStatSvc in execute

- In RichAlgorithms v1r2
  . Add new algorithm that runs the generic HPD analysis tools on the raw
    data for each TAE event.

- In RichDAQ v3r26
  . Print more hardware information about software suppressed pixels
  . Add software suppression of (hot) pixels to raw decoder tool.

- In RichTools v2r28
  . Protect SnellsLawRefraction against zero intersections in initialize()
  . Add new HPD occupancy and hot pixel finder tools

- In VeloAlgorithms v4r10
  . VeloEffChecker.cpp : fix in finalize method to take into account that from
    now, there are no separate "numeric" and "literal" maps in GaudiHistoAlg.

- In VeloDAQ v4r9
  . Bug fix in error bank decoder: there were no (empty) event infos inserted
    for PPFPGAs w/o errors resulting in a crash when trying to access an info
    for a PPFPGA > number of PPFGA w/ errors. Of course the positions were also
    wrong. The only cases handled correctly before the fix were:
    1. only errors in PPFPGA 0
    2. errors in all PPFPGAs

- In VeloTools v3r4
  . protected Linux-only include in LivDBTELL1SensorMap on Windows
  . added tool implementations previously residing in VeloTELL1Tools
  . added new tool providing PVSS TELL1 names

- In CaloTools v5r12, L0Calo v9r22, L0DU v8r19
  . Adapt to changes in CaloDAQ

- In HltDAQ v1r1, L0Calo v9r22, VeloTools v3r4
  . Remove obsolete file <package>_dll.cpp

</PRE><H1><A NAME=v7r6>2009-09-07 LbcomSys v7r6</A></H1><PRE>
This version uses Gaudi v21r4 and LHCb v28r0

- Packages modified: CaloAssociators v6r9, CaloTools v5r11, HltDAQ v1r0p1,
    RichAlgorithms v1r1p1, RichDAQ v3r25, RichMCMonitors v1r7p1,
    RichMCTools v3r13, RichTools v2r27p1, STAlgorithms v3r9, STCheckers v2r14,
    STMonitors v1r6, STTools v3r12, VeloAlgorithms v4r9, VeloDAQ v4r8

- In LbcomSys v7r6
  . Add apply_pattern container_package

- In CaloAssociators v6r9
  . Add CaloReCreateMCLinks.cpp (moved from CaloDAQ)
  . Introduce new configuation: python/CaloAssociators/MCTruthOnDemand.py
  . Make sure that a request to the data-on-demand service for
    Relations/Raw/Calo/Digits first creates digits, without relying on a cascade
    from the data-on-demand service

- In CaloTools v5r11
  . Remove filling of track-extra info, according to changes in Track.xml class

- In HltDAQ v1r0p1
  . Bug fix in HltLumiWriter

- In RichDAQ v3r25
  . Fix decoding bug for Alice ZS data.

- In RichMCTools v3r13
  . Update MCTruthTool to support returning vector of MCRichHits associated to
    a given HPD (as identified by its RichSmartID).

- In STAlgorithms v3r9
  . Modify WriteSTStatusConditions to use STXMLUtils

- In STCheckers v2r14
  . Add plots to STPerformanceMonitor

- In STMonitors v1r6
  . Modified STSummaryMonitor and STErrorMonitor to always book histograms
    used in Summary tab of Histogram presenter.
  . Changes to STClusterMonitor:
    o IT Cluster map uses ITDetector from STKernel.
    o Modified binning for ADC distributions
    o Add plot of ODIN BCID, plus add cut on this number to pick up only 1 BCID
    o Reduced number of times that warning is printed when cluster location is
      missing.
    o Added plots of ADCs in service box for 1,2,3,4 strip clusters to detailed
      histograms
    o TT cluster map:
      + invert A and C side to comply with offline and IT plot.
      + now uses the TTDetectorPlot from STKernel.
  . Modified STNZSMonitor to book histograms at initialize stage.
  . Modified STNZSMonitor code after profiling to improve speed

- In STTools v3r12
  . Add STRawADCInfo tool
  . Add APE to STOnlinePosition

- In VeloAlgorithms v4r9
  . Add VeloSimTell1ClusterMaker,SimTell1ZSProcessEngine,VeloTell1DataProcessor:
    algorithms to implement Tell1 clusterization process in LHCb simulation
    stream
  . Add Digitizer, compareSensor: helper classes for Tell1 clusterization

- In VeloDAQ v4r8
  . Added DecodePileUpData, to decode PileUp banks (binary), both NZS and ZS.

- In CaloAssociators v6r9, RichAlgorithms v1r1p1, RichDAQ v3r25
     RichMCMonitors v1r7p1, RichMCTools v3r13, RichTools v2r27p1, STMonitors v1r6
  . Replace endreq by endmsg

-In CaloTools v5r11, RichAlgorithms v1r1p1, RichDAQ v3r25, RichMCMonitors v1r7p1,
    RichTools v2r27p1, STCheckers v2r14, VeloAlgorithms v4r9, VeloDAQ v4r8
 . Remove obsolete file src/<package>_dll.cpp

</PRE><H1><A NAME=v7r5>2009-07-30 LbcomSys v7r5</A></H1><PRE>
This version uses Gaudi v21r3 and LHCb v27r5

- Packages modified: CaloAssociators v6r8, L0DU v8r18, L0Muon v8r5p1,
    RichMCTools v3r12, STTools v3r11

- In CaloAssociators v6r8
  . Add CaloClusterEntry status and weight filtering in CaloClusterMCTruth.cpp :
    default UseForEnergy digits only and no minimal weight

- In L0DU v8r18
  . Implement RAMBCID data
  . FastDecoding.opts: New options for fast (partial) decoding of L0DU bank

- In L0Muon v8r5p1
  . Avoid pushing hardwired filenames into JobOptionsSvc by expanding
    environment variables 'late'

- In RichMCTools v3r12
  . Add new tool Rich::MC::NULLMCTruthTool that implements the MC truth
    interface but always returns NULL information.

- In STTools v3r11
  . Add possibility to add a misalignment error to STOfflinePosition tool
  . Add printouts in initialize of STClusterSelectorOR, STSelectByCharge,
    STSelectChannelIDByStatus and STSelectClustersByChannel.

- In CaloAssociators v6r8, L0DU v8r18, L0Muon v8r5p1, RichMCTools v3r12
  . Remove obsolete file <package>_dll.cpp

</PRE><H1><A NAME=v7r4>2009-07-15 LbcomSys v7r4</A></H1><PRE>
This version uses Gaudi v21r3 and LHCb v27r4

- Packages modified: STAlgorithms v3r7, STDAQ v3r19, STMonitors v1r5,
    STTools v3r10

- In STAlgorithms v3r7
  . Add functionality to STKiller algs [makes selector name an option ]
  . Update killingExample.opts

- In STDAQ v3r19
  . Added method to get TELL1 number from source ID to readout tool.
  . Fixed a bug in the STPedestalDecoding.cpp

- In STMonitors v1r5
  . Replace endreq by endmsg
  . Modified algorithms to get TELL1 number from SourceID using readout tool.
  . Modified STClusterMonitor and STTAEClusterMonitor to book histograms at
    initialize stage.

- In STTools v3r10
  . Don't default to all in case of empty list
  . Add printout to STSelectChannelIDByElement

- In STAlgorithms v3r7, STDAQ v3r19, STMonitors v1r5, STTools v3r10
  . Remove obsolete file <package>_dll.cpp, no longer needed with Gaudi v21r2

</PRE><H1><A NAME=v7r3>2009-07-01 LbcomSys v7r3</A></H1><PRE>
This version uses Gaudi v21r2 and LHCb v27r3

- Packages added:    Hlt/HltDAQ v1r0 - Hlt RawBanks writers/decoders/monitors
- Packages modified: RichTools v2r27, STMonitors v1r4

- In RichTools v2r27
  . Changed the way the global to/from photodetector panel frame conversion is
    made. A 3D tranform is calculated in the DeRichHPDPanel and used by the
    SmartIDTool.

- In STMonitors v1r4
  . Modified binning in TT Cluster map to give a better picture.

</PRE><H1><A NAME=v7r2>2009-06-22 LbcomSys v7r2</A></H1><PRE>
This version uses Gaudi v21r1 and LHCb v27r2

- Packages modified: L0Calo v9r21, L0MuonMonitor v1r5, RichDAQ v3r24,
    RichMCMonitors v1r7, STMonitors v1r3, VeloDAQ v4r7

- In L0Calo v9r21
  . L0CaloCompare: clean code
  . L0CaloMonit: clean code

- In L0MuonMonitor v1r5
  . L0MuonPadsHistos, L0MuonCandHistos :
    o correct 2D histograms filling (requires a version of L0/L0MuonKernel
      AFTER v8r6)
    o add the unweighted option for 2D histos (e.g. for pdm events)
  . L0MuonMuonComp : add the possibility to write the summary on a file

- In RichDAQ v3r24
  . Improvements to the Raw Data format tools
    + Fix bug that causes event sizes to be double counted by
      RichRawDataFormatTool, when the tool is called more than once per event.
    + Add TAE type to event summary printed, when appropriate.
    + Improve how the tool RichRawBufferToSmartIDsTool calls
      RichRawDataFormatTool to avoid it being used more than neccessary.

- In STMonitors v1r3
  . Added plot of link vs TELL1 in STClusterMonitor
  . Change binning of number of clusters in STClusterMonitor for TED
  . Renamed histogram MPV rather Mean cluster adc value in STTAEClusterMonitor

- In VeloDAQ v4r7
  . More robustness in full cluster decoding. Duplicate channel IDs now only
    causes a cluster to be dropped, not the entire bank for a source ID.
  . Made PrepareVeloFullRawBuffer handle missing input container gracefully

- In RichDAQ v3r24, RichMCMonitors v1r7
  . Fix WIN32 compilation warning

</PRE><H1><A NAME=v7r1>2009-06-02 LbcomSys v7r1</A></H1><PRE>
This version uses Gaudi v21r1 and LHCb v27r1

- Packages modified: CaloTools v5r9, L0DU v8r17, STAlgorithms v3r7,
    STCheckers v2r13, STDAQ v3r18, STMonitors v1r2, L0MuonMonitor v1r4p1,
    STTools v3r9p1, SiTools v1r7p1

- In CaloTools v5r9
  . Add a bit more statistical printout
  . Add missing #include "Event/Particle.h" following removal from IPart2Calo.h
  . Replace endreq by endmsg

- In L0DU v8r17
  . L0DURawBankMonitor : fix bug in SpdMult error monitoring

- In STAlgorithms v3r7
  . WriteSTStatusConditions: removed obsolete replaceChars function, added
    catalog tag to header and footer, fixed little bug in DTD tag.

- In STCheckers v2r13
  . Moved STCluster monitoring to STMonitors

- In STDAQ v3r18
  . Added options files for decoding TAE events in online monitoring.

- In STMonitors v1r2
  . Fix unused StatusCode in STClusterMonitor.
  . Moved STClusterMonitor and STLiteClusterMonitor into this package and into ST
    namespace.
  . Added new algorithm ST::STTAEClusterMonitor for monitoring of clusters
    produced in TAE event.
  . Added options directory and .py and .opts files for monitoring TAE events
    online.

- In L0MuonMonitor v1r4p1, CaloTools v5r9
  . Add missing <package>_dll.cpp file for component library on Windows

- In STTools v3r9p1, SiTools v1r7p1
  . Fixes for Windows compilation

</PRE><H1><A NAME=v7r0>2009-05-11 LbcomSys v7r0</A></H1><PRE>
This version uses Gaudi v21r0 and LHCb v27r0

- Packages modified: CaloTools v5r8, L0Calo v9r20, L0DU v8r16,
    OTAssociators v4r3, OTMonitor v2r11, RichAlgorithms v1r1, RichTools v2r26,
    SiTools v1r7, STAlgorithms v3r6, STCheckers v2r12, STDAQ v3r17,
    STMonitors v1r1, STTools v3r9, VeloDAQ v4r6

- In CaloTools v5r8
  . new tool CaloGetterTool : helps to speed-up CaloReco processing
  . Calo2Calo/CaloHypo2Calo
    o get digits data via CaloGetterTool
    o speed-up processing
    o new property ('IdealGeometry') when perfect alignment is assumed

- In L0Calo v9r20
  . Adapt to change in CaloDet

- In L0DU v8r16
  . In L0Conf:
    o change default TCK for re-simulating L0 bank for DC06 data (0xFFFF->0xFFF8)
    o Implement missing action for DecodeL0DU property
    o Add "TCK" property, used to specify a TCK for the simulation or emulation
    o  Add a verbose method to enable the print out of the log info.
  . L0DEmulatorTool/L0DUFromRawTool : speed-up processing
  . L0DUConfigProvider : protection against missing config description
  . L0DURawBankMonitoring : add monitoring histo for PileUp multiplicity

- In OTAssociators v4r3
  . Bug fix: correctly apply window in OTMCDepositLiner. Add dtime as weight.

- In OTMonitor v2r11
  . Added monitoring algorithm for MCOTTimes

- In RichAlgorithms v1r1
  . Add new algorithm which artifically varies the gas and temperature
    Conditions, to allow simulation of real data variations in MC data.

- In RichTools v2r26
  . Downgrade some messages about refractive index changes to debug()

- In SiTools v1r7
  . Simplify calculation of the max in SiZuriFunction
  . Add remainder/ristime functions to SiAmplifierResponse

- In STAlgorithms v3r6
  . Add WriteSTStatusConditions algorithm
  . Add killing by truth example to killing options
  . Add digit merging classes
  . Add Clusters to digits algorithm
  . Follow changes in STTools [STClusterKiller]
  . Add STLiteClusterKiller
  . Add examples of cluster killing in options file

- In STCheckers v2r12
  . Bug fixes in TTOccupancy algorithm

- In STDAQ v3r17
  . STFullDecoding: Add TELL1 ID to error messages + remove hard-coded hex
    numbers.
  . Clean up STClustersToRawBank to follow changes in STClusterCreator

- In STMonitors v1r1
  . Modified STErrorMonitor and STNZSMonitor classes to get TELL1 number from
    source ID using the method in the base class.
  . Changed STZSMonitor to GaudiHistoAlg and fixed bug which meant that instances
    for IT and TT couldn't be run together in Brunel.
  . STSummaryMonitor: Moved to new base class plus some cosmetics and clean up.
  . Removed obsolete STRawBankMap (is now in STKernel).
  . STNSZMonitor: Moved to new base class, added event counting per PP.
  . Added STErrorMonitor algorithm to monitor the error banks.
  . all histograms from STSummary are now available
  . renamed Analysers to Monitors
  . added python files for createing and configuring pages

- In STTools v3r9
  . STOfflinePosition:
    o Improved tune of error estimates using long tracks.
    o New charge sharing functions. Cubic plus linear term for 2-strip clusters,
      cubic term for 3-strip clusters, linear term for 4-strip clusters, no
      correction applied for the others. The error estimates are also changed.
  . Add tool to select spillover clusters using previous sample
   [STSelectSpilloverCluster]
  . Add STSelectChannelIDByTruth [select by spillover, particle type etc]
  . Modifications to cluster selectors
  . Add STChannelID based selectors
  . Remove STCluster based selectors + replace with STSelectClustersByChannel
  . add cluster selector by charge

- In VeloDAQ v4r6
  . Change the default values for SectorCorrection and CableOrder variables
    no need to put additional lines into options file
  . Add flexibility to the SmartDecoder algorithm it no longer assumes
    anything about expected number of slots in error bank

</PRE><H1><A NAME=v6r27>2009-04-07 LbcomSys v6r27</A></H1><PRE>
This version uses Gaudi v20r4 and LHCb v26r3

- Packages added:    STMonitors - Standard package for monitoring NZS and ZS data
- Packages modified: CaloTools v5r7, L0DU v8r15, OTMonitor v2r10,
    RichDAQ v3r23p1, STAlgorithms v3r5, STCheckers v2r11, STDAQ v3r16

- In CaloTools v5r7
  . Fix bad default setting for CaloHypo2Calo.cpp (Seed=false -> true) +
    minor bug fix
  . Improve verbosity for CaloCosmics stuff

- In L0DU v8r15
  . Add "DataType" property to L0DUConf(), used to define default TCK
  . Default TCK is "0xFFFF" if DataType is "DC06", "0xDC09" otherwise
  . Remove options/DefaultTCK.opts, obsoleted by above change
  . Fix compilation problem with gcc43
  . src/L0DUAlg.cpp  : m_sourceID can be changed by options
  . src/L0Filter.cpp : printout statistics in finalize()
  . src/L0DURawBankMonitor.cpp : implement bin labelling + few improvements.
  . src/L0DUReportMonitor.cpp  : implement dynamic bin labelling
  . src/L0DUConfigProvider.cpp : automatic L0DUTrigger definition
  . cmt/requirements : append libHist explicitely
                       use L0TCK v1r* (instead of v*)

- In OTMonitor v2r10
  . Protect divides by zero in MCOTDepositMonitor in case of empty events

- In RichDAQ v3r23p1
  . Fix untested StatusCodes in RichRawDataFormatTool (Warning().ignore())
  . Replace obsolescent endreq by endmsg

- In STAlgorithms v3r5
  . Move STClusterCreator to new base class
  . Follow changes in STCluster class [removed constructor]

- In STCheckers v2r11
  . Follow changes in STSummary class

- In STDAQ v3r16
  . Merge STDAQ and STOnline
  . Add STPedestalDecoding and STFullDecoding
  . Remove info message in event loop
  . Follow changes in STSummary block content

</PRE><H1><A NAME=v6r26>2009-02-24 LbcomSys v6r26</A></H1><PRE>
This version uses Gaudi v20r4 and LHCb v26r2

- Packages modified: CaloAssociators v6r7, L0DU v8r13, L0Muon v8r5,
    L0MuonMonitor v1r4, OTMonitor v2r9, RichMCTools v3r11, RichTools v2r25,
    SiTools v1r6, STAlgorithms v3r4, STAssociators v1r6, STCheckers v2r10,
    STDAQ v3r15, STTools v3r8, VeloDAQ v4r5, VeloTools v3r3

- In CaloAssociators v6r7
  . Remove obsolete file options/BooleRelations.opts, now in Boole Configurable

- In L0DU v8r13
  . Add L0Conf configurable.
  . Separate the option files containing a sequence definition and an addition
    to the TopAlg into 2 files.
  . Add L0MuonMonitoring in the standard monitoring sequence

- In L0Muon v8r5
  . Possibiliy to disable the decoding of TAE event (DisableTAE property)
  . L0MuonCandidatesFromRaw: modify the way the TAE are handled in the
    decoding. Do not use anymore the exist method to check for raw data since
    it creates the Prev_i Next_i leaves when data on demand is activated.
    Instead, check the Event tree by hand.
  . Fix a bug in the filling of the L0MuonCandidates (pt sign was missing)
  . Modify the default mode for writing bank (standard instead of light)

- In L0MuonMonitor v1r4
  . Modify weight in 2D hitmaps for full stations
  . Separate online monitoring into 2 levels (FullMonitoring property)
  . Updated to get ODIN from the Transient Store instead of decoding the RawBank.

- In OTMonitor v2r9
  . Add more monitoring to MCOTDeposit
    o Keep track of deposits and their fractions as well as spills.
  . Start cleaning up and some more monitoring

- In SiTools v1r6
  . Add flag to turn on/off atomic binding smearing in SiGeantDepositedCharge.
    Default is now not to apply atomic binding
  . Add SiZuriFunction [second order RC-CR shaper function]
  . Make base class for SiAmplifierResponse [SiAmplifierResponseBase]
  . Add print functionality to SiAmplifier classes

- In STAlgorithms v3r4
  . Template SiClustersToLite + add Velo and ST specializations
  . Use clusterselector tool in STClusterKiller
  . Bug fix in initialization of STClusterKiller

- In STAssociators v1r6
  . Make associators delta-ray aware
  . Migrate to STAlgBase class

- In STCheckers v2r10
  . Use named algorithm macros for cluster/digit occupancy algorithms.
  . Remove Boole.opts, now done inside Boole configurable.

- In STDAQ v3r15
  . Improve warning messages in case of error bank too short or too long

- In STTools v3r8
  . Add new cluster selectors

- In VeloDAQ v4r5
  . Added a sort to the decoding of the VELO lite clusters for the track fit

- In VeloTools v3r3
  . Added code to calculate cluster position for "Lite" VELO clusters

- In RichMCTools v3r11, RichTools v2r25
  . Migrate to LHCb::ParticlePropertySvc

- In L0DU v8r13, L0Muon v8r5, L0MuonMonitor v1r4
  . Fix untested status codes

- In SiTools v1r6, STAlgorithms v3r4
  . Fixes for gcc 4.3


</PRE><H1><A NAME=v6r25>2009-01-13 LbcomSys v6r25</A></H1><PRE>
This version uses Gaudi v20r4 and LHCb v26r1

- Packages modified: Associators v3r7, CaloTools v5r6, L0DU v8r12, L0Muon v8r4,
    OTMonitor v2r8p1, RichMCTools v3r10, RichTools v2r24, STAlgorithms v3r3,
    STCheckers v2r9, STDAQ v3r14, STTools v3r7, VeloAlgorithms v4r8,
    VeloDAQ v4r4p1

- In LbcomSys v6r25
  . Fix DoxyFile.cfg for use directly with CMT (without makedoc.py).
    makedoc.py still needed to set LHCBVERS, GAUDIVERS for the tag file URLs,
    and to use /tmp or /build for the temporary doxygen database files

- In Associators v3r7
  . Add MCParticleToMCHit.py, python options to replace Brunel.opts

- In CaloTools v5r6
  . Fix gcc 4.3 warnings
  . CaloCosmicsTrackTool :: fix bug in Hcal timing

- In L0DU v8r12
  . FastL0Filter : new algo to get decision from L0DU rawBank and filter
                   -> NO COMPLETE L0DU bank decoding -> NO REPORT
                   add the possibility to re-inforce the threshold on
                   sumEt/SpdMult/hardon/electron/muon1
  . Add missing -import=AIDA for compilation

- In L0Muon v8r4
  . Implement the possibility to run the emulator from the muon non-zero
    suppressed bank

- In RichTools v2r24
  . Extend RichTabulatedRefractiveIndex with new methods to calculate index
    for a set of radiator intersections + Update to use DeRichRadiator methods
  . Adapt RichSnellsLawRefraction to changes in refractive index tool.

- In STAlgorithms v3r3
  . Add dependency on RecEvent
  . Change default to TT in STClustersToLite
  . Add STCosmicFilter algorithm

- In STCheckers v2r9
  . STClusterResolution:
    o Added two options MergeSplitClusters, SkipSplitClusters, to remove split
      clusters. By default both flags are switched off.
    o Take the cluster size from the STOfflinePosition tool.
    o  Added histograms for the fractional position of an offline cluster.
  . Add STDumpEvent classes
  . Add histograms of port occupancy in Occupancy classes
  . Bug fixes in IT/TTDigitOccupancy
  . Bug fixes in STClusterClassification algorithm
  . Fix a a wrong equality comparison (assignment was used instead)
  . Use the shorth for monitoring in STDigitMonitor
  . Add STLiteClusterMonitor
  . Use generalized mean function to fill reference histos
    in STPerformanceMonitor/STDigitMonitor
  . Tidy up in STClusterMonitor

- In STDAQ v3r14
  . Add checkValidity flag to allow skip of ODIN spill check
  . Implement recovery mode for lite cluster decoding
  . Fix STCluster decoding for special case that 'first' Beetle PCN is wrong on
    Tell1

- In STTools v3r7
  . Move STOfflinePosition tool to new base class.
  . Added functionality in STOfflinePosition tool to merge neighbouring clusters
    that are split into two or more due the the TELL1 clustering algorithm. Note
    that TELL1 splits clusters when larger than 4. By default merging is off.
  . Pass the actual cluster size that is used in the calculation of the position.
  . Small modification in the charge sharing correction: do not correct when
    fractional position is equal to zero (i.e. symmetric, uneven-sized clusters).

- In VeloAlgorithms v4r8
  . Re-tuned the cluster threshold and high bit threshold as per the
    T-Rec talk on the 15th of December.

- In CaloTools v5r6, L0DU v8r12, L0Muon v8r4, OTMonitor v2r8p1,
     RichMCTools v3r10, STCheckers v2r9, STDAQ v3r14, VeloDAQ v4r4p1
  . Fixes for gcc 4.3

</PRE><H1><A NAME=v6r24>2008-11-24 LbcomSys v6r24</A></H1><PRE>
This version uses Gaudi v20r3 and LHCb v26r0

- Packages added:    Rich/RichAlgorithms v1r0
- Packages modified: L0Calo v9r19, L0DU v8r11, L0Muon v8r3, L0MuonMonitor v1r3,
    PuVeto v7r3p1, RichDAQ v3r23, RichTools v2r23, STAlgorithms v3r2,
    STCheckers v2r8, STDAQ v3r13, STTools v3r6, VeloAlgorithms v4r7p2,
    VeloDAQ v4r4, VeloSimulation v3r6p1

- In L0Calo v9r19
  . src/L0CaloAlg.cpp: in the trigger emulation, do not add ECAL to HCAL 0
    energies when the default HCAL address is not physical (to reflect
    electronics behaviour)
  . src/L0CaloCompare: add a histogram to plot the position of all candidates
    (not only errors) and the BCId where the errors occur.

- In L0DU v8r11
  . L0DUReportMonitor : fix problem with 2D correlation histo -> symmetrical 2D
                        correlation histo instead of (wrong) triangular

- In L0Muon v8r3
  . Minor fix to handle case where the L0Muon bank is not there
  . Remove pt encdong paramter from algorihtm properties
  . Add possibily to emulate TAE events

- In L0MuonMonitor v1r3
  . Upgrade comparison with emulator
  . Upgrade comparison with Muon
  . Replace dependency on L0Muon component package with L0Event dependency

- In RichDAQ v3r23
  . Remove all job options files
  . Update RawBufferToSmartIDsTool to create on demand missing raw data entries
  . Move some components to RichTools and RichAlgorithms packages

- In RichTools v2r23
  . Remove RichToolRegistry, moved to RichKernel
  . New tool for adding random pixel backgrounds to the decoded data.
  . Import some components from Rich/RichDAQ

- In STAlgorithms v3r2
  . Make merge algorithm default to TT type
  . Add trivial converter from clusters to lite clusters
  . Changes in event merging code

- In STCheckers v2r8
  . Add root macro directory and two example macros
  . Tidy up the code
  . Add templated occupancy algorithms for IT and TT clusters and digits
  . Add some histograms to STClusterMonitor

- In STDAQ v3r13
  . Follow changes in STKernel
  . Bug fix in RawBankToSTLiteCluster decoding [handle duplicates correctly]
  . Change option detType to DetType in stDAQ.opts
  . Move some algorithms from STOnline
  . Follow changes in STCluster class [add spill]

- In STAlgorithms v3r2, STCheckers v2r8, STDAQ v3r13, STTools v3r6
  . Move to new ST algorithm/tool base classes

- In VeloDAQ v4r4
  . Degrading some message level from info() to debug() - related with
    new data that can contain errors only for one ppfpga processor
  . Add property for PrepareVeloFullRawBuffer - used when consecutive
    events are analysed
  . Modified SmartErrorBankDecoder - if there are no error banks detected, it
    continues processing and skips to the next event (plus minor improvement to
    make the code compatible with new RawEvent object)
  . The decoding of full VELO clusters for bank version 3 now checks whether a
    key already exists in the container before insertion.  This is a change in
    policy, not a bug fix.  We will no longer crash in the case of duplicate
    keys.  Instead an error message containing the problematic source ID is
    issued and all clusters from this source are removed.
  . Added DefaultVeloRawBufferDecoders.py, a new Python helper module
    containing default configurations of the DecodeVeloRawBuffer algorithm
    for decoding into VeloLiteClusters or VeloClusters.

- In L0Muon v8r3, VeloAlgorithms v4r7p2
  . Fix untested StatusCodes

- In L0MuonMonitor v1r3, PuVeto v7r3p1, STDAQ v3r13, VeloAlgorithms v4r7p2,
     VeloSimulation v3r6p1
  . Fixes for gcc 4.3

</PRE><H1><A NAME=v6r23>2008-10-07 LbcomSys v6r23</A></H1><PRE>
This version uses Gaudi v20r2 and LHCb v25r2

- Packages modified: CaloAssociators v6r6, CaloTools v5r5, L0Calo v9r18,
    L0DU v8r10, L0Muon v8r2p1, L0MuonMonitor v1r2, STAlgorithms v3r1,
    STDAQ v3r12, VeloSimulation v3r6

- In CaloAssociators v6r6
  . Add HLT CaloCluster MC association in CaloAssociators.opts
  . CaloClusterMCTruth.cpp : - make use of context() for HLT
                             - protect against missing clusters
                             - correct typo in property "Clustes"->"Clusters"
  . Remove obsolete stuff (CaloTrgClusterMCTruth & CaloClustersMCTruthAlg)
  . Fix a doxygen warning

- In CaloTools v5r5
  . Calo2Calo : add multiplicity method
  . New tool CaloHypo2Calo : specialized version of Calo2Calo

- In L0Calo v9r18
  . src/L0CaloMonit.cpp : change the range of SpdMult monitoring histo

- In L0DU v8r10
  . Remove configuration options (migrated to DBASE/TCK/L0TCK)
  . New monitoring histos (timing) in L0DUReportMonitor

- In L0Muon v8r2p1
  . Minor clean up, add printout protection.

- In L0MuonMonitor v1r2
  . Add new histo for online
  . Add new tool to make histo for OL
  . Update Muon and L0Muon comparison
  . Upgrade comparison with emulator
  . Change histogram names in L0MuonMonitor
  . Add checks in L0MuonErrorHistos + modify the histogram filling

- In STAlgorithms v3r1
  . Add algorithm to merge spills

- In STDAQ v3r12
  . Better bookkeeping of recovered banks
  . Bug fix in recovery mode
  . Fix bug in printout of decoded fraction in finalize
  . Fix case of only having central spill
  . Make check on valid spill after container is put in store
  . Check spill is read out before retrieving it
  . Reduce number of warnings printed out
  . Change return type of RawBankToSTClusterAlg::createCluster to void,
    fixes untested StatusCode warnings in Brunel
  . Make recovery mode default for cluster decoding
  . Protect against zero banks processed

- In VeloSimulation v3r6
  . Removed finalize printout of nan when no events processed

</PRE><H1><A NAME=v6r22>2008-09-08 LbcomSys v6r22</A></H1><PRE>
This version uses Gaudi v20r2 and LHCb v25r1

- Packages modified: CaloTools v5r4, L0Calo v9r17, L0DU v8r9, L0Muon v8r2,
    L0MuonMonitor v1r1p1, RichDAQ v3r20, RichTools v2r22, STCheckers v2r7,
    STDAQ v3r11, VeloDAQ v4r3

- In CaloTools v5r4
  . CaloCosmicsTrackAlg : add monitoring histo for cosmics track parameters
  . CaloCosmicsTool : add cellId vector in the output ntuple

- In L0Calo v9r17
  . src/L0CaloCandidatesFromRaw.cpp: initialize raw bank status, improve speed

- In L0DU v8r9
  . rename L0DUBankSwap.opts to ReplaceL0BanksWithEmulated.opts:
    o similar to ReplaceL0DUBankWithEmulated but for all L0 banks including
      L0Calo and L0Muon.
    o add missing default TCK for simulation (including DefaultTCK.opts)
  . L0DUReportMonitor : bug fix (incomplete initialization) - produced weird
    result in case of several TCK are monitored in the same job
  . L0DUConfig_0x000X.opts : produced by L0DU PVSS on 25th august 2008
    after configurations cleaning (naming + algorithm rewritting)
      -> Warning : not backward compatible
  . L0DUConfig_0x000X-obsolete.opts: to be used instead of L0DUConfig_0x000X.opts
    for commissioning data taken before 2008/08/20 (run <30406)
  . L0DUConfig_0xDEBX.opts : produced by L0DU PVSS on 25th august 2008
  . L0DUTriggerSet.opts : new options containing trigger set definition.
  . improve printout

- In L0Muon v8r2
  . Change in L0MuonFromRawTrans :
    o use a third instance of RegisterFactory
    o use by default the config file in PARAMFILES

- In L0MuonMonitor v1r1p1
  . Bug fix in the booking of number of cand and pt histos
  . Possiblity to remove the setting of histo directory

- In RichDAQ v3r20
  . Do not include event IDs in event ID mis-match errors (as then each message
    is different and thus never suppressed...)
  . Some minor changes to help migration to python Configurables

- In RichTools v2r22
  . Updates for Configurables. Update default property values to those used
    in the Job Option based configuration.

- In STCheckers v2r7
  . Add STPerformanceMonitor

- In STDAQ v3r11
  . Bug fixes in readout tool and data lite cluster decoding
  . Recovery mode implemented
  . Use IT and TTNames classes.
  . Bug fix in service box mapping: vector of all possible names was not filled
  . Move to using new representation classes
  . Error decoding moved to base class
  . Add PCN printout
  . Add functionality related to service boxes to readout tool
  . Fix problem in cluster decoding in case of all banks lost

- In VeloDAQ v4r3
  . missing input containers are no longer an error condition in NZS decoder
  . if input is missing, the cluster decoder now only creates empty containers
    for the requested cluster type.
  . add a new SmartVeloErrorBankDecoder to deal with complicated error bank, able
    to check which fpga processors sent errors and deal with different size of
    the bank that depends on a raw file content
  . update PrepareVeloFullRawBuffer - error decoding is now decoupled
    from NZS data
  . add a cluster filter algorithm that filters the [lite]clusters into
    new TES locations according to a few pre-defined criteria like
    "is R", is phi", etc. Also maximum and and minimum limits can be required

</PRE><H1><A NAME=v6r21>2008-07-30 LbcomSys v6r21</A></H1><PRE>
This version uses Gaudi v20r2 and LHCb v25r0

- Packages added:    L0/L0MuonMonitor: Package to monitor the L0Muon
- Packages modified: CaloTools v5r3, L0Calo v9r16, L0DU v8r8, L0Muon v8r1,
    RichDAQ v3r19, STDAQ v3r10, VeloSimulation v3r5

- In CaloTools v5r3, L0DU v8r8, RichDAQ v3r19
  . Adapt to new location of IEventTimeDecoder.h

- In L0Calo v9r16
  . L0CaloAlg: gives correct address in case of saturated cells
               with equal energies in global pi0 candidate
  . L0CaloMonit: add possibility to detect automatically hot cells in
                 the calo trigger
  . L0CaloAlg, L0CaloCandidatesFromRaw and L0CaloCandidatesFromRawBank:
      use RawBankReadoutStatus class to store status of L0Calo banks decoding.

- In L0Muon v8r1
  . Protect against not valid MuonTileID when filling the OL in L0MuonAlg.
  . Remove the Extension property from L0MuonAlg and L0MuonCandidatesFromRaw.
    Replaced by the Context property in the L0MuonOutput tool.
  . Check for L0MuonError bank - fill the RawBankReadOutStatus if error bank
    found
  . Minor bug fix (error message in L0MuonOutput)

- In RichDAQ v3r19
  . Adapt to new distinction between L1 hardware and logical ID numbers

- In STDAQ v3r10
  . Bug in TTReadoutTool.cpp: Removed condition that skips addSector in a
    STTELL1Board. Each board should have all 6 sectors (TT). Otherwise, the
    STRawBankToClusterAlg complains about unknown channels (tested with data).
  . Bug fix in Error construction
  . Change STTELL1Error construction sequence in STErrorDecoding
  . Really check Tell1 source is valid
  . Clean up of counters
  . Add check on magic pattern
  . Remove some unneeded printouts

- In VeloSimulation v3r5
  . Add a new wrapper inline int safe_int_poissonDist() to protect against
    FPE in Rndm::Poisson

</PRE><H1><A NAME=v6r20>2008-07-18 LbcomSys v6r20</A></H1><PRE>
This version uses Gaudi v20r1 and LHCb v24r1

- Packages modified: L0Calo v9r15, L0DU v8r7, L0Muon v8r0, RichDAQ v3r18,
    STDAQ v3r9, VeloSimulation v3r4

- In L0Calo v9r15
  . L0CaloAlg:
    o add 'WriteOnTES' property. Writing L0CaloCandidate on TES is now
      independent of 'StoreInBuffer' as in L0Muon and L0DU.
    o decides which candidate to take in case of equality, to mimic electronics
      behaviour
  . src/DumpL0CaloBanks.h/.cpp: add the possibility to dump non-zero
                                suppressed banks and error banks
  . src/L0CaloCompare.cpp:
    o protect against missing SPD and SumEt candidates
    o give names to histograms and add comparison of SPD multiplicity.
  . src/L0CaloMonit.cpp: give names to histograms

- In L0DU v8r7
  . Review options
  . L0DUFromRawAlg : always produce L0DUReport on TES
                     (flagged as non valid in case of corrupted/missing bank)
  . Add new TCKs in L0DUConfig_0x000X.opts
    (TCK=0x0001 -> 0x0007 : cosmics triggers as for july 2008 GCW)
  . Add protection against missing bank in L0DURawBankMonitor
  . Fix problem with ReadoutStatus in L0DUFromRaw
  . Tune the warning verbosity

- In L0Muon v8r0
  . Protect raw bank writing for encoding errors
  . Possibility to ask for compression of banks
  . Clean the management of the output mode
  . Merge procVersion & bankVersion into a single tag : version
  . Decoding of bank version 2 : tested (without RLE compression)
  . Use of L0MuonError (introduced in Event/L0Event)
  . Possibility to run without M1 or M2

- In RichDAQ v3r18
  . Add an error message in the case an HPD is found in extended format, but
    no errors where detected.

- In STDAQ v3r9
  . Add dependency on RecEvent
  . Allow possibility to force the bank version
  . Add functionality to see which banks are missing
  . Follow changes in readout tool interface
  . Remove use of ODIN
  . Move some code to base class/change some printouts

- In VeloSimulation v3r4
  . Changed code to use real bad strip list from DeVeloSensor to kill bad strips
  . Changed VeloSim.opts to make 1% bad strips in pileup (random) and only
    known bad strips dead in main VELO.
  . Tweaked code for gsl_sf_erf_Q wrapper to reduce unnecessary calls

</PRE><H1><A NAME=v6r19>2008-07-04 LbcomSys v6r19</A></H1><PRE>
This version uses Gaudi v20r1 and LHCb v24r0

- Packages modified: CaloTools v5r2, L0Calo v9r14, L0DU v8r6, RichDAQ v3r17,
    RichTools v2r21, STCheckers v2r6, STDAQ v3r8, VeloSimulation v3r3

- In CaloTools v5r2
  . Add asymmetry monitoring in CaloCosmicsTrackAlg
  . Add 'kernel' variable computation in CaloCosmicsTool
  . Change all Gaudi::XYZLine and Gaudi::Line for Gaudi::Math::XYZLine and
    Gaudi::Math::XYZLine respectively (adapting to Kernel/LHCbMath v3)

- In L0Calo v9r14
  . src/L0CaloCandidatesFromRawBank: skip candidates which are flagged
    as masked in the L0Calo TELL1
  . src/L0CaloAlg:
    o add the possibility to create LUT for the TVB, which will be loaded
      in the real electronics
    o use left address instead of right address for the global pi0
  . src/DumpL0CaloBanks: new algorithm to dump the content of the L0Calo
    banks for debugging

- In L0DU v8r6
  . Fix in L0DUEmulatorTool (clear before setting configuration not after !)
  . Tune verbosity in L0DUFromRawTool and Monitor algorithms
  . L0DUFromRawTool :
    o new properties : ForceTCK, ForceSummarySize and ForceNonZeroSupMuons
    o add missing m_report.setTCK( m_tck )
    o update ReadoutStatus in L0D
  . make L0DUFromRawTool a public tool in L0DUFromRawAlg and L0DURawBankMonitor

- In RichDAQ v3r17
  . Purge the hits from the decoded data structure for HPDs which fail the
    data integrity checks.
  . Add protection against invalid HPD IDs, which are now possible given the
    fact that the decoded data includes suppressed HPDs and those for which the
    L0ID -> RichSmartID database lookup failed.
  . Add new option to completely disable decoding in a either RICH detector.
  . Suppress over excessive error messages in the case of inhibited or invalid
    HPDs. An option now exists to turn these back on for debugging etc.

- In RichTools v2r21
  . Fixed inconsistency between globalToPDPanel and globalPosition methods

- In STCheckers v2r6
  . Fix implicit conversions (follows changes in LHCbKernel v8r5)

- In STDAQ v3r8
  . Move check of validity of channel id in decoding
  . Check is now made by checking readout map makes sense compared to geometry
  . Check data integrity before decoding into clusters in lite and full decoding
  . Only count boards without error in majority PCN vote in ZS decoding
  . More consistant counting of errors in cluster decoding
  . Move STErrorDecoding to this package.
  . Move STRawBankMap to STKernel
  . Clean up of error handling
  . Add possibility to create clusters from banks with errors in decoding
   (default is to skip)
  . Further improvements in monitoring of decoding
  . Further improvements in handling corrupted data
  . Print out how many banks are decoded correctly, how many are skipped, and
    how many are lost.

- In VeloSimulation v3r3
  . Added an FPE protection wrapper to gsl_sf_erf_Q to remove FPE when audited

</PRE><H1><A NAME=v6r18>2008-06-04 LbcomSys v6r18</A></H1><PRE>
This version uses Gaudi v19r9 and LHCb v23r7

- Packages modified: CaloTools v5r1, L0Calo v9r13p1, L0DU v8r5, RichDAQ v3r16,
    STDAQ v3r7, VeloDAQ v4r2, VeloSimulation v3r2, VeloTools v3r2

- In CaloTools v5r1
  . Add new tools and alg for cosmics track reconstruction in calorimeter :
	  CaloCosmicsTool, CaloCosmicsTrackTool, CaloCosmicsTrackAlg

- In L0Calo v9r13p1
  . Fix trivial compilation warning

- In L0DU v8r5
  . add standard definition of sub-triggers in the configuration options files
    ("L0Muon", "L0Ecal", "L0Hcal")
  . implement sub-trigger where it is needed
  . adapt to changes in L0Event
  . clean options
  . add options for L0DU test pattern production (expert usage) :
    L0DUPattern.opts & L0DUPatternConfig.opts
  . rename L0.opts -> L0Emulator.opts to avoid confusion

- In RichDAQ v3r16
  . Adapt to changes in decoded data format
  . Save inhibited HPDs in decoded data

- In STDAQ v3r7
  . Use registerConditions from GaudiTool base class in readout tool

- In VeloDAQ v4r2
  . Adapt VeloFull decoding to run without ODIN bank; this behaviour
    is controlable via options file

- In VeloSimulation v3r2
  . Fixed a divide by zero and sqrt(-N) problem when PrevPrev MCHits gave
    either zero or negative charge deposition

- In VeloTools v3r2
  . Fixed bug exposed when reconstructing in a non-ideal geometry

</PRE><H1><A NAME=v6r17>2008-05-16 LbcomSys v6r17</A></H1><PRE>
This version uses Gaudi v19r9 and LHCb v23r6

- Packages added:    CaloTools v5r0 - Contains components previously in CaloUtils
- Packages modified: L0Calo v9r13, L0Muon v7r8p1, RichDAQ v3r15p1,
    RichMCMonitors v1r6, RichTools v2r20, STCheckers v2r5, STDAQ v3r6,
    VeloAlgorithms v4r7p1, VeloSimulation v3r1

- In L0Calo v9r13
  . src/L0CaloCandidatesFromRaw: protect against missing L0Calo bank

- In L0Muon v7r8p1
  . Add check for untested status codes in L0MuonAlg

- In RichDAQ v3r15p1, RichTools v2r20
  . Adapt to removal of obsolete RichDet locations

- In RichMCMonitors v1r6
  . Tidy up RichMCCKPhotonPropAlg a little and add some new histos for the
    refractive index

- In RichTools v2r20
  . Fix un-checked StatusCode in RichMirrorSegFinder
  . Add default mapping for isolated track tool

- In STCheckers v2r5
  . Follow changes in DeSTDet v4r0 [introduction of DeSTSensor level]
  . Add PCN + error monitoring

- In STDAQ v3r6
  . Add creation of summary block in decoding
  . Improve error handling/reporting in decoding
  . Follow addition of source id to cluster class
  . Follow clean up in STKernel
  . Only put valid sectors into readout mapping
  . Check that key does not exist before inserting it (RawBanksToSTClusterAlg,
    RawBanksToSTLiteClusterAlg)

- In VeloAlgorithms v4r7p1
  . Changed VeloRawClusterMoni and VeloClusterMoni to reflect fix to linker in
    VeloSim.cpp

- In VeloSimulation v3r1
  . Fixed MCHit linking to only link to main event container
  . Fixed PU veto input data in options
  . Changed text in VeloSimMoni to reflect linker change

</PRE><H1><A NAME=v6r16>2008-04-22 LbcomSys v6r16</A></H1><PRE>
This version uses Gaudi v19r9 and LHCb v23r5

- Packages modified: L0Calo v9r12, L0DU v8r4, L0Muon v7r8, MuonAssociators v3r2,
    OTAssociators v4r2, OTMonitor v2r8, RichDAQ v3r15, RichMCTools v3r9,
    RichTools v2r19, STCheckers v2r4p1, VeloAlgorithms v4r7, VeloDAQ v4r1,
    VeloSimulation v2r7, VeloTools v3r1

- In L0Calo v9r12
  . L0CaloMonit.cpp:
    o use Calo2Dview base class, change binning for slot in crates
    o add an option (false by default) not to produce detailed histograms.
    o protect against non existing input data
  . L0CaloCandidatesFromRaw.cpp:
    o fix memory leaks in default container filling
    o protect against non existing input data
    o change output level of debugging messages
  . L0CaloAlg.cpp:
    o remove unnecessary debuging output
    o add protection against double counting in duplicate candidates.
    o add options to use or not PS/SPD and ECAL information resp. to build
      electromagnetic and hadron candidates. Default is to use it.
  . L0CaloNtpMonitor.cpp: new class to fill Ntuples with L0Calo quantities.
  . L0CaloCandidatesFromRawBank.cpp:
    o verify output level in debugging messages
    o protect against null pointer in debugging output.

- In L0DU v8r4
  . L0DUFromRawTool: fix bug when decoding consecutive BX info, better print out
  . Fix bug in options/L0DUBankSwap.opts
  . Monitoring changes:
	  + remove L0Monitor algorithm (obsolete)
    + L0DUReportMonitoring: add histograming (performance, conditions, decisions)
    + L0DURawBankMonitoring: new alg for full monitoring of L0DU Bank
  . Filtering changes:
   	+ L0Filter: add possibility to filter according to 'extra L0 decision'
    + L0TCKFilter: new algorithms for configuration filtering
  . New algorithm L0Pattern: produce RAM pattern to feed L0DU board test benches
  . Add few minor improvements along the code & adapt to changes in L0Event
  . L0ETC: do not write out. This is done by evtcol svc. Add some .ignore()
  . Add missing DC06Conditions.opts include in Write/ReadETC
  . L0DUEmulatorTool : fix bug in muon processing
    (affects DiMuon and Muon2 in case single non-0 L0Muon candidate)
  . options/L0DUConfig_0xDC06_alg0_set0_lumi2.opts :
    uniformize channel naming according to other config.
  . Add cosmics muon trigger in options/L0DUConfig_0x0000.opts

- In L0Muon v7r7, v7r8
  . L0MuonAlg : Allow to run from data coming from several time bunch
                crossings (TAE mode)
                Protect more debug with if(msgLevel(MSG::DEBUG)
  . Update decoding and monitoring of L0Muon data in transparent mode
  . L0MuonFromRawTrans : new algorithm to decode the data with the format
                         used at the pit during commissionning.
  . L0MuonMonitor : new algorithm to make histograms from L0Muon data
                    stored in the TES.

- In OTAssociators v4r2
  . Added new associator algorithms. The deposits, hits and particles are linked
    to the channelIDs which are also the keys.
  . Clean up options to use DataOnDemandSvc.AlgMap instead of .Algorithms

- In OTMonitor v2r8
  . Added OTTime to expert moni
  . Minor changes to reflect changes in OTAssociators. Note code is still
    compatible with DC06 data since the MC information is retrieved via the
    channelIDs(keys).

- In RichDAQ v3r15
  . Add protection into clustering code to protect against empty vectors of
    RichSmartIDs

- In RichMCTools v3r9
  . Add new methods (isHPDReflection and isSiBackScatter) to MCTruthTool

- In RichTools v2r19
  . Add new default tool mappings

- In STCheckers v2r4p1
  . Add back functionality to exclude guard rings in eff calculation
    default value of STEffChecker.IncludeGuardRings is false
  . Bug fix in STEffChecker to prevent crash
  . Set default value of STEffChecker.HistoPrint to false

- In VeloAlgorithms v4r7
  . Add VeloEffChecker: algorithm to monitor the velo sensor efficiency in MC
  . Changed scaling in VeloDataProcessor to increase ADC values of clusters
  . Changed VeloClusterMaker to set strip thresholds from noise levels per strip
  . Changed curve in VeloDataProcessor to 2nd order non-linear response from JC
  . Changed monitoring code to label cluster types properly
  . Set ADC output range from 0->256 to -127->127

- In VeloDAQ v4r1
  . Changes in DecodeVeloFullRawBuffer and VeloFullDecoder:
    o avoid unnecessary copies of large vectors
    o protect frequent streams to debug() with a flag
    o instatiate the various VeloFullDecoders only once, so their internal
      containers live for the whole job
    o made local ADC/Header/Ped buffers member variables, so their memory is
      only allocated once per job
    o the target cable order is now configurable
    o the cable order correction is now off by default
    o all TES input and output locations are now configurable

- In VeloSimulation v3r0
  . Use ST charge deposit tool to correct GEANT dEdx
  . Use ST amplifier response tool to simulate amplifier response verse time
  . Allow a list of input containers via options with time offsets
  . Default to prev, main and next in VeloSim.opts
  . Allow a list of output locations (for the PileUp modules which write to two)
  . Simulate noise from the DeVeloSensor->stripNoise() distribution per strip
  . Added options to convert from noise in ADC to noise in electrons
  . Retuned time curves to use vfp = 150 and vfs = 550 : best guess as inital
    BEETLE tune parameters, amount of spillover increased
  . Offset sampling time to get equal amplification to Prev and Next MCHits
  . Added PrevPrev to simulation by default
  . Corrected noise simulation otherwise empty strips
  . Set capacitve coupling to 1% (from 5%) to get approx 1 and 2 strip
    ratio about right

- In VeloTools v3r1
  . Adapt to change in namespace LHCbMath -> LHCb::Math
  . Protect debug() messages with test on msgLevel(MSG::DEBUG)

</PRE><H1><A NAME=v6r15>2008-03-04 LbcomSys v6r15</A></H1><PRE>
This version uses Gaudi v19r8 and LHCb v23r4

- Packages modified: L0DU v8r3, RichTools v2r18, SiTools v1r5, STAlgorithms v3r0,
   STDAQ v3r5

- In L0DU v8r3
  . L0DUFromRawTool :
    o fix redundant rootInTES in get<rawEvent>(rootInTES() + rawEventLocation )
    o add protection against non-existing L0DU rawBank
    o fix bug when decoding consecutive BX info
  . Fix TCK string format (%4X -> %04X)

- In RichTools v2r18, v2r17p1
  . Changes in ray tracing tool interface
  . Adapt to changes in RichGeomPhoton from Rich/RichKernel
  . Add fix for bug (found via valgrind) due to a reference to temporary being
    passed. Also tidy up similar code in other places.

- In SiTools v1r5
  . In SiGeantDepositedCharge, set default scalingFactor to 1.0

- In STAlgorithms v3r0, v2r7
  . Use Geant deposited energy in MCSTDepositCreator
  . Correct path of next spill
  . Remove digitisation algorithms, moved to new BOOLE STDigiAlgorithms package

- In STDAQ v3r5
  . Add functionality to readout tool to give list of board IDs

</PRE><H1><A NAME=v6r14>2008-01-30 LbcomSys v6r14</A></H1><PRE>
This version uses Gaudi v19r7 and LHCb v23r3

- Packages modified: CaloAssociators v6r5, L0DU v8r2, L0Muon v7r6, PuVeto v7r3,
    RichDAQ v3r14, RichMCTools v3r8, RichTools v2r17, STAlgorithms v2r6,
    STCheckers v2r4, STDAQ v3r4, STTools v3r5

- In CaloAssociators v6r5
  . In CaloAssociators.opts, remove obosolete ApplicationMgr.DLLs option and
    use DataOnDemandSvc.AlgMap instead of old Algorithms option
  . Add BooleRelations.opts : options to create Linker for Ecal & Hcal in Boole

- In L0DU v8r2
  . Fix minor memory leak in L0ProcessorDataLocation initialize()
  . Finalize the implementation of the TCK mechanism
    o new tool L0DUMultiConfigProvider (same interface as L0DUConfigProvider)
    o fix backward compatibility with previous DC06 data :
      assign TCK = 0xDC06 when bank vsn = 0
    o enable the decoding of DC06 format
    o review L0DUConfig.opts
    o update and rename all individual configuration options files
  . Fixes to L0ETC.cpp
    o Define nTuple ID as 1 explicitly (fixes writing error with new Gaudi)
    o Write all fields even if L0 is not there
    o Write out Tuple.
  . Replace PoolDbCacheSvc.Catalog by FileCatalog.Catalogs, for Gaudi v19r7

- In L0Muon v7r6
  . Add some if(msgLevel(MSG::DEBUG) around debug() statements in L0MuonAlg
  . Prevent L0MuonCandidatesFromRaw from writing of empty containers in the TES.
    This is done in order to gain time for the HLT.

- In PuVeto v7r3
  . Remove obsolete file PuVeto_load.cpp
  . Change order of some nested loops in PuVetoAlg to make it faster...

- In RichDAQ v3r14
  . Disable by default data integrity checks with ODIN. Due to changes in ODIN
    information that makes this check no longer possible.
  . In Brunel_DecodeRawEvent.opts, use DataOnDemandSvc.AlgMap option instead of
    obsolete Algorithms option
  . Fix bug in Pixel sorting of clustering when in ALICE mode

- In RichMCTools v3r8
  . Minor tweek to signal / background discrimination logic to work with
    new DC06 data when uses the latest additions to MCEvent, which adds
    support for new HPD reflection backgrounds but also fixes a few minor
    issues, where signal hits would not be identified as such.

- In RichTools v2r17
  . Add new tool RichSnellsLawRefraction to perform refraction corrections
    at the Aerogel / Rich1Gas boundary
  . Update RichRayTracing to use the new refraction tool
  . Change the way to get detector elements. The paths are parameters
    in DeRich1 and DeRich2, which can stiil be found in DeRichLocations.
    Compatible with DC06 xml description.

- In STAlgorithms v2r6
  . Warn if sector not found in MCSTDepositCreator
  . Allow to link MCHit to sector using point (rather than sensdetid)
  . Disable allStrips options in Digit Creators
  . Add Next spill to MC Deposit Creators

- In STCheckers v2r4
  . Make all locations jobOptions

- In STDAQ v3r4
  . Use stripFraction function from Kernel instead of local version

- In STTools v3r5
  . Move STFun.h/.cpp to STKernel
  . Move interstrip quantization function to STKernel

</PRE><H1><A NAME=v6r13>2007-12-11 LbcomSys v6r13</A></H1><PRE>
This version uses Gaudi v19r6 and LHCb v23r2

- Packages modified: L0Calo v9r11, L0DU v8r1, RichDAQ v3r13, RichMCMonitors v1r5,
    RichTools v2r16, SiTools v1r4, STAlgorithms v2r5, STAssociators v1r5,
    STCheckers v2r3, STDAQ v3r3, STTools v3r4p1, Veloassociators v2r3,
    VeloTools v3r0

- In L0Calo v9r11
  . implement the final bank format as defined in EDMS-845277
    Requires "HadronSB" condition to be included in condDB (from SQLDDDB v3r1)

- In L0DU v8r1
  . Fixed wrong location of included job options file

- In RichDAQ v3r13
  . Remove obsolete SerializeStl include
  . Add method to RawBufferToSmartIDsTool to return the hits for a requested HPD
  . Update pixel clustering tool to work with ALICE mode data
  . Fix issue in filling raw event where ingress header IDs are not properly
    included for each L1 board

- In RichMCMonitors v1r5
  . Add check for existence of MCRichHits in MCCKPhotonYieldAlg, so processing
    is not aborted when these data objects are missing (a warning is printed).

- In RichTools v2r16
  . Fix crashes with missing mirrors in mirror segment finder
  . Added an option to SmartIDTool to allow the detection point to be on the
    photoCathode or the outside of the window (including refraction corrections)
  . Add some new default tool mappings

- In SiTools v1r4
  . Add new base class for deposited charge tools
  . Allow smearing of charge from Geant

- In STAlgorithms v2r5
  . Use isOKStrip method
  . In itDigi.opts, change conversion factor from e- to ADC
  . Make it possible to turn on/off dead strip sim (default off)

- In STAssociators v1r5
  . Make input location of STClusters2MCHits a jobOption

- In STCheckers v2r3
  . Bug fix in neighbour sum histo
  . Ensure histo ids do not change
  . Add some consts
  . Make input location of STEffChecker a jobOption

- In STDAQ v3r3
  . Move to new STKernel package

- In STTools v3r4p1, STAlgorithms v2r5, STCheckers v2r3
  . Add STKernel dependency, for new location of ISTSignalToNoiseTool interface

- In VeloAssociators v2r3
  . Remove obsolete VeloCluster2VeloDigitTool
  . Remove obsolete file VeloAssociators_load.cpp

- In VeloTools v3r0
  . Code update to match TELL1 board position format:
    o seeding strip VeloChannelID as a cluster's centre strip
    o fractional position (0-1)
    o fractional error
  . New tuning for the error parametrization for the pitch projection. Old
    parameterisation available by setting ErrorParaType = 2 (default is 1 - new)
  . Possibility to choose of algorithms to compute the projected angle,  option
    CalculateExactProjAngle=true/false (default is false, simplified algorithm)

</PRE><H1><A NAME=v6r12>2007-11-14 LbcomSys v6r12</A></H1><PRE>
This version uses Gaudi v19r5 and LHCb v23r1

- Packages modified: L0Calo v9r10, L0DU v8r0, L0Muon v7r5, STDAQ v3r2,
    STAlgorithms v2r4, RichDAQ v3r12p1

- In L0Calo v9r10, L0Muon v7r5
  . Adapt to change in L0DUBase.h (L0Event v16r6)

- In L0DU v8r0
  . Full review of the L0DU package
  . Implement the 'final' rawBank format for L0DU (as in EDMS 868071)
  . First step toward implementation of the Trigger Configuration Key mechanism
  . Add few missing part in the emulator to follow hardware processing
  . Adapt to change in L0Event
  . Repackaging
  . See package release notes for details of new tools and options

- In STDAQ v3r2
  . Remove some unneccessary includes
  . fix compilation warnings in readout tool
  . Bug fix in header file inclusion
  . Make rawevent location a jobOption

- In STAlgorithms v2r4
  . Retune conversion factor from e- to ADC for IT
  . Add possibility to make STDigits on all detector strips
  . Use dead channel info from detector element in digitization code
  . Remove STEffCalculator tool and ISTEffCalculator interface
  . Add STClusterKiller algorithm
  . Bug fix in STDigitCreator [in all strip running, not the default]

- In RichDAQ v3r12p1
  . Fix a compilation problem with gcc 4 on osx

</PRE><H1><A NAME=v6r11>2007-10-16 LbcomSys v6r11</A></H1><PRE>
This version uses Gaudi v19r5 and LHCb v23r0

Identical to v6r10 but built against LHCb v23r0

</PRE><H1><A NAME=v6r10>2007-10-10 LbcomSys v6r10</A></H1><PRE>
This version uses Gaudi v19r5 and LHCb v22r10

- Packages modified: STAlgorithms v2r3, STDAQ v3r1, STTools v3r4, VeloTools v2r3,
                     VeloAlgoriths v4r6p1, L0Muon v7r4

- In STAlgorithms v2r3
  . Adapt to SmartIF change in Gaudi v19r5

- In STDAQ v3r1
  . Remove unneccessary (and wrong!) release() of UMS from TT/ITReadoutTool.cpp

- In STTools v3r4
  . Get cbrt from GaudiKernel/cbrt.h rather than LHCbMath/Power.h
  . Remove LHCbMath dependency

- In VeloTools v2r3
  . Do not access detector element in constructor, do it in initialize

- In VeloAlgorithms v4r6p1
  . Fix unchecked StatusCode
  . Remove obsolete file VeloAlgorithms_load.cpp

- In L0Muon v7r4
  . Add job options to allow more flexible steering of the algorithms
  . Add missing variable initialization

</PRE><H1><A NAME=v6r9>2007-09-21 LbcomSys v6r9</A></H1><PRE>
This version uses Gaudi v19r4 and LHCb v22r9

- Packages modified: CaloAssociators v6r4, L0Muon v7r3, L0DU v7r7, STTools v3r3,
    RichDAQ v3r12, RichMCTools v3r7, RichTools v2r15, VeloDAQ v4r0,
    VeloSimulation v7r6

- In L0Muon v7r3
  . Major change to handle different processor versions and bank versions
    o remove the L0MuonProcessorDatasFromRaw (processor data are produced
      by L0MuonAlg)
    o add the L0MuonOutput tool to write/decode L0Muon banks
  . Add the possiblity to start the L0Muon emulator with L0Muon data in input

- In L0DU v7r7
  . Modification in L0Sequence.opts to follow changes in L0Muon

- In STTools v3r3
  . Added double->int cast in STFun::position to remove strange optimization
    issue in comparison a double to an int
  . Replaced > with >=

- In RichDAQ v3r12
  . Remove auto pointers from clustering interfaces in favour of a simple
    pointer, which the user then 'owns'
  . Update HPD occupancy tool to be able to run with explicit RICH1 or
    RICH2 setting.
  . use EventID and BXID == and != operators
  . Minor fix to prevent the abortion of an entire L1 bank when one HPD fails
    its RichSmartID lookup. Now only that HPD is rejected but the remaining
    HPDs in the L1 bank are processed.

- In RichMCTools v3r7
  . Update RichMCTrack info tool to correctly perform aerogel refraction
    correction.

- In RichTools v2r15
  . Adapt to changes in RichGeomPhoton in RichKernel
  . Update the mirror segment finding tool to sort mirrors in order to distance
    from beamline.
  . Add to the particle properties tool the method to return the active
    hypothesis list.
  . Add correction for refraction at aerogel to Rich1Gas boundary during
    ray tracing
  . Update default tool mappings in tool registry.
  . Add implementations for two new methods to the RichSmartID tool,
    anodeGlobalPosition, which return the position for a given RichSmartID
    or Rich::HPDPixelCluster on the anode pixel chip.

- In VeloDAQ v4r0
  . Add decoding of the non-zero suppressed (NZS) banks added, new code can cope
    with decoding of the VeloFull data bank, PedestalBank and VeloErrorBank.
    Also EvtInfo object, that includes a number of informations critical from
    point of view of the emulation, can be created. Beetle headers do not
    make a separate data stream but are part of the NZS header bank. The headers
    are also decoded and stored. All decoding routines follow closely appropriate
    EDMS notes describing TELL1 data formats.
  . Make the decoder fail more graciously in case a source ID can not matched to
    a sensor number. Now an error message is issued and the source ID is skipped.
  . Introduced new version 3 of VELO raw buffer.  The only difference to
    version 2 is the treatment of interstrip positions.  These are now computed
    and rounded exactly like on the TELL1 board. Default is still version 2
  . Added proper bank version management to decoder.  The correct decoding is
    determined from the raw bank's version.  The version can also be enforced
    via the ForceBankVersion property (useful for testbeam data).
  . Made sure the decoder creates empty cluster and lite cluster containers on
    the TES even if the raw event is missing or it encounters an unsupported
    bank version.  If a byte count mismatch (corrupted raw bank) is discovered
    during the cluster decoding the clusters from this source ID are removed from
    the container.  Clusters from other source IDs will be still available in
    this case.

- In VeloSimulation v7r6
  . Modified the treatment of the timing of particle arrivals to correctly
    implement spillover with the right fractions in each sensor
  . Fixed the unchecked StatusCodes
  . In VeloSim wrapped all message service calls with a test on output level

- In CaloAssociators v6r4
  . Fix untested status codes
  . Remove obsolete file CaloAssociators_load.cpp

</PRE><H1><A NAME=v6r8>2007-07-20 LbcomSys v6r8</A></H1><PRE>
This version uses Gaudi v19r4 and LHCb v22r8

- Packages modified: L0Calo v9r9, L0DU v7r6, VeloTools v2r2

- In L0Calo v9r9
  . L0CaloAlg.cpp:
    * update HCAL energy with ECAL in front also if HCAL Et=0
    * for particular cases where Front-End boards are partially used
      (HCAL for example), only transmit data to neighbour cards if
      the connection is physically present and not masked in the hardware.
    * if the candidate's cellID is not valid, use (in this order) the top
      cellID, the right cellID (if the top is not valid) or the corner cellID
      (it the right is not valid) instead, to follow what is done in the hardware
  . TriggerCard.cpp: use left bottom valid cell of the board as default address
    when the card has 0 energy deposited in it.

- In L0DU v7r6
  . Remove Brunel.opts (functionality moved to Brunel, from v31r8)
  . Boole.opts changed to remove Boole dependency and renamed WriteETC.opts
  . BooleRead.opts changed to remove Boole dependency and renamed ReadETC.opts

- In VeloTools v2r2
  . Major change to position method using direction and point
  . New error parametrization as function of projected track angle
    same for R and Phi sensors.
  . Remove obsolete options file (uses options names inconsistent with code)

</PRE><H1><A NAME=v6r7>2007-07-12 LbcomSys v6r7</A></H1><PRE>
This version uses Gaudi v19r4 and LHCb v22r7

- Packages modified: STTools v3r2, RichDAQ v3r11, RichMCMonitors v1r4,
    RichTools v2r14, L0DU v7r5, VeloTools v2r1

- In STTools v3r2
  . Add trimming of ST Measurements

- In RichDAQ v3r11
  . Minor improvements to DAQ decoding error printout
  . Improvements to monitoring in RichRawdataFormatTool to handle cases when the
    L1 board ID is not recognised.
  . Set ingress header properly in decoded data
  . Change ODIN orbitNumber() to bunchId() in BXID comparision between ODIN and
    RICH decoded data
  . Fix bug accidentally introduced in last release when HPDs are suppressed

- In RichMCMonitors v1r4
  . Add new monitor for MRichOpticalPhotons

- In RichTools v2r14
  . Update default tools to reject change in name for the tool
    Rich::Rec::PhotonSignalGaussProb

- In L0DU v7r5
  . Remove IL0Candidate.h, was moved to L0Event a year ago
  . Remove obsolete file L0DU_load.cpp
  . L0Filter: new algorithm that allows to filter events based on
    L0 decision. Allows selection for particular channels as well.

- In VeloTools v2r1
  . new parametrizations
  . new method with StateVector object
  . fixed return statement when sensor pointer is invalid

- In STTools v3r2, RichDAQ v3r11, VeloTools v2r1
  . Fix doxygen warnings

</PRE><H1><A NAME=v6r6>2007-06-05 LbcomSys v6r6</A></H1><PRE>
This version uses Gaudi v19r4 and LHCb v22r6

- Packages modified: SiTools v1r3, VeloTools v2r0, STAlgorithms v2r2,
    STCheckers v2r2, RichMCMonitors v1r3, RichMCTools v3r6, L0Calo v9r8,
    MuonAssociators v3r1, OTMonitor v6r6, Associators v3r6

- In VeloTools v2r0
  . New model of the Velo error estimate implemented, now returned error
    depends both on sensor pitch and projected angle of a track

- In OTMonitor v6r6
  . Add time spectrum histogram to OTTimeChecker

- In Associators v3r6
  . Add Muon hits to the track MCHits table

- In SiTools v1r3, STAlgorithms v2r2, STCheckers v2r2, RichMCMonitors v1r3,
     RichMCTools v3r6, MuonAssociators v3r1
  . Adapt to new location of MCInterfaces

- In SiTools v1r3, MuonAssociators v3r1
  . Fix doxygen warnings

- In MuonAssociators v3r1, L0Calo v9r8
  . Adapt to Gaudi v19r4 handling of rootInTES

- In MuonAssociators v3r1
  . Remove obsolete MuonAssociatos_load.cpp file

</PRE><H1><A NAME=v6r5>2007-05-15 LbcomSys v6r5</A></H1><PRE>
This version uses Gaudi v19r3 and LHCb v22r5

- Packages modified: Associators v3r5, RichTools v2r13, OTMonitor v2r6

- In Associators v3r5
  . Add algorithm that merges the 4 tracking detector relations tables into one
  . Remove Associators_load.cpp file

- In RichTools v2r13
  . Fix how the 'default' tool mappings are handled in RichToolRegistry
    (previously was not working) + Add a more complete list of default tools

- In OTMonitor v2r6
  . Added OTTime classification tool provided by M. Needham
  . Added expert check options	for Boole

</PRE><H1><A NAME=v6r4>2007-04-23 LbcomSys v6r4</A></H1><PRE>
This version uses Gaudi v19r3 and LHCb v22r4

- Packages added:    VeloTools (moved from REC)
- Packages modified: VeloTools v1r2, OTMonitor v2r5, STDAQ v3r0, RichDAQ v3r10,
                     RichTools v2r12, L0Muon v7r1

- In VeloTools v1r2
  . Returned value of the fractional strip position changed to the range (0., 1.)
    instead of (-0.5, 0.5), for consistency with real TELL1 data format

- In VeloTools v1r2, OTMonitor v2r5
  . Fixed all unchecked StatusCodes

- In STDAQ v3r0
  . Fixes to Raw bank format to correspond to real data:
    + Corrected interstrip fraction for rotated modules
    + The strip number for isf!=0 was corrected
    + Corrected order of the ADC-values
    + RawBank version number incremented. Decoding for DC06 is still available
  . STClustersToRawBankAlg: Moved the deletion STClustersOnBoard to finalize.

- In RichDAQ v3r10
  . RichFillRawBuffer produces bank version 129 by default (2007 L1 firmware)
  . Move various header classes to RichKernel, to allow access to the decoded
    information outside RichDAQ
  . Various speed optimisation updates

- In RichTools v2r12
  . Update RichSmartIDTool to return StatusCodes for SmartID -> position methods
  . Add explicit constructor for Rich::HPDPixelCluster
  . Adapt to changes in RichKernel

- In L0Muon v7r1
  . In L0MuonCandidateFromRaw: Fix the size of the loop over the bank data
  . Remove obsolete file L0Muon_load.cpp

</PRE><H1><A NAME=v6r3>2007-03-23 LbcomSys v6r3</A></H1><PRE>
This version uses Gaudi v19r3 and LHCb v22r3

Packages modified: RichDAQ v3r9, RichTools v2r11, RichMCTools v3r5,
  RichMCMonitors v1r2, STAlgorithms v2r1, STTools v3r1, STCheckers v2r1,
  STAssociators v1r4, STDAQ v2r9, SiTools v1r2

- In RichDAQ v3r9
  . Add support for ALICE zero-suppressed mode data in the LHCb5 version
  . Replace use of Gaudi format with boost::format to fix various issues

- In RichTools v2r11
  . Add new method to compute the global position of a cluster of RichSmartIDs

- In RichMCTools v3r5
  . New methods for HPD Pixel clusters

- In STAlgorithms v2r1
  . STDepositCreator: findDigit returns STDigit instead of MCSTDigit
  . STDepositCreator: addNeighbours correct for 1st and last digit

- In STTools v3r1
  . Add missing include file.

- In STCheckers v2r1
  . Put back the HistFun.h file and unbook the histograms in STEffChecker.

- In STAssociators v1r4
  . Make minimum fraction of charge (m_minFrac) consistent.

- In STAlgorithms v2r1, STTools v3r1, STAssociators v1r4
  . Make joboptions start with a capital.
  . Minor cosmetic changes. Removal of obsolete code.

- In RichMCTools v3r5, STAlgorithms v2r1, STTools v3r1, STCheckers v2r1,
     STAssociators v1r4, STDAQ v2r9, SiTools v1r2
  . Some fixes for missing StatusCode tests

- In RichDAQ v3r9, RichTools v2r11, RichMCMonitors v1r2, RichMCTools v3r5,
     STAlgorithms v2r1, STTools v3r1, STCheckers v2r1, STAssociators v1r4,
     STDAQ v2r9, SiTools v1r2
  . Remove obsolete xxx_load.cpp file

- In RichDAQ v3r9, RichTools v2r11, RichMCMonitors v1r2, RichMCTools v3r5,
     STAlgorithms v2r1, STTools v3r1, STAssociators v1r4,STDAQ v2r9, SiTools v1r2
  . Fix doxygen warnings

</PRE><H1><A NAME=v6r2>2007-03-05 LbcomSys v6r2</A></H1><PRE>
This version uses Gaudi v19r2 and LHCb v22r2

Packages modified:  L0Calo v9r7, OTMonitor v2r4, VeloSimulation v2r5

- In L0Calo v9r7
  . Adapt to code changes in CaloDAQ v3r1
  . Protect against the possibility to have Pin-diode FE-Cards in condDB

- In VeloSimulation v2r5
  . Bug fix to get rid of biased residuals

- In L0Calo v9r7, OTMonitor v2r4, VeloSimulation v2r5
  . Remove obsolete xxx_load.cpp file
  . Remove LHCbDefinitions includes

- In L0Calo v9r7, OTMonitor v2r4
  . Fix a doxygen warning

</PRE><H1><A NAME=v6r1>2007-02-07 LbcomSys v6r1</A></H1><PRE>
This version uses Gaudi v19r1 and LHCb v22r1

Packages modified: RichDAQ v3r7, RichMCMonitors v1r1, RichMCTools v3r4,
                   RichTools v2r10

- In RichDAQ v3r7
  . New data format version (encoding and decoding) to match the latest L1
    firmware. Not yet used in Boole simulation
    + Encoding and decoding now requires the ODIN data object, due to new
      data integrity checks in the RICH data format.
  . Split pixel clustering code out of the suppression tool into a standalone
    clustering tool, that can then be used in other applications.
    + New pixel cluster object added to RichKernel

- In RichTools v2r10
  . Use new method in DeRichBeamPipe that only tests for presence of an
    intersection without computing the points
  . Make RichRayTrace::reflectFlatPlane a public method

- In RichDAQ v3r7, RichMCMonitors v1r1, RichMCTools v3r4, RichTools v2r10
  . Updates for new RICH namespaces

- In RichTools v2r10
  . Remove LHCbDefinitions includes

</PRE><H1><A NAME=v6r0>2007-01-23 LbcomSys v6r0</A></H1><PRE>
This version uses Gaudi v19r1 and LHCb v22r0.
It introduces the use of CMT Install areas

Packages added:    SiTools v1r1         - Tools shared by Velo and ST
                   MuonAssociators v3r0 - Previously in Boole
Packages modified: STAssociators v1r3, STCheckers v2r0, STAlgorithms v2r0
                   STTools v3r0, STDAQ v2r8

- In STAssociators v1r3, STCheckers v2r0, STAlgorithms v2r0, STTools v3r0,
     STDAQ v2r8, SiTools v1r1
  . Use DECLARE_xxx_FACTORY macros

- In STCheckers v2r0, STAlgorithms v2r0, STTools v3r0
  . Get SystemOfUnits.h from GaudiKernel

- In STAlgorithms v2r0, STTools v3r0
  . Get LHCbMath.h from LHCbMath (needs LHCb v22r0)

- In STCheckers v2r0
  . Change naming of checkers and monitor algorithms according to naming
    convention
  . Coding conventions: Joboptions start with a capital
  . Various internal cleanups

- In MuonAssociators v3r0
  . Add a link table bewteen MuonCoords and MCParticle
  . Fix some unchecked StatusCodes

</PRE><H1><A NAME=v5r9>2006-12-01 LbcomSys v5r9</A></H1><PRE>
This version uses Gaudi v18r11 and LHCb v21r12

Packages added:    RichMCMonitors - Monitors using only MCEvent information
Packages modified: L0Calo v9r6, RichDAQ v3r7, RichTools v2r9, RichMCTools v3r3

- In L0Calo v9r6:
  . Add rootOnTES() prefix where needed, for processing Time Alignement Events

- In RichDAQ v3r7
  . Fixes for removal of 'using namespace LHCb' in DeRichSystem.h in RichDet

- In RichTools v2r9
  . Add ability to check for beam pipe intersections during ray-tracing

- In RichMCTools v3r3
  . Add new methods to MC history tool to be able to test for the presence
    of MC information

</PRE><H1><A NAME=v5r8>2006-11-07 LbcomSys v5r8</A></H1><PRE>
This version uses Gaudi v18r10 and LHCb v21r11

- Packages modified: VeloAlgorithms v4r6, STDAQ v2r7, RichTools v2r8, L0Calo v9r5

- In VeloAlgorithms v4r6:
  . Changed the output level for the VeloClusterMoni table to info().
  . Changed x-axis range for histograms plotting sensor number so that all
    sensors are plotted.

- In STDAQ v2r7:
  . speed up light cluster making by factor of two

- In RichTools v2r8
  . Tidy up RichSmartID tool

- In L0Calo v9r5
  . Split L0CaloCandidatesFromRaw into a simple algorithm and a tool doing the
    real conversion from Raw Bank to TES objects.
  . Use this tool to put the result of L0CaloAlg directly on TES if the option
    StoreInBuffer is false (default true)

</PRE><H1><A NAME=v5r7>2006-10-27 LbcomSys v5r7</A></H1><PRE>
This version uses Gaudi v18r9 and LHCb v21r10

</PRE><H1><A NAME=v5r6>2006-10-20 LbcomSys v5r6</A></H1><PRE>
This version uses Gaudi v18r8 and LHCb v21r9

- Packages added:    L0Muon v7r0   - replaces L0MuonTriger
  Packages removed:  L0MuonTrigger - replaced by L0Muon
- Packages modified: L0DU v7r4, CaloAssociators v6r3, RichDAQ v3r6,
                     RichTools v2r6

- In L0DU v7r4
  . Add options to rerun L0 from the RawEvent (L0.opts, L0Sequence.opts)
  . Add options with setup for lumi=1,2,3,4,5,6 (Marseilles tuning for RTTC data)

- In CaloAssociators v6r3
  . Fix and clean options

- In RichDAQ v3r6
  . Major overhaul to add support for test beam data formats (see details in
    package release notes)

- In RichTools v2r6
  . Update to mirror segment finding to add self-test code
  . Update Radiator tool to adpat to new RichRadIntersection class
  . Update to RichSmartID sorting
  . Add option to RichRayTracing tool to disable use of secondary mirrors

</PRE><H1><A NAME=v5r5>2006-09-22 LbcomSys v5r5</A></H1><PRE>
This version uses Gaudi v18r7 and LHCb v21r8

- Packages added: VeloAlgorithms v4r5 - Moved from BooleSys for use by Vetra
                  VeloSimulation v2r4 - Moved from BooleSys for use by Vetra

- Packages modified: PuVeto v7r2, Associators v3r4, STCheckers v1r3

- In PuVeto v7r2
  . New algorithm PuVetoFillRawBuffer to produce the Raw Buffer information.
    In fact the central strip of each group of 4 is coded, not the original
    strip, and duplicates are removed. This is closer to the hardware.
  . PuVetoAlg starts from the Raw Event bank to compute the decision, and
    then can be used for play-back i.e. reprocessing in DaVinci.

- In Associators v3r4
  . MCParticle2MCHit now produces only the Linker table. DataOnDemand options
    updated accordingly.

- In STCheckers v1r3
  . Adapt STEffMonitor to use the Linker association of MCParticle2MCHit
  . STClusterChecker: moved neighbour sum histograms to fullDetail

</PRE><H1><A NAME=v5r4>2006-09-05 LbcomSys v5r4</A></H1><PRE>
This version uses Gaudi v18r7 and LHCb v21r7

- Packages modified: L0Calo v9r4, VeloDAQ v3r5, RichDAQ v3r5, RichTools v2r6,
                     RichMCTools v3r2, Associators v3r3

- In L0Calo v9r4
  . Fix a nasty problem in connecting HCAL to ECAL cards: The first cell of the
    first HCAL card doesn't exist -> its size was zero, and then no ECAL-HCAL
    connection was made. Found by Valgrind!

- In VeloDAQ v3r5
  . Changes for use in test beam. No changes in default behaviour:
    + Use sensor/Tell1 mapping if available to get source ID
    + Added option to DecodeVeloRawBuffer to decode clusters when TELL1 encodes
      chip channels instead of software strip numbers.

- In RichDAQ v3r5
  . In RichHighOccHPDSuppressionTool, add option to turn off running occupancy
    average calculation (default)
  . In pixel suppression tools, allow different instances for RICH1 and RICH2,
    with different configurations
  . Remove incorrect HPD occupancy check in pixel suppression tool

- In RichTools v2r6
  . Improvements to ray tracing tool

- In RichMCTools v3r2
  . Updates due to changes in ray tracing interface and configuration
  . Adapt to changes in MCRichDigit

- In Associators v3r3
  . Make also Link table by default
  . Update job options for transparent use in Brunel

</PRE><H1><A NAME=v5r3p1>2006-08-01 LbcomSys v5r3p1</A></H1><PRE>
This version uses Gaudi v18r6 and LHCb v21r4.
There are no code changes relative to Lbcom v5r3

</PRE><H1><A NAME=v5r3>2006-07-24 LbcomSys v5r3</A></H1><PRE>
This version uses Gaudi v18r6 and LHCb v21r3.

- Packages modified: VeloDAQ v3r4, OTAssociators v4r1, OTMonitor v2r3

- In VeloDAQ v3r4
  . Remove sorting from decoding to full clusters, to speed up
  . Speed up lite cluster decoding (MsgSvc usage, resize container once only)

- In OTAssociators v4r1
  . Move to GaudiKernel/SystemOfUnits
  . Minor cleanups

- In OTMonitor v2r3
  . Minor cleanups
  . Normalise occupancy histograms per event

</PRE><H1><A NAME=v5r2>2006-06-30 LbcomSys v5r2</A></H1><PRE>
This version uses Gaudi v18r5 and LHCb v21r2.

- Packages modified: VeloDAQ v3r3

- In VeloDAQ v3r3:
  . Added TELL1 source ID to sensor number mapping in decoding

</PRE><H1><A NAME=v5r1>2006-06-15 LbcomSys v5r1</A></H1><PRE>
This version uses Gaudi v18r5 and LHCb v21r1.

- Packages modified: L0DU v7r3, Associators v3r2p1, RichTools v2r5,
                     RichMCTools v3r1

- In L0DU v7r3:
  . Protection added in src/L0CandidateTool.cpp:
    L0DU can run even if one L0ProcessorData container is not available
  . Add a simple algorithm (L0DUFromRaw) to extract the L0DUReport from RawEvent
  . Default options file L0DUFromRaw.opts added
  . L0Monitor modifed: report Location can be set via options.

- In Associators v3r2p1
  . Add a missing use in requirements

- In RichTools v2r5
  . Add work around to NaNs when calculating average HPD position from extreme
    pixel positions, due to failure in HPD demagnification.

- In RichMCTools v3r1
  . Update MC truth tool to work better with DC06
  . Suppress unneccessary Warning messages to debug level

</PRE><H1><A NAME=v5r0>2006-05-17 LbcomSys v5r0</A></H1><PRE>
This version uses Gaudi v18r4 and LHCb v21r0.

- Packages modified: RichDAQ v3r4, RichTools v2r4, STDAQ v2r6, STTools v2r1p1,
    VeloAssociators v2r2, CaloAssociators v6r2, L0DU v7r2, L0Calo v9r3

- In RichDAQ v3r4:
  . Fix minor bug in reading beyond the end of the RawBank data block
  . Add new DAQ bank versions where the pixel rows are inverted, to
    match the electronics
  . Add ALICE mode encoding and decoding options

- In RichTools v2r4:
  . Adapt to changes in radiator names
  . Allow RichMirrorSegFinder to operate with spherical mirrors only on
	  one side of Rich2. Useful for testbeam.

- In STDAQ v2r6:
  . Bug fix in decoding ADC values

- In STTools v2r1p1:
  . Add options file for Brunel

- In VeloAssociators v2r2:
  . Adapt to move of SystemOfUnits to GaudiKernel

- In L0DU v7r2, L0Calo v9r3, CaloAssociators v6r2:
  . Adapt to Gaudi::Units

</PRE><H1><A NAME=v4r4>2006-05-02 LbcomSys v4r4</A></H1><PRE>
This version uses Gaudi v18r3 and LHCb v20r4.

- Packages modified: L0MuonTrigger v5r3, STAlgorithms v1r3

- In L0MuonTrigger v5r3:
  . Changes to allow running in DaVinci from RawBuffer without making MuonCoords
  . Remove dependency on RecEvent

- In STAlgorithms v1r3:
  . Increase the thresholds for now, to be reviewed at the end of the year

</PRE><H1><A NAME=v4r3>2006-04-19 LbcomSys v4r3</A></H1><PRE>
This version uses Gaudi v18r3 and LHCb v20r3.

- Packages modified: CaloAssociators v6r1, Associators v3r2, STAssociators v1r2,
    STDAQ v2r5, OTMonitor v2r2, L0Calo v9r2, L0DU v7r1p2, L0MuonTrigger v5r2,
    VeloDAQ v3r2, STAlgorithms v1r2, STCheckers v1r2

- In CaloAssociators v6r1:
  . Calo2MC.h, CaloMCTools.h moved to CaloUtils v6r1

- In Associators v3r2:
  . Small improvements to code, bug fix for Linker table paths

- In STAssociators v1r2:
  . Change logic of cluster to hit associator (weight by charge)
  . Change logic of cluster to particle associator

- In STDAQ v2r5
  . Bug fix in decoding

- In OTMonitor v2r2:
  . Adapt to GaudiHistoAlg

- In L0Calo v9r2:
  . Split the Raw Bank produced by L0CaloCandidate into two banks, one for
    HCAL and one for the rest

- In L0DU v7r1p2:
  . Remove printing of PuVeto counter, was not filled.

- In L0MuonTrigger v5r2:
  . Split the raw event in 5 banks to match the 5 TELL1s output

- In VeloDAQ v3r2:
  . Fixed code to always write a bank for every sensor, even the empty sensors

- In STAlgorithms v1r2, STCheckers v1r2:
  . Connect MCHit to geometry using sensDetID

</PRE><H1><A NAME=v4r2>2006-03-31 LbcomSys v4r2</A></H1><PRE>
This version uses Gaudi v18r3 and LHCb v20r2.

- Packages modified: PuVeto v7r1p1, L0DU v7r1p1, CaloAssociators v6r0p1,
                     OTMonitor v2r1

- In PuVeto v7r1p1, L0DU v7r1p1, CaloAssociators v6r0p1:
  . Backward compatible fixes to compile with Gaudi v18r3

- In PuVeto v7r1p1
  . Fix bug in initialise method caused in transition new DeVelo

- In OTMonitor v2r1:
  . Adapt to new OTDet interface

</PRE><H1><A NAME=v4r1>2006-03-24 LbcomSys v4r1</A></H1><PRE>
This version uses Gaudi v18r2 and LHCb v20r1.

- Packages modified: VeloDAQ v3r1, RichDAQ v3r3, STDAQ v2r4, STAlgorithms v1r1,
    STCheckers v1r1, STTools v2r1, STAssociators v1r1, Associators v3r1,
    VeloAssociators v2r1, L0DU v7r1, L0MuonTrigger v5r1, PuVeto v7r1, L0Calo v9r1
    RichTools v2r3

- In VeloDAQ v3r1:
  . Bug fixes in handling of interstrip position bits and threshold bit
  . Definition of less-than for VeloCluster, now same as for InternalVeloCluster
  . Various cosmetic fixes

- In RichDAQ v3r3:
  . Add pixel cluster suppression tool

- In STDAQ v2r4:
  . Changes to switch strip mapping for hybrids that are flipped.
    Requires XmlConditions v1r5 or greater

- In STAlgorithms v1r1:
  . Move STSummaryCreator to Rec/RecAlgs. Removes package dependency on RecEvent
  . round rather than floor ADC

- In STCheckers v1r1:
  . Minor tuning of STEffMonitor, STClusterResolution
  . Remove STNoiseClusterMonitor replace with STClusterClassification

- In STTools v2r1:
  . Fix bug in PositionTool

- In Associators v3r1:
  . Add possibility to also make Linker table

- In VeloAssociators v2r1:
  . VeloCluster2MCHitLinker and VeloCluster2MCParticleLinker

- In STAssociators v1r1:
  . Update options for new event model

- In L0DU v7r1:
  . change default property : fillRaw = true in L0DU.cpp

- In L0MuonTrigger v5r1:
  . Bug fix when encoding/decoding the L0ProcessorData, MuonCandidates

- In PuVeto v7r1:
  . Adapt to ne wDeVelo interface

- In L0Calo v9r1:
  . Fix CaloCandidate type in L0CaloCandidateFromRaw, plus related changes

</PRE><H1><A NAME=v4r0>2006-03-13 LbcomSys v4r0</A></H1><PRE>
This version uses Gaudi v18r2 and LHCb v20r0.
It is the first release for commissioning of the software for DC06.

It breaks all backward compatibility and introduces many new features, including
a major redesign of event model classes following the review in Autumn 2006,
changes for the 1MHz readout, changes to the geometry to introduce detector
tilts and capability for misalignement, and changes to change replace CLHEP with
MathCore.

All packages have been touched. Please look at release notes of the individual
packages for details.

</PRE><H1><A NAME=v3r3>2005-12-20 LbcomSys v3r3</A></H1><PRE>
This version is built against LHCb v19r4 and Gaudi v17r2.

- Packages modified: L0MuonTrigger v4r0, L0DU v6r10, L0Checker v3r2p2

- In L0MuonTrigger v4r0
  . L0mTriggerAlgorithm now writes into the RawBuffer
  . New algorithm L0MuonCandidatesFromRaw to write L0MuonCandidates
    from the raw buffer
  . Uses latest developements in L0MuonKernel
  . Change in the algo properties

- In L0DU v6r10, L0Checker v3r2p2
  . Fixes to use new L0MuonCandidates from L0MuonTrigger v4r0

</PRE><H1><A NAME=v3r2>2005-12-05 LbcomSys v3r2</A></H1><PRE>
This version is identical to v3r1 but built against LHCb v19r3

</PRE><H1><A NAME=v3r1>2005-11-18 LbcomSys v3r1</A></H1><PRE>
This version is built against LHCb v19r2 and Gaudi v17r2.

- New packages     : RichMCAssociators - Algorithms for asociation to MC truth

- Packages modified: RichTools v1r8, RichMCTools v2r7

- In RichTools v1r8
  . Improvements to RichTrackSegment and RichGeomPhoton creators
  . Add support for new Track event model. New tool RichTrSegMakerFromRecoTracks.
  . Add beginnings of support for conditions data base.
  . New tools for the spherical secondary mirrors
  . Import RichParticleProperties tool from RichRecTools

- In RichMCTools v2r7
  . Improvements to RichTrackSegment maker to avoid object copying
  . Add support for linker based TrStoredTrack MC associations
  . Add support for MC associations for the new track event model.
  . Add support for new DST summary objects MCRichDigitSummary which link
    RichSmartIDs to MCParticles and history codes.
  . Move algorithms BuildMCRichDigitLinks, MCPartToMCRichTrackAlg and
    MCRichHitToMCRichOpPhotAlg to new RichMCAssociators package

</PRE><H1><A NAME=v3r0>2005-11-15 LbcomSys v3r0</A></H1><PRE>
This version is built against LHCb v19r1 and Gaudi v17r2.

- Packages modified: L0Checker v3r2p1, ITAlgorithms v15r1

- In L0Checker v3r2p1
  . Move to GaudiTupleAlg

- In ITAlgorithms v15r1
  . Cluster by Beetle
  . Move to use ISTClusterPosition tool

</PRE><H1><A NAME=v2r5>2005-08-31 LbcomSys v2r5</A></H1><PRE>
This version is built against LHCb v18r9 and Gaudi v16r5.

The Lbcom packages are unchanged relative to v2r4

</PRE><H1><A NAME=v2r4>2005-07-18 LbcomSys v2r4</A></H1><PRE>
This version is built against LHCb v18r8 and Gaudi v16r5.
- Packages modified: L0Checker v3r1

- In DoxyFile.cfg
  . Get dot tool configuration from dottools.cfg, rather than from makedoc.py

- In L0Checker v3r1
  . Add new variables to end of L0Check::finalize summary
  . L0Check default is now to not fill histogram or N-tuple

</PRE><H1><A NAME=v2r3>2005-06-21 LbcomSys v2r3</A></H1><PRE>
This version is built against LHCb v18r7 and Gaudi v16r4.
- Packages modified: RichTools v1r7, RichMCTools v2r6

- In RichTools v1r7
  . Update mirror segment finder to be more efficient at locating correct mirror
  . Update Photon reconstruction tool (renamed RichPhotonRecoUsingQuarticSoln)
    to allow various bits to be turned off via job options.
    By default, the ambiguous photon test is not performed.
    Also, to use a trimmed down version of the quartic solver which skips
    solution not needed by the RICH

- In RichMCTools v2r6
  . Minor updates to MC navigation

</PRE><H1><A NAME=v2r2>2005-06-03 LbcomSys v2r2</A></H1><PRE>
This version is built against LHCb v18r6 and Gaudi v16r4.
- Packages added:    KaliMisCalo
- Packages modified: L0DU v6r9p1

- In KaliMisCalo v1r0:
  . Algorithms to miscalibrate CaloDigits, MCCaloDigits, MCCaloHits

- In L0DU v6r9p1:
  . Add $(L0DUOPTS)/L0.opts, for re-running L0 from DST in DaVinci or Panoramix
  . Remove obosolete Brunel.opts, NotBrunel.opts

</PRE><H1><A NAME=v2r1>2005-05-24 LbcomSys v2r1</A></H1><PRE>
This version is built against LHCb v18r5 and Gaudi v16r4.
Its contents are unchanged relative to LbcomSys v2r0

</PRE><H1><A NAME=v2r0>2005-05-10 LbcomSys v2r0</A></H1><PRE>
 Repackaging to create RecSys project
 - Packages moved to RecSys: RichRecTools, RichRecMCTools, RichRecCommon,
                             RichRecQC, TrExtrapolator, CaloReco, CaloPIDs
 - Packages added:    ITAlgorithms, ITCheckers, L0Checker
 - Packages modified: L0Calo v8r2

 - In ITAlgorithms v15r0:
   . Remove ITSignalToNoiseTool. Modify algorithms to use ISTSignalToNoiseTool.h
     instead (from STTools package).

 - In ITCheckers v2r5:
   . use ISTSignalToNoiseTool instead of IITSignalToNoiseTool

 - In L0Calo v8r2:
   . Delete RawEvent invalidated by changes to RawBuffer in L0CaloAlg

</PRE><H1><A NAME=v1r3>2005-04-19 LbcomSys v1r3</A></H1><PRE>
!===============================================================================
! 2005-04-19 - Marco Cattaneo
 - Move to LHCb v18r3
 - Packages modified: RichTools v1r6

 - In RichTools v1r6
   . Fix memory leaks in RichTrSegMakerFromTrStoredTracks when track segments
     are rejected

</PRE><H1><A NAME=v1r2>2005-04-05 LbcomSys v1r2</A></H1><PRE>
!===============================================================================
! 2005-04-05 - Marco Cattaneo
 - Move to LHCb v18r2
 - Packages modified: L0DU v6r9, L0MuonTrigger v3r0

 - In LbcomSys
   . Improvements to doxygen welcome page

 - In L0DU v6r9
   . Bandwidth division thresholds retuned for DC04 data

 - In L0MuonTrigger v3r0
   . Fixed memory leak problem
   . Repackaging and optimization of algorithm and underlying utilities
   . L0Muon banks written to L1Buffer

</PRE><H1><A NAME=v1r1>2005-03-08 LbcomSys v1r1</A></H1><PRE>
!===============================================================================
! 2005-03-08 - Marco Cattaneo
 - Move to Gaudi v16r2, LHCb v18r1
 - Packages modified: CaloReco v2r7p1, RichTools v1r5, RichMCTools v2r5,
     RichRecTools v2r14, RichRecMCTools v1r8, RichRecCommon v1r12, L0Calo v8r1,
     L0DU v6r8, PuVeto v6r0p1, CaloPIDs v2r4p1

 - In CaloReco v2r7p1
   . Fix options for new associators

 - In CaloPIDs v2r4p1
   . Fix options to remove unmatched "pragma print on"

 - In RichTools v1r5, RichMCTools v2r5, RichRecTools v2r14, RichRecMCTools v1r8
   . Various minor improvements

 - In RichRecCommon v1r12
   . Adapt to RichEvent v8r2 changes

 - In L0Calo v8r1, L0DU v6r8
   . Adapt to new L1Buffer bank types from DAQEvent v5r0 (backward incompatible)

</PRE><H1><A NAME=v1r0>2005-02-08 LbcomSys v2r0</A></H1><PRE>
!===============================================================================
! 2005-02-08 - Marco Cattaneo
 - First version. This project contains component libraries that are shared by
   several LHCb applications. It should not contain any exported header
   files or link libraries.

 - Initial packages:
     L0:   L0Calo v8r0, L0DU v6r7p3, L0MuonTrigger v2r3p1, PuVeto v6r0
     OT:   OTMonitor v1r1
     Tr:   TrExtrapolator v2r14
     Calo: CaloReco v2r7, CaloPIDs v2r4
     Rich: RichTools v1r4, RichMCTools v2r4, RichRecTools v2r13,
           RichRecCommon v1r11, RichRecQC v1r10

 - Backwards compatible fixes for CLHEP 1.9
  . Add a missing STL include (L0DU v6r7p3)

 - Backwards incompatible fixes for GaudiObjDesc v7r*
  . Adapt to new names of RichSmartID bitfield accessors (RichRecCommon v1r11)
</PRE>
