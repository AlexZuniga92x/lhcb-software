			DecisionUnit algorithm
			----------------------

Authors : Nicole Brun - Pascal Perret
Date    : 15 June 2001 


I - What is it ?
----------------

  It is the Level 0 decision unit algorithm in the Gaudi framework.

  It valids the L0 triggers for which the transverse energies are greater than
cut energies.

  The candidates are of type L0CaloCandidate or L0MuonCandidate; there are 
given respectively by the L0CaloAlg algorithm or the L0mTrigger algorithm.
  The candidate L0PileUpVeto is not treated.

  The decision is condensed in one object of type L0DUReport.

II - Where find it ?
--------------------

 It is the package L0DU in the directory L0.

III - Parameters of it 
_____________________

Name                | Default value               | Meaning
-------------------------------------------------------------------------
                    |      (string)
L0CaloCandidateData | "/Event/FE/L0/Calo"         | Calo container
L0MuonCandidateData | "/Event/MC/L0MuonCandidates"| Muon container
AcceptedData        | "/Event/FE/L0/L0Decis"       | Output decision container
                    |      (double) in GeV        | Energies of cut for :
EElCut1             | 2.65                        |   Electron  
EELCut2             | 2.65                        |
EGaCut1             | 3.82                        |   Photon
EGaCut2             | 3.82                        | 
EHaCut1             | 3.95                        |   Hadron
EHaCut2             | 3.95                        |
EPi0LCut1           | 4.10                        |   Pi0Local
EPi0LCut2           | 4.10                        |
EPi0GCut1           | 4.60                        |   Pi0Global
EPi0GCut2           | 4.60                        |
ESumEtCut1          | 5.00                        |   Sum(et)
ESumEtCut2          | 5.00                        |  
EMu1Cut1            | 0.61                        |   Muon1 (The greater)
EMu1Cut2            | 0.61                        |
ESumMuCut1          | 1.83                        |   Sum on n Muons
ESumMuCut2          | 1.83                        |
                    |      (int)                  | Scaling data for :
ScalEl              | 0                           |   Electron  
ScalEGa             | 0                           |   Photon
ScalEHa             | 0                           |   Hadron
ScalEPi0L           | 0                           |   Pi0Local
ScalEPi0G           | 0                           |   Pi0Global
ScalESumEt          | 0                           |   Sum(et)
ScalEMu1            | 0                           |   Muon1 (The greater)
ScalESumMu          | 0                           |   Sum on n Muons
NMuSumMu            | 8                           | Number n of Muons for SumMu

IV - Functions of it
--------------------

1 - Constructor
---------------

  Where parameters which can be set at run time are declared and associated 
to one default value for each.
 

2 - Initialize
--------------

  Check for the valid names of the input and output data containers; at the 
first name finded empty, the algorithm aborts.

3 - Execute
-----------

  At each event, the candidates retained by the DecisionUnit algorithm are :

- 1 electron
- 1 photon
- 1 hadron
- 1 Pi0Local
- 1 Pi0Global
- 1 Sum(et)

all or not given by the L0CaloAlg algorithm and the 

- 1 muon of greatest energy among the muons

given or not by the L0mTrigger algorithm.

  The Sum(pt) of n greatest muons is also a candidate.
 
  Trigger is declared accepted if energy of candidate is greater than first
energy of cut of this same candidate.
  Only if data scaling is greater than zero, the second energy of cut is used
to accept or not the trigger.

  Result is condensed in one data where two bits are affected to each LODU
candidate and to decision; one bit to say if trigger, one bit to say if 
trigger is with the second cut energy used only if data scaling is not zero.
Up to now for L0PileUpVeto, this two bits are always set to zero otherwise set to FALSE.

    
4 - Finalize
------------

  With no particularity.


V - Output mess level
----------------------

1 - In debbugging
-----------------

  Print candidates with parameters energies cut and data scaling.

  Print the result.


2 - In info
-----------

  Only to signal the intialisation phase.

3 _ In error
-----------

  To signal the cause

VI - How to use
--------------

  For one application
 
1 - In requirements
-------------------

  By adding lign :

use L0DU v1* L0

2- In options file
------------------

  - With Brunel,

by copy or include of fic :

$L0DUOPTS/Brunel.opts

in the BrunelOptions.txt

  - Without Brunel,

by copy or include of fic :

$L0DUOPTS/NotBrunel.opts

in the options fic of job.

$L0DUOPTS is defined after commands:
 
cmt config
source setup.csh

executed in the cmt directory of the application.
  












